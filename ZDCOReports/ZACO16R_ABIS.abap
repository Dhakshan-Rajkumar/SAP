************************************************************************
* Program Name      : ZACO16R_ABIS
* Author            : Hyung Jin Youn
* Creation Date     : 20/04/2004
* Specifications By : Deok-Kie Lee
* Pattern           : Report 1-1
* Development Request No: UD1K909644
* Add documentation :
* Description       : Report to audit data in a CBO table
* the BDC structures for BATCH INPUT processing
*
* Modifications Log
* Date   Developer   Request ID    Description
*
************************************************************************
* Comments
* This report was generated by SAP and changed by programmer
* The naming convension can be different from that
* in HMMA Development Standard Document (v2)
REPORT zaco16r_abis
   LINE-SIZE 253 NO STANDARD PAGE HEADING LINE-COUNT 000(001).

INCLUDE <symbol>.
INCLUDE <icon>.
SELECTION-SCREEN: BEGIN OF BLOCK prog
                           WITH FRAME TITLE text-f58.

TABLES ztco_abispost.
DATA %count-ztco_abispost(4) TYPE x.
DATA %linr-ztco_abispost(2).

TABLES aqldb.

INCLUDE rsaqexcd.

DATA: BEGIN OF %st_liste OCCURS 100,
          head(1),
          tab(3),
          line(6) TYPE n,
          cont(1) TYPE n,
          fint(1),
          finv(1),
          fcol(1) TYPE n,
          text(0253),
      END OF %st_liste.

DATA %data_selected(1).
DATA %glframe(1)  VALUE 'X' .
DATA %uflag(1).
DATA %ustflag(1).
DATA %grst_text(255).
DATA %glline TYPE i.
DATA %tabix LIKE sy-tabix.
DATA %prflag(1) TYPE x VALUE '02'.


DATA %perc(4) TYPE p DECIMALS 3.
DATA %p100(4) TYPE p DECIMALS 3 VALUE '100.000'.
DATA %rangct TYPE i.
DATA %rangcc(8).
DATA %subrc LIKE sy-subrc.

DATA: BEGIN OF %wa010 OCCURS 10,
            ztco_abispost-mbgbtr(16) TYPE p DECIMALS 03,
            ztco_abispost-chg_wkgbtr(16) TYPE p DECIMALS 02,
            BEGIN OF ztco_abispost,
                  ztco_abispost-meinb LIKE ztco_abispost-meinb,
                  ztco_abispost-waers LIKE ztco_abispost-waers,
            END OF ztco_abispost,
      END OF %wa010.

DATA: BEGIN OF %w0100 OCCURS 20,
            ztco_abispost-meinb LIKE ztco_abispost-meinb,
            ztco_abispost-mbgbtr(16) TYPE p DECIMALS 03,
      END OF %w0100.

DATA: BEGIN OF %w0101 OCCURS 20,
            ztco_abispost-meinb LIKE ztco_abispost-meinb,
            ztco_abispost-mbgbtr(16) TYPE p DECIMALS 03,
      END OF %w0101.

DATA: BEGIN OF %w0102 OCCURS 20,
            ztco_abispost-meinb LIKE ztco_abispost-meinb,
            ztco_abispost-mbgbtr(16) TYPE p DECIMALS 03,
      END OF %w0102.

DATA: BEGIN OF %w0103 OCCURS 20,
            ztco_abispost-meinb LIKE ztco_abispost-meinb,
            ztco_abispost-mbgbtr(16) TYPE p DECIMALS 03,
      END OF %w0103.

DATA: BEGIN OF %w0104 OCCURS 20,
            ztco_abispost-meinb LIKE ztco_abispost-meinb,
            ztco_abispost-mbgbtr(16) TYPE p DECIMALS 03,
      END OF %w0104.

DATA: BEGIN OF %w0105 OCCURS 20,
            ztco_abispost-meinb LIKE ztco_abispost-meinb,
            ztco_abispost-mbgbtr(16) TYPE p DECIMALS 03,
      END OF %w0105.

DATA: BEGIN OF %w0106 OCCURS 20,
            ztco_abispost-meinb LIKE ztco_abispost-meinb,
            ztco_abispost-mbgbtr(16) TYPE p DECIMALS 03,
      END OF %w0106.

DATA: BEGIN OF %w0107 OCCURS 20,
            ztco_abispost-meinb LIKE ztco_abispost-meinb,
            ztco_abispost-mbgbtr(16) TYPE p DECIMALS 03,
      END OF %w0107.

DATA: BEGIN OF %w0200 OCCURS 20,
            ztco_abispost-waers LIKE ztco_abispost-waers,
            ztco_abispost-chg_wkgbtr(16) TYPE p DECIMALS 02,
      END OF %w0200.

DATA: BEGIN OF %w0201 OCCURS 20,
            ztco_abispost-waers LIKE ztco_abispost-waers,
            ztco_abispost-chg_wkgbtr(16) TYPE p DECIMALS 02,
      END OF %w0201.

DATA: BEGIN OF %w0202 OCCURS 20,
            ztco_abispost-waers LIKE ztco_abispost-waers,
            ztco_abispost-chg_wkgbtr(16) TYPE p DECIMALS 02,
      END OF %w0202.

DATA: BEGIN OF %w0203 OCCURS 20,
            ztco_abispost-waers LIKE ztco_abispost-waers,
            ztco_abispost-chg_wkgbtr(16) TYPE p DECIMALS 02,
      END OF %w0203.

DATA: BEGIN OF %w0204 OCCURS 20,
            ztco_abispost-waers LIKE ztco_abispost-waers,
            ztco_abispost-chg_wkgbtr(16) TYPE p DECIMALS 02,
      END OF %w0204.

DATA: BEGIN OF %w0205 OCCURS 20,
            ztco_abispost-waers LIKE ztco_abispost-waers,
            ztco_abispost-chg_wkgbtr(16) TYPE p DECIMALS 02,
      END OF %w0205.

DATA: BEGIN OF %w0206 OCCURS 20,
            ztco_abispost-waers LIKE ztco_abispost-waers,
            ztco_abispost-chg_wkgbtr(16) TYPE p DECIMALS 02,
      END OF %w0206.

DATA: BEGIN OF %w0207 OCCURS 20,
            ztco_abispost-waers LIKE ztco_abispost-waers,
            ztco_abispost-chg_wkgbtr(16) TYPE p DECIMALS 02,
      END OF %w0207.
SELECT-OPTIONS sp$00001 FOR ztco_abispost-kokrs MEMORY ID cac.
SELECT-OPTIONS sp$00002 FOR ztco_abispost-gjahr MEMORY ID gjr.
SELECT-OPTIONS sp$00003 FOR ztco_abispost-period MEMORY ID vpe.
SELECT-OPTIONS sp$00004 FOR ztco_abispost-versn MEMORY ID kvs.
SELECT-OPTIONS sp$00005 FOR ztco_abispost-kstar MEMORY ID kat.
SELECT-OPTIONS sp$00006 FOR ztco_abispost-matnr MEMORY ID mat.
SELECT-OPTIONS sp$00007 FOR ztco_abispost-werks MEMORY ID wrk.
SELECT-OPTIONS sp$00008 FOR ztco_abispost-io_aufnr MEMORY ID anr.
SELECT-OPTIONS sp$00009 FOR ztco_abispost-pcc_aufnr.
SELECT-OPTIONS sp$00010 FOR ztco_abispost-fsc_matnr.
SELECT-OPTIONS sp$00011 FOR ztco_abispost-verid MEMORY ID ver.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN: BEGIN OF BLOCK direct
                  WITH FRAME TITLE text-f59.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %alv RADIOBUTTON GROUP func USER-COMMAND outbut
                         DEFAULT 'X' .
SELECTION-SCREEN: COMMENT 4(26) text-f72 FOR FIELD %alv.
PARAMETERS:       %alvl TYPE slis_vari.
SELECTION-SCREEN: PUSHBUTTON 72(4) pb%exco USER-COMMAND expcol.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %nofunc RADIOBUTTON GROUP func MODIF ID old.
SELECTION-SCREEN: COMMENT 4(26) text-f66 FOR FIELD %nofunc
                                         MODIF ID old.
PARAMETERS:       %tview RADIOBUTTON GROUP func MODIF ID old.
SELECTION-SCREEN: COMMENT 34(26) text-f68 FOR FIELD %tview
                                          MODIF ID old,
                  END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %graph RADIOBUTTON GROUP func MODIF ID old.
SELECTION-SCREEN: COMMENT 4(26) text-f61 FOR FIELD %graph
                                         MODIF ID old.
PARAMETERS:       %text RADIOBUTTON GROUP func MODIF ID old.
SELECTION-SCREEN: COMMENT 34(26) text-f69 FOR FIELD %text
                                          MODIF ID old,
                  END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %abc RADIOBUTTON GROUP func MODIF ID old.
SELECTION-SCREEN: COMMENT 4(26) text-f70 FOR FIELD %abc
                                         MODIF ID old.
PARAMETERS:       %excel RADIOBUTTON GROUP func MODIF ID old.
SELECTION-SCREEN: COMMENT 34(26) text-f60 FOR FIELD %excel
                                         MODIF ID old,
                  END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %eis RADIOBUTTON GROUP func MODIF ID old.
SELECTION-SCREEN: COMMENT 4(26) text-f63 FOR FIELD %eis
                                         MODIF ID old.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %xint RADIOBUTTON GROUP func MODIF ID xin.
SELECTION-SCREEN: COMMENT 4(26) text-f73 FOR FIELD %xint
                                         MODIF ID xin.
PARAMETERS:       %xintk(30) LOWER CASE MODIF ID xin.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %down RADIOBUTTON GROUP func MODIF ID old.
SELECTION-SCREEN: COMMENT 4(26) text-f64 FOR FIELD %down
                                         MODIF ID old.
PARAMETERS:       %path(132) LOWER CASE MODIF ID old.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %save RADIOBUTTON GROUP func MODIF ID old.
SELECTION-SCREEN: COMMENT 4(26) text-f62 FOR FIELD %save
                                         MODIF ID old.
PARAMETERS:       %listid(40) LOWER CASE MODIF ID old.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: END OF BLOCK direct.
SELECTION-SCREEN: END OF BLOCK prog.

DATA: BEGIN OF %g00 OCCURS 100,
            ztco_abispost-kokrs LIKE ztco_abispost-kokrs,
            ztco_abispost-gjahr LIKE ztco_abispost-gjahr,
            ztco_abispost-period LIKE ztco_abispost-period,
            ztco_abispost-versn LIKE ztco_abispost-versn,
            ztco_abispost-kstar LIKE ztco_abispost-kstar,
            ztco_abispost-matnr LIKE ztco_abispost-matnr,
            ztco_abispost-STYPE LIKE ztco_abispost-STYPE,
            ztco_abispost-TYPE  LIKE ztco_abispost-TYPE,
            ztco_abispost-werks LIKE ztco_abispost-werks,
            ztco_abispost-io_aufnr LIKE ztco_abispost-io_aufnr,
            ztco_abispost-pcc_aufnr LIKE ztco_abispost-pcc_aufnr,
            ztco_abispost-chg_wkgbtr LIKE ztco_abispost-chg_wkgbtr,
            ztco_abispost-waers-0110 LIKE ztco_abispost-waers,
            ztco_abispost-waers LIKE ztco_abispost-waers,
            ztco_abispost-rate_child LIKE ztco_abispost-rate_child,
            ztco_abispost-kstar_rate LIKE ztco_abispost-kstar_rate,
            ztco_abispost-belnr LIKE ztco_abispost-belnr,
            ztco_abispost-buzei LIKE ztco_abispost-buzei,
            ztco_abispost-mbgbtr LIKE ztco_abispost-mbgbtr,
            ztco_abispost-meinb-0116 LIKE ztco_abispost-meinb,
            ztco_abispost-fsc_matnr LIKE ztco_abispost-fsc_matnr,
            ztco_abispost-verid LIKE ztco_abispost-verid,
            ztco_abispost-erdat LIKE ztco_abispost-erdat,
            ztco_abispost-erzet LIKE ztco_abispost-erzet,
            ztco_abispost-ernam LIKE ztco_abispost-ernam,
            ztco_abispost-aedat LIKE ztco_abispost-aedat,
            ztco_abispost-aezet LIKE ztco_abispost-aezet,
            ztco_abispost-aenam LIKE ztco_abispost-aenam,
      END OF %g00.
DATA: BEGIN OF %%g00,
            ztco_abispost-kokrs(004),
            ztco_abispost-gjahr(004),
            ztco_abispost-period(003),
            ztco_abispost-versn(003),
            ztco_abispost-kstar(010),
            ztco_abispost-matnr(040),
            ztco_abispost-STYPE(005),
            ztco_abispost-TYPE(004),
            ztco_abispost-werks(004),
            ztco_abispost-io_aufnr(012),
            ztco_abispost-pcc_aufnr(012),
            ztco_abispost-chg_wkgbtr(015),
            ztco_abispost-waers-0110 LIKE ztco_abispost-waers,
            ztco_abispost-waers(005),
            ztco_abispost-rate_child(019),
            ztco_abispost-kstar_rate(019),
            ztco_abispost-belnr(010),
            ztco_abispost-buzei(003),
            ztco_abispost-mbgbtr(016),
            ztco_abispost-meinb-0116 LIKE ztco_abispost-meinb,
            ztco_abispost-fsc_matnr(040),
            ztco_abispost-verid(004),
            ztco_abispost-erdat(010),
            ztco_abispost-erzet(008),
            ztco_abispost-ernam(012),
            ztco_abispost-aedat(010),
            ztco_abispost-aezet(008),
            ztco_abispost-aenam(012),
      END OF %%g00.
DATA %znr TYPE i.
DATA %lznr TYPE i VALUE 99999.
FIELD-GROUPS header.
DATA %group01.
DATA %%ztco_abispost-kokrs LIKE ztco_abispost-kokrs.
DATA %%%ztco_abispost-kokrs(1).
DATA %group0101.
DATA %group0201.

DATA %group02.
DATA %%ztco_abispost-gjahr LIKE ztco_abispost-gjahr.
DATA %%%ztco_abispost-gjahr(1).
DATA %group0102.
DATA %group0202.
DATA %group03.
DATA %%ztco_abispost-period LIKE ztco_abispost-period.
DATA %%%ztco_abispost-period(1).
DATA %group0103.
DATA %group0203.
DATA %group04.
DATA %%ztco_abispost-versn LIKE ztco_abispost-versn.
DATA %%%ztco_abispost-versn(1).
DATA %group0104.
DATA %group0204.
DATA %group05.
DATA %%ztco_abispost-kstar LIKE ztco_abispost-kstar.
DATA %%%ztco_abispost-kstar(1).
DATA %group0105.
DATA %group0205.
DATA %group06.
DATA %%ztco_abispost-matnr LIKE ztco_abispost-matnr.
DATA %%%ztco_abispost-matnr(1).
DATA %group0106.
DATA %group0206.

DATA %group07.
DATA %%ztco_abispost-STYPE LIKE ztco_abispost-STYPE.
DATA %%%ztco_abispost-STYPE(1).
DATA %group0107.
DATA %group0207.

DATA %group08.
DATA %%ztco_abispost-TYPE LIKE ztco_abispost-TYPE.
DATA %%%ztco_abispost-TYPE(1).
DATA %group0108.
DATA %group0208.

DATA %group09.
DATA %%ztco_abispost-werks LIKE ztco_abispost-werks.
DATA %%%ztco_abispost-werks(1).
DATA %group0109.
DATA %group0209.
FIELD-GROUPS %fg01.
DATA %any-01.
DATA %ext-ztco_abispost01.
FIELD-GROUPS %fg02.
DATA %any-02.
FIELD-GROUPS %fgztco_abispost01.
DATA %sum-ztco_abispost-rate_child(16) TYPE p  DECIMALS 07 .
DATA %sum-ztco_abispost-kstar_rate(16) TYPE p  DECIMALS 07 .
FIELD-GROUPS %fgwrztco_abispost01.

CONTROLS tview100 TYPE TABLEVIEW USING SCREEN 100.

AT SELECTION-SCREEN .
  PERFORM alvl_check(rsaqexce) USING %alvl 'G00'.
  PERFORM testmode(rsaqexce).
  PERFORM check_expcol(rsaqexce) USING %alv.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR %alvl .
  PERFORM alvl_value_request(rsaqexce) USING %alvl 'G00'.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR %xintk .
  PERFORM xint_value_request(rsaqexce).

AT SELECTION-SCREEN OUTPUT .

  PERFORM rinit(rsaqbrst).
  PERFORM set_expcol(rsaqexce) USING %alv pb%exco.
  PERFORM alvl_set_invisible(rsaqexce).
  PERFORM set_xint_params(rsaqexce).

INITIALIZATION.
  PERFORM init_xint(rsaqexce).
  PERFORM set_www_flags(rsaqexce).
  PERFORM init_print_params(rsaqexce).

START-OF-SELECTION.
  INSERT %sum-ztco_abispost-rate_child INTO %fgztco_abispost01.
  INSERT %sum-ztco_abispost-kstar_rate INTO %fgztco_abispost01.
  INSERT ztco_abispost-meinb INTO %fgwrztco_abispost01.
  INSERT ztco_abispost-mbgbtr INTO %fgwrztco_abispost01.
  INSERT ztco_abispost-waers INTO %fgwrztco_abispost01.
  INSERT ztco_abispost-chg_wkgbtr INTO %fgwrztco_abispost01.
  INSERT ztco_abispost-kokrs INTO header.
  INSERT ztco_abispost-gjahr INTO header.
  INSERT ztco_abispost-period INTO header.
  INSERT ztco_abispost-versn INTO header.
  INSERT ztco_abispost-kstar INTO header.
  INSERT ztco_abispost-matnr INTO header.
  INSERT ztco_abispost-stype INTO header.
  INSERT ztco_abispost-type  INTO header.
  INSERT ztco_abispost-werks INTO header.
  INSERT %count-ztco_abispost INTO header.
  INSERT %linr-ztco_abispost INTO header.
  INSERT ztco_abispost-io_aufnr INTO %fg01.
  INSERT ztco_abispost-pcc_aufnr INTO %fg01.
  INSERT ztco_abispost-chg_wkgbtr INTO %fg01.
  INSERT ztco_abispost-waers INTO %fg01.
  INSERT ztco_abispost-waers INTO %fg01.
  INSERT ztco_abispost-rate_child INTO %fg01.
  INSERT ztco_abispost-kstar_rate INTO %fg01.
  INSERT ztco_abispost-belnr INTO %fg01.
  INSERT ztco_abispost-buzei INTO %fg01.
  INSERT ztco_abispost-mbgbtr INTO %fg01.
  INSERT ztco_abispost-meinb INTO %fg01.
  INSERT ztco_abispost-fsc_matnr INTO %fg02.
  INSERT ztco_abispost-verid INTO %fg02.
  INSERT ztco_abispost-erdat INTO %fg02.
  INSERT ztco_abispost-erzet INTO %fg02.
  INSERT ztco_abispost-ernam INTO %fg02.
  INSERT ztco_abispost-aedat INTO %fg02.
  INSERT ztco_abispost-aezet INTO %fg02.
  INSERT ztco_abispost-aenam INTO %fg02.
  PERFORM init_texthandling(rsaqexce) USING 'CL_TEXT_IDENTIFIER' ' '
          'SYSTQV000000000000000026'.
  PERFORM authority_begin(rsaqexce) USING 'CL_QUERY_TAB_ACCESS_AUTHORITY'.
  PERFORM authority(rsaqexce) USING 'ZTCO_ABISPOST'
                                    'CL_QUERY_TAB_ACCESS_AUTHORITY'.
  PERFORM authority_end(rsaqexce) USING 'CL_QUERY_TAB_ACCESS_AUTHORITY'.
  PERFORM %comp_ldesc.
  SELECT aedat aenam aezet belnr buzei chg_wkgbtr erdat ernam erzet
         fsc_matnr gjahr io_aufnr kokrs kstar kstar_rate matnr mbgbtr
         meinb pcc_aufnr period rate_child verid versn waers werks
         stype type
         INTO CORRESPONDING FIELDS OF ztco_abispost
         FROM ztco_abispost
         WHERE fsc_matnr IN sp$00010
           AND gjahr IN sp$00002
           AND io_aufnr IN sp$00008
           AND kokrs IN sp$00001
           AND kstar IN sp$00005
           AND matnr IN sp$00006
           AND pcc_aufnr IN sp$00009
           AND period IN sp$00003
           AND verid IN sp$00011
           AND versn IN sp$00004
           AND werks IN sp$00007.
    %dbacc = %dbacc - 1.
    IF %dbacc = 0.
      STOP.
    ENDIF.
    ADD 1 TO %count-ztco_abispost.
    %linr-ztco_abispost = '01'.
    EXTRACT %fg01.
    %ext-ztco_abispost01 = 'X'.
    %sum-ztco_abispost-rate_child = ztco_abispost-rate_child.
    %sum-ztco_abispost-kstar_rate = ztco_abispost-kstar_rate.
    EXTRACT %fgztco_abispost01.
    EXTRACT %fgwrztco_abispost01.
    %linr-ztco_abispost = '02'.
    EXTRACT %fg02.
  ENDSELECT.

END-OF-SELECTION.
  SORT AS TEXT BY
          ztco_abispost-kokrs
          ztco_abispost-gjahr
          ztco_abispost-period
          ztco_abispost-versn
          ztco_abispost-kstar
          ztco_abispost-matnr
          ztco_abispost-stype
          ztco_abispost-type
          ztco_abispost-werks
          %count-ztco_abispost
          %linr-ztco_abispost.
  %diact = space.
  %batch = sy-batch.
  IF %batch <> space.
    IF %eis <> space.
      %diact = 'E'.
      IF %eisprotocol = space.
        NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
                 LINE-SIZE 0253 LINE-COUNT 0065.
      ELSE.
        NEW-PAGE PRINT ON NO DIALOG
                 PARAMETERS %init_pri_params.
      ENDIF.
    ENDIF.
    IF %alv <> space.
      %diact = 'V'.
      %alv_layout = %alvl.
      NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
               LINE-SIZE 0253 LINE-COUNT 0065.
    ENDIF.
    IF %save <> space.
      %diact = 'S'.
      NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
               LINE-SIZE 0253 LINE-COUNT 0065.
    ENDIF.
  ELSEIF %called_by_www <> space.
    %diact = space.
  ELSEIF %called_by_www_alv <> space.
    %diact = 'V'.
  ELSE.
    PERFORM init_print_params(rsaqexce).
    IF %save  <> space. %diact = 'S'. ENDIF.
    IF %xint  <> space. %diact = 'I'. ENDIF.
    IF %tview <> space. %diact = 'T'. ENDIF.
    IF %alv   <> space. %diact = 'V'. ENDIF.
    IF %down  <> space. %diact = 'D'. ENDIF.
    IF %eis   <> space. %diact = 'E'. ENDIF.
    IF %graph <> space. %diact = 'G'. ENDIF.
    IF %excel <> space. %diact = 'X'. ENDIF.
    IF %text  <> space. %diact = 'W'. ENDIF.
    IF %abc   <> space. %diact = 'A'. ENDIF.
    IF %diact <> space AND %diact <> 'S' AND %diact <> 'W'.
      NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
               LINE-SIZE 0253 LINE-COUNT 0065.
    ENDIF.
    %pathname = %path.
    IF %diact = 'I'.
      %functionkey = %xintk.
    ENDIF.
    IF %diact = 'V'.
      %alv_layout = %alvl.
    ENDIF.
  ENDIF.
  FREE MEMORY ID 'AQLISTDATA'.
  IF %memmode <> space.
    IF %batch <> space.
      NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
               LINE-SIZE 0253 LINE-COUNT 0065.
    ENDIF.
    %diact = '1'.
  ENDIF.
  %titel = ' '.
  IF sy-subty O %prflag AND %titel = space.
    NEW-PAGE WITH-TITLE.
  ENDIF.
  %tvsize = 0200.
  %pline = 1.
  %pzgr  = 1.
  %first = 'X'.
  PERFORM %output.
  %first = space.
  IF %diact <> space AND %diact <> 'S'.
    IF %batch = space.
      NEW-PAGE PRINT OFF.
      IF NOT ( %diact = 'V' AND %ucomm = 'PRIN' ).
        NEW-PAGE NO-HEADING NO-TITLE.
        WRITE space.
      ENDIF.
    ENDIF.
  ELSE.
    PERFORM pf-status(rsaqexce) USING 'XXX X '.
  ENDIF.
  CLEAR: %tab, %line, %cont.
  IF %data_selected = space.
    IF %diact = '1'.
      EXPORT empty FROM %empty TO MEMORY ID 'AQLISTDATA'.
      LEAVE.
    ELSE.
      IF %batch = space AND
         %called_by_www = space AND
         %called_by_www_alv = space.
        MESSAGE s260(aq).
        LEAVE LIST-PROCESSING.
      ELSE.
        IF %called_by_www_alv = space.
          %diact = space.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.
  IF %diact = 'S'.
    PERFORM %save_list.
    LEAVE LIST-PROCESSING.
  ENDIF.
  IF %diact = 'V' AND %batch <> space.
    NEW-PAGE PRINT OFF.
    PERFORM set_print_params(rsaqexce).
    PERFORM %download USING 'ALV'.
    LEAVE.
  ENDIF.
  IF %diact = 'V' AND %called_by_www_alv <> space.
    PERFORM %download USING 'ALV'.
    LEAVE.
  ENDIF.
  IF %diact = 'V' AND %ucomm = 'PRIN'.
    NEW-PAGE PRINT OFF.
    PERFORM set_print_params(rsaqexce).
    PERFORM %download USING 'ALV'.
    LEAVE LIST-PROCESSING.
  ENDIF.
  IF %diact = 'P' AND %batch <> space.
    PERFORM %download USING '+DAT'.
    LEAVE LIST-PROCESSING.
  ENDIF.
  IF %diact = 'E' AND %batch <> space.
    PERFORM %download USING 'EIS'.
    LEAVE LIST-PROCESSING.
  ENDIF.
  IF %diact = '1'.
    PERFORM %download USING '+MEM'.
    LEAVE.
  ENDIF.
  IF %diact = 'X'.
    SET USER-COMMAND 'XXL'.
  ELSEIF %diact = 'W'.
    SET USER-COMMAND 'TEXT'.
  ELSEIF %diact = 'V'.
    SET USER-COMMAND 'ALV'.
  ELSEIF %diact = 'T'.
    SET USER-COMMAND 'VIEW'.
  ELSEIF %diact = 'G'.
    SET USER-COMMAND 'GRAF'.
  ELSEIF %diact = 'A'.
    SET USER-COMMAND 'ABCA'.
  ELSEIF %diact = 'E'.
    SET USER-COMMAND 'EIS'.
  ELSEIF %diact = 'D'.
    SET USER-COMMAND 'DOWN'.
  ELSEIF %diact = 'I'.
    SET USER-COMMAND 'XINT'.
  ELSEIF %diact = 'P'.
    SET USER-COMMAND '+DAT'.
  ENDIF.

TOP-OF-PAGE.
  PERFORM %top-of-page.

END-OF-PAGE.
  PERFORM page_foot(rsaqexce).
  PERFORM %save_page.

TOP-OF-PAGE DURING LINE-SELECTION.
  PERFORM %top-of-page.

AT USER-COMMAND.
  CASE sy-ucomm.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
    WHEN 'RETN'.
      PERFORM return(rsaqexce).
    WHEN 'CANC'.
      PERFORM return(rsaqexce).
    WHEN 'WEIT'.
      PERFORM return(rsaqexce).
    WHEN 'INHA'.
      PERFORM catalogue(rsaqexce).
    WHEN 'AUSL'.
      PERFORM pickup(rsaqexce).
    WHEN 'AUSW'.
      PERFORM pickup(rsaqexce).
    WHEN 'RCAA'.
      PERFORM rchain(rsaqbrst).
    WHEN 'RCAL'.
      PERFORM rcall(rsaqbrst).
    WHEN 'VGLI'.
      PERFORM change(rsaqexce).
    WHEN 'VGLE'.
      PERFORM change(rsaqexce).
    WHEN 'TOTO'.
      PERFORM change(rsaqexce).
    WHEN 'VSTA'.
      PERFORM change(rsaqexce).
    WHEN 'VSTE'.
      PERFORM return(rsaqexce).
    WHEN 'SAVL'.
      PERFORM %save_list.
    WHEN 'ODRU'.
      PERFORM print_list(rsaqexce).
    WHEN 'COPA'.
      PERFORM print_cover_page(rsaqexce).
    WHEN 'TEXT'.
      PERFORM %download USING 'TEXT'.
    WHEN 'ALV'.
      PERFORM %download USING 'ALV'.
    WHEN 'VIEW'.
      PERFORM %view.
    WHEN 'XXL'.
      PERFORM %download USING 'XXL'.
    WHEN 'GRAF'.
      PERFORM %download USING 'GRAF'.
    WHEN 'ABCA'.
      PERFORM %download USING 'ABCA'.
    WHEN 'EIS'.
      PERFORM %download USING 'EIS'.
    WHEN 'DOWN'.
      PERFORM %download USING 'DOWN'.
    WHEN 'XINT'.
      PERFORM %download USING 'XINT'.
  ENDCASE.
  CLEAR: %cline, %zgr.
  CLEAR: %tab, %line, %cont.
  IF %diact <> space.
    LEAVE LIST-PROCESSING.
  ENDIF.


*---------------------------------------------------------------------*
*       FORM %COMP_LDESC                                              *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %comp_ldesc.

  REFRESH %ldesc.
  REFRESH %gdesc.
  PERFORM ldesc(rsaqexce) USING 'G00010000X004       01  98'
    text-a00 text-b00 text-h00 'ZTCO_ABISPOST-KOKRS'
    ztco_abispost-kokrs 'ZTCO_ABISPOST-KOKRS'.
  PERFORM ldesc(rsaqexce) USING 'G00020000X004       02  98'
    text-a01 text-b01 text-h00 'ZTCO_ABISPOST-GJAHR'
    ztco_abispost-gjahr 'ZTCO_ABISPOST-GJAHR'.
  PERFORM ldesc(rsaqexce) USING 'G00030000X003       03  98'
    text-a02 text-b02 text-h00 'ZTCO_ABISPOST-PERIOD'
    ztco_abispost-period 'ZTCO_ABISPOST-PERIOD'.
  PERFORM ldesc(rsaqexce) USING 'G00040000X003       04  98'
    text-a03 text-b03 text-h00 'ZTCO_ABISPOST-VERSN'
    ztco_abispost-versn 'ZTCO_ABISPOST-VERSN'.
  PERFORM ldesc(rsaqexce) USING 'G00050000X010       05  98'
    text-a04 text-b04 text-h00 'ZTCO_ABISPOST-KSTAR'
    ztco_abispost-kstar 'ZTCO_ABISPOST-KSTAR'.

  PERFORM ldesc(rsaqexce) USING 'G00060000X040       06  98'
    text-a05 text-b05 text-h00 'ZTCO_ABISPOST-MATNR'
    ztco_abispost-matnr 'ZTCO_ABISPOST-MATNR'.
  PERFORM ldesc(rsaqexce) USING 'G00060000X040       07  98'
    text-a26 text-b26 text-h00 'ZTCO_ABISPOST-STYPE'
    ztco_abispost-stype 'ZTCO_ABISPOST-STYPE'.
  PERFORM ldesc(rsaqexce) USING 'G00060000X040       08  98'
    text-a27 text-b27 text-h00 'ZTCO_ABISPOST-TYPE'
    ztco_abispost-type 'ZTCO_ABISPOST-TYPE'.

  PERFORM ldesc(rsaqexce) USING 'G00070000X004       09  98'
    text-a06 text-b06 text-h00 'ZTCO_ABISPOST-WERKS'
    ztco_abispost-werks 'ZTCO_ABISPOST-WERKS'.
  PERFORM ldesc(rsaqexce) USING 'G00080000X012       00  98'
    text-a07 text-b07 text-h00 'ZTCO_ABISPOST-IO_AUFNR'
    ztco_abispost-io_aufnr 'ZTCO_ABISPOST-IO_AUFNR'.
  PERFORM ldesc(rsaqexce) USING 'G00090000X012       00  98'
    text-a08 text-b08 text-h00 'ZTCO_ABISPOST-PCC_AUFNR'
    ztco_abispost-pcc_aufnr 'ZTCO_ABISPOST-PCC_AUFNR'.
  PERFORM ldesc(rsaqexce) USING 'G00100103 015F    X 00  98'
    text-a09 text-b09 text-h00 'ZTCO_ABISPOST-CHG_WKGBTR'
    ztco_abispost-chg_wkgbtr 'ZTCO_ABISPOST-CHG_WKGBTR'.
  PERFORM ldesc(rsaqexce) USING 'G00110000 005W      00  98'
    text-a10 text-b10 text-h00 'ZTCO_ABISPOST-WAERS'
    ztco_abispost-waers 'ZTCO_ABISPOST-WAERS-0110'.
  PERFORM ldesc(rsaqexce) USING 'G00120000X005       00  98'
    text-a11 text-b11 text-h00 'ZTCO_ABISPOST-WAERS'
    ztco_abispost-waers 'ZTCO_ABISPOST-WAERS'.
  PERFORM ldesc(rsaqexce) USING 'G00130131 019     X 00  98'
    text-a12 text-b12 text-h00 'ZTCO_ABISPOST-RATE_CHILD'
    ztco_abispost-rate_child 'ZTCO_ABISPOST-RATE_CHILD'.
  PERFORM ldesc(rsaqexce) USING 'G00140151 019     X 00  98'
    text-a13 text-b13 text-h00 'ZTCO_ABISPOST-KSTAR_RATE'
    ztco_abispost-kstar_rate 'ZTCO_ABISPOST-KSTAR_RATE'.
  PERFORM ldesc(rsaqexce) USING 'G00150000X010       00  98'
    text-a14 text-b14 text-h00 'ZTCO_ABISPOST-BELNR'
    ztco_abispost-belnr 'ZTCO_ABISPOST-BELNR'.
  PERFORM ldesc(rsaqexce) USING 'G00160000X003       00  98'
    text-a15 text-b15 text-h00 'ZTCO_ABISPOST-BUZEI'
    ztco_abispost-buzei 'ZTCO_ABISPOST-BUZEI'.
  PERFORM ldesc(rsaqexce) USING 'G00170186 016M    X 00  98'
    text-a16 text-b16 text-h00 'ZTCO_ABISPOST-MBGBTR'
    ztco_abispost-mbgbtr 'ZTCO_ABISPOST-MBGBTR'.
  PERFORM ldesc(rsaqexce) USING 'G00180000 003E      00  98'
    text-a17 text-b17 text-h00 'ZTCO_ABISPOST-MEINB'
    ztco_abispost-meinb 'ZTCO_ABISPOST-MEINB-0116'.

  PERFORM ldesc(rsaqexce) USING 'G00191000X040       00  98'
    text-a18 text-b18 text-h00 'ZTCO_ABISPOST-FSC_MATNR'
    ztco_abispost-fsc_matnr 'ZTCO_ABISPOST-FSC_MATNR'.

  PERFORM ldesc(rsaqexce) USING 'G00201000X004       00  98'
    text-a19 text-b19 text-h00 'ZTCO_ABISPOST-VERID'
    ztco_abispost-verid 'ZTCO_ABISPOST-VERID'.
  PERFORM ldesc(rsaqexce) USING 'G00211000X010       00  98'
    text-a20 text-b20 text-h00 'ZTCO_ABISPOST-ERDAT'
    ztco_abispost-erdat 'ZTCO_ABISPOST-ERDAT'.
  PERFORM ldesc(rsaqexce) USING 'G00221000X008       00  98'
    text-a21 text-b21 text-h00 'ZTCO_ABISPOST-ERZET'
    ztco_abispost-erzet 'ZTCO_ABISPOST-ERZET'.
  PERFORM ldesc(rsaqexce) USING 'G00231000X012       00  98'
    text-a22 text-b22 text-h00 'ZTCO_ABISPOST-ERNAM'
    ztco_abispost-ernam 'ZTCO_ABISPOST-ERNAM'.
  PERFORM ldesc(rsaqexce) USING 'G00241000X010       00  98'
    text-a23 text-b23 text-h00 'ZTCO_ABISPOST-AEDAT'
    ztco_abispost-aedat 'ZTCO_ABISPOST-AEDAT'.
  PERFORM ldesc(rsaqexce) USING 'G00251000X008       00  98'
    text-a24 text-b24 text-h00 'ZTCO_ABISPOST-AEZET'
    ztco_abispost-aezet 'ZTCO_ABISPOST-AEZET'.
  PERFORM ldesc(rsaqexce) USING 'G00261000X012       00  98'
    text-a25 text-b25 text-h00 'ZTCO_ABISPOST-AENAM'
    ztco_abispost-aenam 'ZTCO_ABISPOST-AENAM'.
  PERFORM gdesc(rsaqexce) USING 'G00' 5 20 ' ' ' ' 'X'.
  PERFORM complete_ldesc(rsaqexce) TABLES %ldesc.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %OUTPUT                                                  *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %output.

  DESCRIBE TABLE %prlist LINES %max_prlist.
  %head = 'AAA'.
  %keyempty = space.
  NEW-PAGE.
  PERFORM %output_gl.
  PERFORM complete_page(rsaqexce).
  %head = 'ZZZ'.
  PERFORM last_ptab_entry(rsaqexce).
  NEW-PAGE.
  IF %keyempty <> space.
    MESSAGE s894(aq).
  ENDIF.

ENDFORM.


*---------------------------------------------------------------------*
*       FORM %TOP-OF-PAGE                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %top-of-page.

  IF sy-ucomm = 'INHA'. EXIT. ENDIF.
  IF sy-ucomm = 'COPA'. EXIT. ENDIF.
  IF %head    = space.  EXIT. ENDIF.
  IF %head = 'DDD'.
    PERFORM tviewpage(rsaqexce).
    EXIT.
  ENDIF.
  IF %head = 'GGG'.
    PERFORM page(rsaqexce) USING 'G00' text-grl 252 %glframe 001.
    SET LEFT SCROLL-BOUNDARY COLUMN 002.
    PERFORM set_scroll_boundary(rsaqexce) USING 002.
    IF %toto <> space. EXIT. ENDIF.
  ELSE.
    CASE %head.
    ENDCASE.
  ENDIF.

ENDFORM.


*---------------------------------------------------------------------*
*       FORM %NEWLINE                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %newline.

  %uflag = space.
  NEW-LINE.
  WRITE: '|', 252 '|'.
  POSITION 2.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %SKIP                                                    *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  COUNT                                                         *
*---------------------------------------------------------------------*
FORM %skip USING count.

  IF sy-linno > 1.
    %uflag = space.
    DO count TIMES.
      NEW-LINE.
      FORMAT RESET.
      WRITE: '|', 252 '|'.
    ENDDO.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %ULINE                                                   *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %uline.

  IF %uflag = space.
    IF sy-linno > 1.
      ULINE /1(252).
    ENDIF.
    %uflag = 'X'.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %HIDE                                                    *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %hide.

  IF %batch <> space AND %diact = 'S'.
    PERFORM hide(rsaqexce).
  ELSE.
    HIDE: %tab, %line, %cont.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %HIDE_COLOR                                              *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %hide_color.

  IF %batch <> space AND %diact = 'S'.
    PERFORM hide_color(rsaqexce).
  ELSE.
    HIDE: %fint, %fcol.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %RCALL                                                   *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  NAME                                                          *
*  -->  VALUE                                                         *
*---------------------------------------------------------------------*
FORM %rcall USING name value.

  FIELD-SYMBOLS <field>.

  ASSIGN (name) TO <field>.
  READ CURRENT LINE FIELD VALUE <field> INTO value.
  IF sy-subrc <> 0.
    value = space.
    EXIT.
  ENDIF.
  IF value = space AND %tab = 'G00' AND %ldesc-fcur NA 'FM'.
    READ TABLE %g00 INDEX %line.
    IF sy-subrc = 0.
      ASSIGN COMPONENT %ldesc-fnameint OF STRUCTURE %g00
                                       TO <field>.
      IF sy-subrc = 0.
        WRITE <field> TO value(%ldesc-folen).
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %SAVE_PAGE                                               *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %save_page.

  IF %batch <> space AND %diact = 'S'.
    PERFORM save_page(rsaqexce) TABLES %st_liste.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %REPLACE_VAR                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  TEXT                                                          *
*---------------------------------------------------------------------*
FORM %replace_var USING text.

  FIELD-SYMBOLS <var>.

  ASSIGN text+1(*) TO <var>.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %SAVE_LIST                                               *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %save_list.

  DATA: %sflag,
        qreport LIKE sy-repid.

  IF %diact = 'S'. %sflag = 'X'. ENDIF.
  qreport = sy-repid.
  PERFORM save_list(rsaqexce) TABLES %st_liste
                              USING qreport %sflag %listid.
  IF %ql_id <> space.
    %dlflag = 'X'.
    %listsize = 0253.
    PERFORM comp_selection_screen(rsaqexce).
    EXPORT %st_liste %ptab %ldesc %gdesc %dlflag %listsize
           %selections
           %g00
           TO DATABASE aqldb(aq) ID %ql_id.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %REFRESH                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %refresh.

  CASE %tab.
    WHEN 'G00'.
      IMPORT %g00 FROM DATABASE aqldb(aq) ID %ql_id.
  ENDCASE.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %DOWNLOAD                                                *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  CODE                                                          *
*---------------------------------------------------------------------*
FORM %download USING code.

  DATA: qreport LIKE sy-repid.

  PERFORM init_download(rsaqexce).
  qreport = sy-repid.
  CASE %tab.
    WHEN 'G00'.
      PERFORM download(rsaqexce)
              TABLES %g00 USING code qreport text-grl.
    WHEN OTHERS.
      MESSAGE s860(aq).
  ENDCASE.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %SET_DATA                                                *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  L_LINES                                                       *
*---------------------------------------------------------------------*
FORM %set_data CHANGING l_lines TYPE i.

  IMPORT ldata TO %g00 FROM MEMORY ID 'AQLISTDATA'.
  DESCRIBE TABLE %g00 LINES l_lines.
  FREE MEMORY ID 'AQLISTDATA'.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %GET_DATA                                                *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  DATATAB                                                       *
*  -->  FIRST                                                         *
*  -->  LAST                                                          *
*---------------------------------------------------------------------*
FORM %get_data TABLES datatab STRUCTURE %g00
               USING  first TYPE i
                      last  TYPE i.

  APPEND LINES OF %g00 FROM first TO last TO datatab.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %GET_REF_TO_TABLE                                        *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  LID                                                           *
*  -->  REF_TO_ITAB                                                   *
*---------------------------------------------------------------------*
FORM %get_ref_to_table USING lid         LIKE rsaqldesc-lid
                             ref_to_itab TYPE REF TO data
                             subrc       LIKE sy-subrc.

  subrc = 0.
  CASE lid.
    WHEN 'G00'.
      CREATE DATA ref_to_itab LIKE %g00[].
    WHEN OTHERS.
      subrc = 4.
      MESSAGE s860(aq).
  ENDCASE.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM %VIEW                                                    *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %view.

  DATA: ret TYPE i.

  PERFORM check_wingui(rsaqsyst) USING ret.
  IF ret <> 0.
    MESSAGE s841(aq).
    PERFORM %download USING 'ALV'.
    EXIT.
  ENDIF.

  DATA: anz TYPE i,
        prog LIKE sy-repid.

  prog = sy-repid.
  PERFORM init_download(rsaqexce).
  CASE %tab.
    WHEN 'G00'.
      PERFORM generate_view_dynpro(rsaqexce)
              USING prog text-grl.
      DESCRIBE TABLE %g00 LINES anz.
      tview100-lines = anz.
      PERFORM init_view(rsaqexce) TABLES %g00 USING tview100.
      CALL SCREEN 100.
      PERFORM reset_view_dynpro(rsaqexce).
    WHEN OTHERS.
      MESSAGE s860(aq).
  ENDCASE.

ENDFORM.


*---------------------------------------------------------------------*
*       FORM %CLEAR02                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %clear02.

  CLEAR %g00-ztco_abispost-fsc_matnr.
  CLEAR %g00-ztco_abispost-verid.
  CLEAR %g00-ztco_abispost-erdat.
  CLEAR %g00-ztco_abispost-erzet.
  CLEAR %g00-ztco_abispost-ernam.
  CLEAR %g00-ztco_abispost-aedat.
  CLEAR %g00-ztco_abispost-aezet.
  CLEAR %g00-ztco_abispost-aenam.

ENDFORM.


*---------------------------------------------------------------------*
*       FORM %OUTPUT_GL                                               *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM %output_gl.

  IF %max_prlist <> 0.
    READ TABLE %prlist WITH KEY tab = 'GGG'.
    IF sy-subrc <> 0.
      EXIT.
    ENDIF.
  ENDIF.
  SET MARGIN 00.
  PERFORM complete_page(rsaqexce).
  %nochange = space.
  NEW-PAGE.
  REFRESH %wa010.
  REFRESH %w0100.
  REFRESH %w0102.
  REFRESH %w0101.
  REFRESH %w0105.
  REFRESH %w0106.
  REFRESH %w0103.
  REFRESH %w0104.
  REFRESH %w0107.
  REFRESH %w0200.
  REFRESH %w0202.
  REFRESH %w0201.
  REFRESH %w0205.
  REFRESH %w0206.
  REFRESH %w0203.
  REFRESH %w0204.
  REFRESH %w0207.
  %glline   = 0.
  %tab      = 'G00'.
  %line     = 0.
  %cont     = '0'.
  %fint     = space.
  %fcol     = '0'.
  %head     = 'GGG'.
  %cline    = 0.
  %outflag  = space.
  %outcomp  = space.
  %outtotal = space.
  %rflag    = 'AA'.
  IF %diact <> space AND %diact NA 'SWE'. WRITE space. ENDIF.
  FORMAT RESET.
  LOOP.
    %data_selected = 'X'.
    AT %fg01.
      %znr = '01'.
      %zgr = '01'.
      %cline = %cline + 1.
      PERFORM %clear02.
      %g00-ztco_abispost-kokrs = ztco_abispost-kokrs.
      %g00-ztco_abispost-gjahr = ztco_abispost-gjahr.
      %g00-ztco_abispost-period = ztco_abispost-period.
      %g00-ztco_abispost-versn = ztco_abispost-versn.
      %g00-ztco_abispost-kstar = ztco_abispost-kstar.
      %g00-ztco_abispost-matnr = ztco_abispost-matnr.
      %g00-ztco_abispost-STYPE = ztco_abispost-STYPE.
      %g00-ztco_abispost-TYPE  = ztco_abispost-TYPE.
      %g00-ztco_abispost-werks = ztco_abispost-werks.
      %g00-ztco_abispost-io_aufnr = ztco_abispost-io_aufnr.
      %g00-ztco_abispost-pcc_aufnr = ztco_abispost-pcc_aufnr.
      %g00-ztco_abispost-chg_wkgbtr = ztco_abispost-chg_wkgbtr.
      %g00-ztco_abispost-waers-0110 = ztco_abispost-waers.
      %g00-ztco_abispost-waers = ztco_abispost-waers.
      %g00-ztco_abispost-rate_child = ztco_abispost-rate_child.
      %g00-ztco_abispost-kstar_rate = ztco_abispost-kstar_rate.
      %g00-ztco_abispost-belnr = ztco_abispost-belnr.
      %g00-ztco_abispost-buzei = ztco_abispost-buzei.
      %g00-ztco_abispost-mbgbtr = ztco_abispost-mbgbtr.
      %g00-ztco_abispost-meinb-0116 = ztco_abispost-meinb.
      IF %first <> space. APPEND %g00. ENDIF.
      %glline = %glline + 1.
      %lznr = %znr.
      IF %diact <> space AND %diact NA 'SWE'. CONTINUE. ENDIF.
      PERFORM check(rsaqexce) USING ' '.
      IF %rflag = 'E'. EXIT. ENDIF.
      IF %rflag = 'AA'.
        PERFORM reserve(rsaqexce) USING 002.
      ENDIF.
      IF ztco_abispost-kokrs <> %%ztco_abispost-kokrs OR
      %%%ztco_abispost-kokrs = space.
        %%ztco_abispost-kokrs = ztco_abispost-kokrs.
        %%%ztco_abispost-kokrs ='X'.
        CLEAR %%ztco_abispost-gjahr.
        CLEAR %%%ztco_abispost-gjahr.
        CLEAR %%ztco_abispost-period.
        CLEAR %%%ztco_abispost-period.
        CLEAR %%ztco_abispost-versn.
        CLEAR %%%ztco_abispost-versn.
        CLEAR %%ztco_abispost-kstar.
        CLEAR %%%ztco_abispost-kstar.
        CLEAR %%ztco_abispost-matnr.
        CLEAR %%%ztco_abispost-matnr.
        CLEAR %%ztco_abispost-STYPE.
        CLEAR %%%ztco_abispost-TYPE.
        CLEAR %%ztco_abispost-matnr.
        CLEAR %%%ztco_abispost-matnr.
        CLEAR %%ztco_abispost-werks.
        CLEAR %%%ztco_abispost-werks.
      ENDIF.
      IF ztco_abispost-gjahr <> %%ztco_abispost-gjahr OR
      %%%ztco_abispost-gjahr = space.
        %%ztco_abispost-gjahr = ztco_abispost-gjahr.
        %%%ztco_abispost-gjahr ='X'.
        CLEAR %%ztco_abispost-period.
        CLEAR %%%ztco_abispost-period.
        CLEAR %%ztco_abispost-versn.
        CLEAR %%%ztco_abispost-versn.
        CLEAR %%ztco_abispost-kstar.
        CLEAR %%%ztco_abispost-kstar.
        CLEAR %%ztco_abispost-matnr.
        CLEAR %%%ztco_abispost-matnr.
        CLEAR %%ztco_abispost-STYPE.
        CLEAR %%%ztco_abispost-TYPE.
        CLEAR %%ztco_abispost-TYPE.
        CLEAR %%%ztco_abispost-TYPE.
        CLEAR %%ztco_abispost-werks.
        CLEAR %%%ztco_abispost-werks.
      ENDIF.
      IF ztco_abispost-period <> %%ztco_abispost-period OR
      %%%ztco_abispost-period = space.
        %%ztco_abispost-period = ztco_abispost-period.
        %%%ztco_abispost-period ='X'.
        CLEAR %%ztco_abispost-versn.
        CLEAR %%%ztco_abispost-versn.
        CLEAR %%ztco_abispost-kstar.
        CLEAR %%%ztco_abispost-kstar.
        CLEAR %%ztco_abispost-matnr.
        CLEAR %%%ztco_abispost-matnr.
        CLEAR %%ztco_abispost-STYPE.
        CLEAR %%%ztco_abispost-STYPE.
        CLEAR %%ztco_abispost-TYPE.
        CLEAR %%%ztco_abispost-TYPE.
        CLEAR %%ztco_abispost-werks.
        CLEAR %%%ztco_abispost-werks.
      ENDIF.
      IF ztco_abispost-versn <> %%ztco_abispost-versn OR
      %%%ztco_abispost-versn = space.
        %%ztco_abispost-versn = ztco_abispost-versn.
        %%%ztco_abispost-versn ='X'.
        CLEAR %%ztco_abispost-kstar.
        CLEAR %%%ztco_abispost-kstar.
        CLEAR %%ztco_abispost-matnr.
        CLEAR %%%ztco_abispost-matnr.
        CLEAR %%ztco_abispost-STYPE.
        CLEAR %%%ztco_abispost-STYPE.
        CLEAR %%ztco_abispost-TYPE.
        CLEAR %%%ztco_abispost-TYPE.
        CLEAR %%ztco_abispost-werks.
        CLEAR %%%ztco_abispost-werks.
      ENDIF.
      IF ztco_abispost-kstar <> %%ztco_abispost-kstar OR
      %%%ztco_abispost-kstar = space.
        %%ztco_abispost-kstar = ztco_abispost-kstar.
        %%%ztco_abispost-kstar ='X'.
        CLEAR %%ztco_abispost-matnr.
        CLEAR %%%ztco_abispost-matnr.
        CLEAR %%ztco_abispost-STYPE.
        CLEAR %%%ztco_abispost-STYPE.
        CLEAR %%ztco_abispost-TYPE.
        CLEAR %%%ztco_abispost-TYPE.
        CLEAR %%ztco_abispost-werks.
        CLEAR %%%ztco_abispost-werks.
      ENDIF.
      IF ztco_abispost-matnr <> %%ztco_abispost-matnr OR
      %%%ztco_abispost-matnr = space.
        %%ztco_abispost-matnr = ztco_abispost-matnr.
        %%%ztco_abispost-matnr ='X'.
        CLEAR %%ztco_abispost-STYPE.
        CLEAR %%%ztco_abispost-STYPE.
        CLEAR %%ztco_abispost-TYPE.
        CLEAR %%%ztco_abispost-TYPE.
        CLEAR %%ztco_abispost-werks.
        CLEAR %%%ztco_abispost-werks.
      ENDIF.
      IF ztco_abispost-STYPE <> %%ztco_abispost-STYPE OR
      %%%ztco_abispost-STYPE = space.
        %%ztco_abispost-STYPE = ztco_abispost-STYPE.
        %%%ztco_abispost-STYPE ='X'.
        CLEAR %%ztco_abispost-TYPE.
        CLEAR %%%ztco_abispost-TYPE.
        CLEAR %%ztco_abispost-werks.
        CLEAR %%%ztco_abispost-werks.
      ENDIF.
      IF ztco_abispost-TYPE <> %%ztco_abispost-TYPE OR
      %%%ztco_abispost-TYPE = space.
        %%ztco_abispost-TYPE = ztco_abispost-TYPE.
        %%%ztco_abispost-TYPE ='X'.
        CLEAR %%ztco_abispost-werks.
        CLEAR %%%ztco_abispost-werks.
      ENDIF.
      IF ztco_abispost-werks <> %%ztco_abispost-werks OR
      %%%ztco_abispost-werks = space.
        %%ztco_abispost-werks = ztco_abispost-werks.
        %%%ztco_abispost-werks ='X'.
      ENDIF.
      IF %rflag(1) = 'A'.
        FORMAT RESET.
        %fint = 'F'. %fcol = '0'.
        FORMAT COLOR 2. %fcol = '2'.
        PERFORM %newline.
        WRITE 002(004) ztco_abispost-kokrs.
        %line = %glline.
        PERFORM %hide.
        %line = 0.
        IF %rflag = 'AA'. HIDE %cline. ENDIF.
        HIDE %zgr.
        PERFORM %hide_color.
        WRITE 007(004) ztco_abispost-gjahr.
        WRITE 012(003) ztco_abispost-period.
        WRITE 016(003) ztco_abispost-versn.
        WRITE 020(010) ztco_abispost-kstar.
        WRITE 031(040) ztco_abispost-matnr.
        WRITE 072(005) ztco_abispost-STYPE.
        WRITE 078(004) ztco_abispost-TYPE.
        WRITE 083(004) ztco_abispost-werks.
        WRITE 088(012) ztco_abispost-io_aufnr.
        WRITE 101(012) ztco_abispost-pcc_aufnr.
        WRITE 114(015) ztco_abispost-chg_wkgbtr
          CURRENCY ztco_abispost-waers.
        WRITE 130(005) ztco_abispost-waers.
        WRITE 136(005) ztco_abispost-waers.
        WRITE 142(019) ztco_abispost-rate_child.
        WRITE 162(019) ztco_abispost-kstar_rate.
        WRITE 182(010) ztco_abispost-belnr.
        WRITE 193(003) ztco_abispost-buzei.
        WRITE 200(016) ztco_abispost-mbgbtr
          UNIT ztco_abispost-meinb.
        WRITE 217(003) ztco_abispost-meinb.
      ENDIF.
    ENDAT.
    AT %fg02.
      %znr = '02'.
      %zgr = '01'.
      IF %znr > %lznr.
        READ TABLE %g00 INDEX %glline.
      ENDIF.
      %g00-ztco_abispost-fsc_matnr = ztco_abispost-fsc_matnr.
      %g00-ztco_abispost-verid = ztco_abispost-verid.
      %g00-ztco_abispost-erdat = ztco_abispost-erdat.
      %g00-ztco_abispost-erzet = ztco_abispost-erzet.
      %g00-ztco_abispost-ernam = ztco_abispost-ernam.
      %g00-ztco_abispost-aedat = ztco_abispost-aedat.
      %g00-ztco_abispost-aezet = ztco_abispost-aezet.
      %g00-ztco_abispost-aenam = ztco_abispost-aenam.
      IF %znr > %lznr.
        IF %first <> space. MODIFY %g00 INDEX %glline. ENDIF.
      ELSE.
        IF %first <> space. APPEND %g00. ENDIF.
        %glline = %glline + 1.
      ENDIF.
      %lznr = %znr.
      IF %diact <> space AND %diact NA 'SWE'. CONTINUE. ENDIF.
      PERFORM check(rsaqexce) USING ' '.
      IF %rflag = 'E'. EXIT. ENDIF.
      IF %rflag(1) = 'A'.
        FORMAT RESET.
        %fint = 'F'. %fcol = '0'.
        FORMAT COLOR 2. %fcol = '2'.
        PERFORM %newline.
        WRITE 002(040) ztco_abispost-fsc_matnr.
        %line = %glline.  %cont = '1'.
        PERFORM %hide.
        %line = 0.  %cont = '0'.
        IF %rflag = 'AA'. HIDE %cline. ENDIF.
        HIDE %zgr.
        PERFORM %hide_color.
        WRITE 043(004) ztco_abispost-verid.
        WRITE 048(010) ztco_abispost-erdat.
        WRITE 059(008) ztco_abispost-erzet.
        WRITE 068(012) ztco_abispost-ernam.
        WRITE 081(010) ztco_abispost-aedat.
        WRITE 092(008) ztco_abispost-aezet.
        WRITE 101(012) ztco_abispost-aenam.
      ENDIF.
    ENDAT.
    AT %fgwrztco_abispost01.
      CLEAR %w0107.
      %w0107-ztco_abispost-meinb = ztco_abispost-meinb.
      %w0107-ztco_abispost-mbgbtr = ztco_abispost-mbgbtr.
      COLLECT %w0107.
    ENDAT.
    AT %fgwrztco_abispost01.
      CLEAR %w0207.
      %w0207-ztco_abispost-waers = ztco_abispost-waers.
      %w0207-ztco_abispost-chg_wkgbtr = ztco_abispost-chg_wkgbtr.
      COLLECT %w0207.
    ENDAT.
    AT END OF ztco_abispost-werks.
      %zgr = '01'.
      PERFORM check(rsaqexce) USING 'X'.
      IF %rflag = 'E'. EXIT. ENDIF.
      LOOP AT %w0107.
        %w0106 = %w0107.
        COLLECT %w0106.
      ENDLOOP.
      REFRESH %w0107.
      LOOP AT %w0207.
        %w0206 = %w0207.
        COLLECT %w0206.
      ENDLOOP.
      REFRESH %w0207.
    ENDAT.
    AT END OF ztco_abispost-matnr.
      %zgr = '01'.
      PERFORM check(rsaqexce) USING 'X'.
      IF %rflag = 'E'. EXIT. ENDIF.
      LOOP AT %w0106.
        %w0105 = %w0106.
        COLLECT %w0105.
      ENDLOOP.
      REFRESH %w0106.
      LOOP AT %w0206.
        %w0205 = %w0206.
        COLLECT %w0205.
      ENDLOOP.
      REFRESH %w0206.
    ENDAT.
    AT END OF ztco_abispost-kstar.
      %zgr = '01'.
      PERFORM check(rsaqexce) USING 'X'.
      IF %rflag = 'E'. EXIT. ENDIF.
      LOOP AT %w0105.
        %w0104 = %w0105.
        COLLECT %w0104.
      ENDLOOP.
      REFRESH %w0105.
      LOOP AT %w0205.
        %w0204 = %w0205.
        COLLECT %w0204.
      ENDLOOP.
      REFRESH %w0205.
    ENDAT.
    AT END OF ztco_abispost-versn.
      %zgr = '01'.
      PERFORM check(rsaqexce) USING 'X'.
      IF %rflag = 'E'. EXIT. ENDIF.
      LOOP AT %w0104.
        %w0103 = %w0104.
        COLLECT %w0103.
      ENDLOOP.
      REFRESH %w0104.
      LOOP AT %w0204.
        %w0203 = %w0204.
        COLLECT %w0203.
      ENDLOOP.
      REFRESH %w0204.
    ENDAT.
    AT END OF ztco_abispost-period.
      %zgr = '01'.
      PERFORM check(rsaqexce) USING 'X'.
      IF %rflag = 'E'. EXIT. ENDIF.
      LOOP AT %w0103.
        %w0102 = %w0103.
        COLLECT %w0102.
      ENDLOOP.
      REFRESH %w0103.
      LOOP AT %w0203.
        %w0202 = %w0203.
        COLLECT %w0202.
      ENDLOOP.
      REFRESH %w0203.
    ENDAT.
    AT END OF ztco_abispost-gjahr.
      %zgr = '01'.
      PERFORM check(rsaqexce) USING 'X'.
      IF %rflag = 'E'. EXIT. ENDIF.
      LOOP AT %w0102.
        %w0101 = %w0102.
        COLLECT %w0101.
      ENDLOOP.
      REFRESH %w0102.
      LOOP AT %w0202.
        %w0201 = %w0202.
        COLLECT %w0201.
      ENDLOOP.
      REFRESH %w0202.
    ENDAT.
    AT END OF ztco_abispost-kokrs.
      %zgr = '01'.
      PERFORM check(rsaqexce) USING 'X'.
      IF %rflag = 'E'. EXIT. ENDIF.
      LOOP AT %w0101.
        %w0100 = %w0101.
        COLLECT %w0100.
      ENDLOOP.
      REFRESH %w0101.
      LOOP AT %w0201.
        %w0200 = %w0201.
        COLLECT %w0200.
      ENDLOOP.
      REFRESH %w0201.
    ENDAT.
    AT LAST.
      %znr = 0.
      %rflag = 'AA'.
      %outtotal = 'X'.
      PERFORM reserve(rsaqexce) USING 2.
      PERFORM %uline.
      FORMAT RESET.
      FORMAT INTENSIFIED ON COLOR 3.
      %fint = 'N'. %fcol = '3'.
      %nochange = 'X'.
      PERFORM %newline.
      %nochange = space.
      WRITE (13) text-f02.
      PERFORM %hide.
      PERFORM %hide_color.
      SORT %w0100 BY ztco_abispost-meinb.
      SORT %w0200 BY ztco_abispost-waers.
      WRITE 207 '*'.
      WRITE 131(019) sum(%sum-ztco_abispost-rate_child).
      PERFORM %hide.
      PERFORM %hide_color.
      WRITE 151(019) sum(%sum-ztco_abispost-kstar_rate).
      REFRESH %wa010.
      DO.
        %subrc = 4.
        CLEAR %wa010.
        READ TABLE %w0100 INDEX sy-index.
        IF sy-subrc = 0.
          %subrc = 0.
          %wa010-ztco_abispost-ztco_abispost-meinb =
          %w0100-ztco_abispost-meinb.
          %wa010-ztco_abispost-mbgbtr = %w0100-ztco_abispost-mbgbtr.
        ENDIF.
        READ TABLE %w0200 INDEX sy-index.
        IF sy-subrc = 0.
          %subrc = 0.
          %wa010-ztco_abispost-ztco_abispost-waers =
          %w0200-ztco_abispost-waers.
      %wa010-ztco_abispost-chg_wkgbtr = %w0200-ztco_abispost-chg_wkgbtr.
        ENDIF.
        IF %subrc = 4.
          EXIT.
        ENDIF.
        APPEND %wa010.
      ENDDO.
      LOOP AT %wa010.
        IF sy-tabix <> 1.
          PERFORM %newline.
        ENDIF.
        IF %wa010-ztco_abispost-ztco_abispost-waers = space.
          WRITE 103(015) %wa010-ztco_abispost-chg_wkgbtr
CURRENCY %wa010-ztco_abispost-ztco_abispost-waers NO-ZERO.
          IF NOT %wa010-ztco_abispost-chg_wkgbtr IS INITIAL.
            %keyempty = 'X'.
          ENDIF.
        ELSE.
          WRITE 103(015) %wa010-ztco_abispost-chg_wkgbtr
                CURRENCY %wa010-ztco_abispost-ztco_abispost-waers.
        ENDIF.
        WRITE 119(005) %wa010-ztco_abispost-ztco_abispost-waers.
        IF %wa010-ztco_abispost-ztco_abispost-meinb = space.
          WRITE 186(016) %wa010-ztco_abispost-mbgbtr
                UNIT %wa010-ztco_abispost-ztco_abispost-meinb NO-ZERO.
          IF NOT %wa010-ztco_abispost-mbgbtr IS INITIAL.
            %keyempty = 'X'.
          ENDIF.
        ELSE.
          WRITE 186(016) %wa010-ztco_abispost-mbgbtr
                UNIT %wa010-ztco_abispost-ztco_abispost-meinb.
        ENDIF.
        WRITE 203(003) %wa010-ztco_abispost-ztco_abispost-meinb.
        PERFORM %hide.
        PERFORM %hide_color.
      ENDLOOP.
      IF %rflag = 'AA'. PERFORM %uline. ENDIF.
    ENDAT.
  ENDLOOP.
  %rflag = 'AA'.
  PERFORM %uline.
  CLEAR: %cline, %zgr.

ENDFORM.



*---------------------------------------------------------------------*
*       MODULE %INIT_VIEW OUTPUT                                      *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
MODULE %init_view OUTPUT.

  CASE %tab.
    WHEN 'G00'.
      PERFORM init_pbo(rsaqexce) TABLES %g00 USING tview100 'X'.
    WHEN OTHERS.
      MESSAGE s860(aq).
  ENDCASE.

ENDMODULE.

*---------------------------------------------------------------------*
*       MODULE %PBO_VIEW OUTPUT                                       *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
MODULE %pbo_view OUTPUT.

  CASE %tab.
    WHEN 'G00'.
      PERFORM loop_pbo(rsaqexce) TABLES %g00 USING %%g00 tview100.
  ENDCASE.

ENDMODULE.

*---------------------------------------------------------------------*
*       MODULE %PAI_VIEW INPUT                                        *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
MODULE %pai_view INPUT.

  CASE %tab.
    WHEN 'G00'.
      PERFORM loop_pai(rsaqexce) TABLES %g00 USING %%g00 tview100.
  ENDCASE.

ENDMODULE.

*---------------------------------------------------------------------*
*       MODULE %OKCODE_VIEW INPUT                                     *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
MODULE %okcode_view INPUT.

  CASE %tab.
    WHEN 'G00'.
      PERFORM okcode(rsaqexce) TABLES %g00 USING tview100.
  ENDCASE.

ENDMODULE.
