REPORT AQFKZCO2========ZCO_PPC_MAT===
   LINE-SIZE 083 NO STANDARD PAGE HEADING LINE-COUNT 000(001).

INCLUDE <SYMBOL>.
INCLUDE <ICON>.
SELECTION-SCREEN: BEGIN OF BLOCK PROG
                           WITH FRAME TITLE TEXT-F58.

TABLES PPC_HEAD.
TABLES CKMLHD.
TABLES CKMLMV013.
TABLES PPC_ORD_INF.
TABLES PPC_RP.
TABLES PPC_MAT.
TABLES PPC_CONF_MAT.
DATA %COUNT-PPC_CONF_MAT(4) TYPE X.
DATA %LINR-PPC_CONF_MAT(2).

TABLES PPC_MAT_DET.
DATA: BEGIN OF %JOINWA,
        PPC_CONF_MAT LIKE PPC_CONF_MAT,
        PPC_HEAD LIKE PPC_HEAD,
        PPC_RP LIKE PPC_RP,
        PPC_MAT_DET LIKE PPC_MAT_DET,
        PPC_ORD_INF LIKE PPC_ORD_INF,
        CKMLHD LIKE CKMLHD,
        CKMLMV013 LIKE CKMLMV013,
        PPC_MAT LIKE PPC_MAT,
      END OF %JOINWA.
TABLES AQLDB.

INCLUDE RSAQEXCD.

DATA: BEGIN OF %ST_LISTE OCCURS 100,
          HEAD(1),
          TAB(3),
          LINE(6) TYPE N,
          CONT(1) TYPE N,
          FINT(1),
          FINV(1),
          FCOL(1) TYPE N,
          TEXT(0083),
      END OF %ST_LISTE.

DATA %DATA_SELECTED(1).
DATA %GLFRAME(1)  VALUE 'X' .
DATA %UFLAG(1).
DATA %USTFLAG(1).
DATA %GRST_TEXT(255).
DATA %GLLINE TYPE I.
DATA %TABIX LIKE SY-TABIX.
DATA %PRFLAG(1) TYPE X VALUE '02'.


DATA %PERC(4) TYPE P DECIMALS 3.
DATA %P100(4) TYPE P DECIMALS 3 VALUE '100.000'.
DATA %RANGCT TYPE I.
DATA %RANGCC(8).
DATA %SUBRC LIKE SY-SUBRC.

DATA: BEGIN OF %WA010 OCCURS 10,
            PPC_CONF_MAT-CONFQUANT(16) TYPE P DECIMALS 03,
            BEGIN OF PPC_CONF_MAT,
                  PPC_CONF_MAT-CONFUNIT LIKE PPC_CONF_MAT-CONFUNIT,
            END OF PPC_CONF_MAT,
      END OF %WA010.

DATA: BEGIN OF %WA020 OCCURS 10,
            PPC_HEAD-CONFQUANT(16) TYPE P DECIMALS 03,
            BEGIN OF PPC_HEAD,
                  PPC_HEAD-CONFUNIT LIKE PPC_HEAD-CONFUNIT,
            END OF PPC_HEAD,
      END OF %WA020.

DATA: BEGIN OF %W0100 OCCURS 20,
            PPC_CONF_MAT-CONFUNIT LIKE PPC_CONF_MAT-CONFUNIT,
            PPC_CONF_MAT-CONFQUANT(16) TYPE P DECIMALS 03,
      END OF %W0100.

DATA: BEGIN OF %W0200 OCCURS 20,
            PPC_HEAD-CONFUNIT LIKE PPC_HEAD-CONFUNIT,
            PPC_HEAD-CONFQUANT(16) TYPE P DECIMALS 03,
      END OF %W0200.
SELECT-OPTIONS SP$00004 FOR CKMLHD-MATNR MEMORY ID MAT.
SELECT-OPTIONS SP$00005 FOR CKMLMV013-AUFNR MEMORY ID ANR.
SELECT-OPTIONS SP$00003 FOR PPC_HEAD-CRTIME.
SELECT-OPTIONS SP$00002 FOR PPC_HEAD-POSTDATE.
SELECT-OPTIONS SP$00011 FOR PPC_MAT-GMOVE_IND.
SELECT-OPTIONS SP$00012 FOR PPC_MAT-LGORT MEMORY ID LAG.
SELECT-OPTIONS SP$00010 FOR PPC_MAT-MATNR MEMORY ID MAT.
SELECT-OPTIONS SP$00013 FOR PPC_MAT-PRVBE MEMORY ID PVB.
SELECT-OPTIONS SP$00006 FOR PPC_ORD_INF-MATERIALNR MEMORY ID MAT.
SELECT-OPTIONS SP$00008 FOR PPC_ORD_INF-ORDERID.
SELECT-OPTIONS SP$00007 FOR PPC_ORD_INF-VERSION MEMORY ID VER.
SELECT-OPTIONS SP$00009 FOR PPC_RP-REPPOINT_EXT.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN: BEGIN OF BLOCK DIRECT
                  WITH FRAME TITLE TEXT-F59.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %ALV RADIOBUTTON GROUP FUNC USER-COMMAND OUTBUT
                         DEFAULT 'X' .
SELECTION-SCREEN: COMMENT 4(26) TEXT-F72 FOR FIELD %ALV.
PARAMETERS:       %ALVL TYPE SLIS_VARI.
SELECTION-SCREEN: PUSHBUTTON 72(4) PB%EXCO USER-COMMAND EXPCOL.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %NOFUNC RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F66 FOR FIELD %NOFUNC
                                         MODIF ID OLD.
PARAMETERS:       %TVIEW RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 34(26) TEXT-F68 FOR FIELD %TVIEW
                                          MODIF ID OLD,
                  END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %GRAPH RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F61 FOR FIELD %GRAPH
                                         MODIF ID OLD.
PARAMETERS:       %TEXT RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 34(26) TEXT-F69 FOR FIELD %TEXT
                                          MODIF ID OLD,
                  END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %ABC RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F70 FOR FIELD %ABC
                                         MODIF ID OLD.
PARAMETERS:       %EXCEL RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 34(26) TEXT-F60 FOR FIELD %EXCEL
                                         MODIF ID OLD,
                  END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %EIS RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F63 FOR FIELD %EIS
                                         MODIF ID OLD.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %XINT RADIOBUTTON GROUP FUNC MODIF ID XIN.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F73 FOR FIELD %XINT
                                         MODIF ID XIN.
PARAMETERS:       %XINTK(30) LOWER CASE MODIF ID XIN.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %DOWN RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F64 FOR FIELD %DOWN
                                         MODIF ID OLD.
PARAMETERS:       %PATH(132) LOWER CASE MODIF ID OLD.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %SAVE RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F62 FOR FIELD %SAVE
                                         MODIF ID OLD.
PARAMETERS:       %LISTID(40) LOWER CASE MODIF ID OLD.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: END OF BLOCK DIRECT.
SELECTION-SCREEN: END OF BLOCK PROG.

DATA: BEGIN OF %G00 OCCURS 100,
            PPC_CONF_MAT-CONFQUANT LIKE PPC_CONF_MAT-CONFQUANT,
            PPC_CONF_MAT-CONFUNIT-0101 LIKE PPC_CONF_MAT-CONFUNIT,
            PPC_HEAD-POSTDATE LIKE PPC_HEAD-POSTDATE,
            PPC_HEAD-CRTIME LIKE PPC_HEAD-CRTIME,
            PPC_HEAD-CONFQUANT LIKE PPC_HEAD-CONFQUANT,
            PPC_HEAD-CONFUNIT-0201 LIKE PPC_HEAD-CONFUNIT,
            PPC_HEAD-FLG_REVERSAL LIKE PPC_HEAD-FLG_REVERSAL,
            PPC_HEAD-FLG_DEL LIKE PPC_HEAD-FLG_DEL,
            CKMLHD-MATNR LIKE CKMLHD-MATNR,
            CKMLMV013-AUFNR LIKE CKMLMV013-AUFNR,
            PPC_ORD_INF-MATERIALNR LIKE PPC_ORD_INF-MATERIALNR,
            PPC_ORD_INF-VERSION LIKE PPC_ORD_INF-VERSION,
            PPC_ORD_INF-ORDERID LIKE PPC_ORD_INF-ORDERID,
            PPC_RP-REPPOINT_EXT LIKE PPC_RP-REPPOINT_EXT,
            PPC_MAT-LGORT LIKE PPC_MAT-LGORT,
            PPC_MAT-GMOVE_IND LIKE PPC_MAT-GMOVE_IND,
            PPC_MAT-MATNR LIKE PPC_MAT-MATNR,
            PPC_MAT-PRVBE LIKE PPC_MAT-PRVBE,
      END OF %G00.
DATA: BEGIN OF %%G00,
            PPC_CONF_MAT-CONFQUANT(018),
            PPC_CONF_MAT-CONFUNIT-0101 LIKE PPC_CONF_MAT-CONFUNIT,
            PPC_HEAD-POSTDATE(010),
            PPC_HEAD-CRTIME(019),
            PPC_HEAD-CONFQUANT(017),
            PPC_HEAD-CONFUNIT-0201 LIKE PPC_HEAD-CONFUNIT,
            PPC_HEAD-FLG_REVERSAL(001),
            PPC_HEAD-FLG_DEL(001),
            CKMLHD-MATNR(040),
            CKMLMV013-AUFNR(012),
            PPC_ORD_INF-MATERIALNR(040),
            PPC_ORD_INF-VERSION(004),
            PPC_ORD_INF-ORDERID(022),
            PPC_RP-REPPOINT_EXT(018),
            PPC_MAT-LGORT(004),
            PPC_MAT-GMOVE_IND(001),
            PPC_MAT-MATNR(040),
            PPC_MAT-PRVBE(010),
      END OF %%G00.
DATA %ZNR TYPE I.
DATA %LZNR TYPE I VALUE 99999.
FIELD-GROUPS HEADER.
FIELD-GROUPS %FG01.
DATA %ANY-01.
DATA %EXT-PPC_HEAD01.
DATA %EXT-PPC_CONF_MAT01.
FIELD-GROUPS %FG02.
DATA %ANY-02.
DATA %EXT-PPC_HEAD02.
FIELD-GROUPS %FG03.
DATA %ANY-03.
FIELD-GROUPS %FG04.
DATA %ANY-04.
FIELD-GROUPS %FGPPC_HEAD01.
DATA %SUM-PPC_HEAD-CRTIME(16) TYPE P  DECIMALS 00 .
FIELD-GROUPS %FGWRPPC_CONF_MAT01.
FIELD-GROUPS %FGWRPPC_HEAD02.

CONTROLS TVIEW100 TYPE TABLEVIEW USING SCREEN 100.

AT SELECTION-SCREEN .
PERFORM ALVL_CHECK(RSAQEXCE) USING %ALVL 'G00'.
PERFORM TESTMODE(RSAQEXCE).
PERFORM CHECK_EXPCOL(RSAQEXCE) USING %ALV.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR %ALVL .
PERFORM ALVL_VALUE_REQUEST(RSAQEXCE) USING %ALVL 'G00'.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR %XINTK .
PERFORM XINT_VALUE_REQUEST(RSAQEXCE).

AT SELECTION-SCREEN OUTPUT .

PERFORM RINIT(RSAQBRST).
PERFORM SET_EXPCOL(RSAQEXCE) USING %ALV PB%EXCO.
PERFORM ALVL_SET_INVISIBLE(RSAQEXCE).
PERFORM SET_XINT_PARAMS(RSAQEXCE).

INITIALIZATION.
PERFORM INIT_XINT(RSAQEXCE).
PERFORM SET_WWW_FLAGS(RSAQEXCE).
PERFORM INIT_PRINT_PARAMS(RSAQEXCE).

START-OF-SELECTION.
INSERT %SUM-PPC_HEAD-CRTIME INTO %FGPPC_HEAD01.
INSERT PPC_CONF_MAT-CONFUNIT INTO %FGWRPPC_CONF_MAT01.
INSERT PPC_CONF_MAT-CONFQUANT INTO %FGWRPPC_CONF_MAT01.
INSERT PPC_HEAD-CONFUNIT INTO %FGWRPPC_HEAD02.
INSERT PPC_HEAD-CONFQUANT INTO %FGWRPPC_HEAD02.
INSERT %COUNT-PPC_CONF_MAT INTO HEADER.
INSERT %LINR-PPC_CONF_MAT INTO HEADER.
INSERT PPC_CONF_MAT-CONFQUANT INTO %FG01.
INSERT PPC_CONF_MAT-CONFUNIT INTO %FG01.
INSERT PPC_HEAD-POSTDATE INTO %FG01.
INSERT PPC_HEAD-CRTIME INTO %FG01.
INSERT PPC_HEAD-CONFQUANT INTO %FG02.
INSERT PPC_HEAD-CONFUNIT INTO %FG02.
INSERT PPC_HEAD-FLG_REVERSAL INTO %FG02.
INSERT PPC_HEAD-FLG_DEL INTO %FG02.
INSERT CKMLHD-MATNR INTO %FG02.
INSERT CKMLMV013-AUFNR INTO %FG02.
INSERT PPC_ORD_INF-MATERIALNR INTO %FG03.
INSERT PPC_ORD_INF-VERSION INTO %FG03.
INSERT PPC_ORD_INF-ORDERID INTO %FG03.
INSERT PPC_RP-REPPOINT_EXT INTO %FG04.
INSERT PPC_MAT-LGORT INTO %FG04.
INSERT PPC_MAT-GMOVE_IND INTO %FG04.
INSERT PPC_MAT-MATNR INTO %FG04.
INSERT PPC_MAT-PRVBE INTO %FG04.
PERFORM INIT_TEXTHANDLING(RSAQEXCE) USING 'CL_TEXT_IDENTIFIER' ' '
        'ZCO_PPC_MAT'.
data: %ret type i.
  if sy-batch is initial and %excel <> space.
    perform check_wingui(rsaqsyst) using %ret.
    if %ret <> 0.
      message e842(aq).
    endif.
  endif.
PERFORM AUTHORITY_BEGIN(RSAQEXCE) USING 'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM AUTHORITY(RSAQEXCE) USING 'PPC_CONF_MAT'
                                  'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM AUTHORITY(RSAQEXCE) USING 'PPC_HEAD'
                                  'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM AUTHORITY(RSAQEXCE) USING 'PPC_RP'
                                  'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM AUTHORITY(RSAQEXCE) USING 'PPC_MAT_DET'
                                  'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM AUTHORITY(RSAQEXCE) USING 'PPC_ORD_INF'
                                  'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM AUTHORITY(RSAQEXCE) USING 'CKMLHD'
                                  'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM AUTHORITY(RSAQEXCE) USING 'CKMLMV013'
                                  'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM AUTHORITY(RSAQEXCE) USING 'PPC_MAT'
                                  'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM AUTHORITY_END(RSAQEXCE) USING 'CL_QUERY_TAB_ACCESS_AUTHORITY'.
PERFORM %COMP_LDESC.
SELECT PPC_CONF_MAT~ACCID PPC_CONF_MAT~CONFQUANT PPC_CONF_MAT~CONFUNIT
       PPC_CONF_MAT~HEADID PPC_HEAD~CONFQUANT PPC_HEAD~CONFUNIT
       PPC_HEAD~CRTIME PPC_HEAD~FLG_DEL PPC_HEAD~FLG_REVERSAL
       PPC_HEAD~HEADID PPC_HEAD~ORDERID PPC_HEAD~POSTDATE
       PPC_HEAD~REPPOINT PPC_RP~REPPOINT PPC_RP~REPPOINT_EXT
       PPC_MAT_DET~ACCID PPC_MAT_DET~CALCNR PPC_MAT_DET~MATID
       PPC_ORD_INF~MATERIALNR PPC_ORD_INF~ORDERID PPC_ORD_INF~PLANT
       PPC_ORD_INF~VERSION CKMLHD~KALNR CKMLHD~MATNR CKMLMV013~AUFNR
       CKMLMV013~PMATN CKMLMV013~PRWRK CKMLMV013~VERID
       PPC_MAT~GMOVE_IND PPC_MAT~LGORT PPC_MAT~MATID PPC_MAT~MATNR
       PPC_MAT~PRVBE
INTO (PPC_CONF_MAT-ACCID , PPC_CONF_MAT-CONFQUANT
     , PPC_CONF_MAT-CONFUNIT , PPC_CONF_MAT-HEADID , PPC_HEAD-CONFQUANT
     , PPC_HEAD-CONFUNIT , PPC_HEAD-CRTIME , PPC_HEAD-FLG_DEL
     , PPC_HEAD-FLG_REVERSAL , PPC_HEAD-HEADID , PPC_HEAD-ORDERID
     , PPC_HEAD-POSTDATE , PPC_HEAD-REPPOINT , PPC_RP-REPPOINT
     , PPC_RP-REPPOINT_EXT , PPC_MAT_DET-ACCID , PPC_MAT_DET-CALCNR
     , PPC_MAT_DET-MATID , PPC_ORD_INF-MATERIALNR , PPC_ORD_INF-ORDERID
     , PPC_ORD_INF-PLANT , PPC_ORD_INF-VERSION , CKMLHD-KALNR
     , CKMLHD-MATNR , CKMLMV013-AUFNR , CKMLMV013-PMATN
     , CKMLMV013-PRWRK , CKMLMV013-VERID , PPC_MAT-GMOVE_IND
     , PPC_MAT-LGORT , PPC_MAT-MATID , PPC_MAT-MATNR , PPC_MAT-PRVBE )
FROM ( PPC_CONF_MAT
       INNER JOIN PPC_HEAD
       ON PPC_HEAD~HEADID = PPC_CONF_MAT~HEADID
       INNER JOIN PPC_RP
       ON PPC_RP~REPPOINT = PPC_HEAD~REPPOINT
       INNER JOIN PPC_MAT_DET
       ON PPC_MAT_DET~ACCID = PPC_CONF_MAT~ACCID
       INNER JOIN PPC_ORD_INF
       ON PPC_ORD_INF~ORDERID = PPC_HEAD~ORDERID
       INNER JOIN CKMLHD
       ON CKMLHD~KALNR = PPC_MAT_DET~CALCNR
       INNER JOIN CKMLMV013
       ON CKMLMV013~PMATN = PPC_ORD_INF~MATERIALNR
       AND CKMLMV013~PRWRK = PPC_ORD_INF~PLANT
       AND CKMLMV013~VERID = PPC_ORD_INF~VERSION
       INNER JOIN PPC_MAT
       ON PPC_MAT~MATID = PPC_MAT_DET~MATID )
       WHERE PPC_HEAD~CRTIME IN SP$00003
         AND PPC_HEAD~POSTDATE IN SP$00002
         AND PPC_RP~REPPOINT_EXT IN SP$00009
         AND PPC_ORD_INF~MATERIALNR IN SP$00006
         AND PPC_ORD_INF~ORDERID IN SP$00008
         AND PPC_ORD_INF~VERSION IN SP$00007
         AND CKMLHD~MATNR IN SP$00004
         AND CKMLMV013~AUFNR IN SP$00005
         AND PPC_MAT~GMOVE_IND IN SP$00011
         AND PPC_MAT~LGORT IN SP$00012
         AND PPC_MAT~MATNR IN SP$00010
         AND PPC_MAT~PRVBE IN SP$00013.
  %DBACC = %DBACC - 1.
  IF %DBACC = 0.
    STOP.
  ENDIF.
  CHECK SP$00004.
  CHECK SP$00005.
  CHECK SP$00003.
  CHECK SP$00002.
  CHECK SP$00011.
  CHECK SP$00012.
  CHECK SP$00010.
  CHECK SP$00013.
  CHECK SP$00006.
  CHECK SP$00008.
  CHECK SP$00007.
  CHECK SP$00009.
  ADD 1 TO %COUNT-PPC_CONF_MAT.
  %LINR-PPC_CONF_MAT = '01'.
  EXTRACT %FG01.
  %EXT-PPC_HEAD01 = 'X'.
    %SUM-PPC_HEAD-CRTIME = PPC_HEAD-CRTIME.
    EXTRACT %FGPPC_HEAD01.
  %EXT-PPC_CONF_MAT01 = 'X'.
    EXTRACT %FGWRPPC_CONF_MAT01.
  %LINR-PPC_CONF_MAT = '02'.
  EXTRACT %FG02.
  %EXT-PPC_HEAD02 = 'X'.
    EXTRACT %FGWRPPC_HEAD02.
  %LINR-PPC_CONF_MAT = '03'.
  EXTRACT %FG03.
  %LINR-PPC_CONF_MAT = '04'.
  EXTRACT %FG04.
ENDSELECT.

END-OF-SELECTION.
SORT AS TEXT.
%DIACT = SPACE.
%BATCH = SY-BATCH.
IF %BATCH <> SPACE.
  IF %EIS <> SPACE.
    %DIACT = 'E'.
    IF %EISPROTOCOL = SPACE.
      NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
               LINE-SIZE 0083 LINE-COUNT 0065.
    ELSE.
      NEW-PAGE PRINT ON NO DIALOG
               PARAMETERS %INIT_PRI_PARAMS.
    ENDIF.
  ENDIF.
  IF %ALV <> SPACE.
    %DIACT = 'V'.
    %ALV_LAYOUT = %ALVL.
    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
             LINE-SIZE 0083 LINE-COUNT 0065.
  ENDIF.
  IF %SAVE <> SPACE.
    %DIACT = 'S'.
    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
             LINE-SIZE 0083 LINE-COUNT 0065.
  ENDIF.
ELSEIF %CALLED_BY_WWW <> SPACE.
  %DIACT = SPACE.
ELSEIF %CALLED_BY_WWW_ALV <> SPACE.
  %DIACT = 'V'.
ELSE.
  PERFORM INIT_PRINT_PARAMS(RSAQEXCE).
  IF %SAVE  <> SPACE. %DIACT = 'S'. ENDIF.
  IF %XINT  <> SPACE. %DIACT = 'I'. ENDIF.
  IF %TVIEW <> SPACE. %DIACT = 'T'. ENDIF.
  IF %ALV   <> SPACE. %DIACT = 'V'. ENDIF.
  IF %DOWN  <> SPACE. %DIACT = 'D'. ENDIF.
  IF %EIS   <> SPACE. %DIACT = 'E'. ENDIF.
  IF %GRAPH <> SPACE. %DIACT = 'G'. ENDIF.
  IF %EXCEL <> SPACE. %DIACT = 'X'. ENDIF.
  IF %TEXT  <> SPACE. %DIACT = 'W'. ENDIF.
  IF %ABC   <> SPACE. %DIACT = 'A'. ENDIF.
  IF %DIACT <> SPACE AND %DIACT <> 'S' AND %DIACT <> 'W'.
    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
             LINE-SIZE 0083 LINE-COUNT 0065.
  ENDIF.
  %PATHNAME = %PATH.
  IF %DIACT = 'I'.
    %FUNCTIONKEY = %XINTK.
  ENDIF.
  IF %DIACT = 'V'.
    %ALV_LAYOUT = %ALVL.
  ENDIF.
ENDIF.
FREE MEMORY ID 'AQLISTDATA'.
IF %MEMMODE <> SPACE.
  IF %BATCH <> SPACE.
    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
             LINE-SIZE 0083 LINE-COUNT 0065.
  ENDIF.
  %DIACT = '1'.
ENDIF.
%TITEL = ' '.
IF SY-SUBTY O %PRFLAG AND %TITEL = SPACE.
  NEW-PAGE WITH-TITLE.
ENDIF.
%TVSIZE = 0200.
%PLINE = 1.
%PZGR  = 1.
%FIRST = 'X'.
PERFORM %OUTPUT.
%FIRST = SPACE.
IF %DIACT <> SPACE AND %DIACT <> 'S'.
  IF %BATCH = SPACE.
    NEW-PAGE PRINT OFF.
    IF NOT ( %DIACT = 'V' AND %UCOMM = 'PRIN' ).
      NEW-PAGE NO-HEADING NO-TITLE.
      WRITE SPACE.
    ENDIF.
  ENDIF.
ELSE.
  PERFORM PF-STATUS(RSAQEXCE) USING 'XXX X '.
ENDIF.
CLEAR: %TAB, %LINE, %CONT.
IF %DATA_SELECTED = SPACE.
  IF %DIACT = '1'.
    EXPORT EMPTY FROM %EMPTY TO MEMORY ID 'AQLISTDATA'.
    LEAVE.
  ELSE.
    IF %BATCH = SPACE AND
       %CALLED_BY_WWW = SPACE AND
       %CALLED_BY_WWW_ALV = SPACE.
      MESSAGE S260(AQ).
      LEAVE LIST-PROCESSING.
    ELSE.
      IF %CALLED_BY_WWW_ALV = SPACE.
        %DIACT = SPACE.
      ENDIF.
    ENDIF.
  ENDIF.
ENDIF.
IF %DIACT = 'S'.
  PERFORM %SAVE_LIST.
  LEAVE LIST-PROCESSING.
ENDIF.
IF %DIACT = 'V' AND %BATCH <> SPACE.
  NEW-PAGE PRINT OFF.
  PERFORM SET_PRINT_PARAMS(RSAQEXCE).
  PERFORM %DOWNLOAD USING 'ALV'.
  LEAVE.
ENDIF.
IF %DIACT = 'V' AND %CALLED_BY_WWW_ALV <> SPACE.
  PERFORM %DOWNLOAD USING 'ALV'.
  LEAVE.
ENDIF.
IF %DIACT = 'V' AND %UCOMM = 'PRIN'.
  NEW-PAGE PRINT OFF.
  PERFORM SET_PRINT_PARAMS(RSAQEXCE).
  PERFORM %DOWNLOAD USING 'ALV'.
  LEAVE LIST-PROCESSING.
ENDIF.
IF %DIACT = 'P' AND %BATCH <> SPACE.
  PERFORM %DOWNLOAD USING '+DAT'.
  LEAVE LIST-PROCESSING.
ENDIF.
IF %DIACT = 'E' AND %BATCH <> SPACE.
  PERFORM %DOWNLOAD USING 'EIS'.
  LEAVE LIST-PROCESSING.
ENDIF.
IF %DIACT = '1'.
  PERFORM %DOWNLOAD USING '+MEM'.
  LEAVE.
ENDIF.
IF %DIACT = 'X'.
  SET USER-COMMAND 'XXL'.
ELSEIF %DIACT = 'W'.
  SET USER-COMMAND 'TEXT'.
ELSEIF %DIACT = 'V'.
  SET USER-COMMAND 'ALV'.
ELSEIF %DIACT = 'T'.
  SET USER-COMMAND 'VIEW'.
ELSEIF %DIACT = 'G'.
  SET USER-COMMAND 'GRAF'.
ELSEIF %DIACT = 'A'.
  SET USER-COMMAND 'ABCA'.
ELSEIF %DIACT = 'E'.
  SET USER-COMMAND 'EIS'.
ELSEIF %DIACT = 'D'.
  SET USER-COMMAND 'DOWN'.
ELSEIF %DIACT = 'I'.
  SET USER-COMMAND 'XINT'.
ELSEIF %DIACT = 'P'.
  SET USER-COMMAND '+DAT'.
ENDIF.

TOP-OF-PAGE.
PERFORM %TOP-OF-PAGE.

END-OF-PAGE.
PERFORM PAGE_FOOT(RSAQEXCE).
PERFORM %SAVE_PAGE.

TOP-OF-PAGE DURING LINE-SELECTION.
PERFORM %TOP-OF-PAGE.

AT USER-COMMAND.
CASE SY-UCOMM.
WHEN 'EXIT'.
  LEAVE PROGRAM.
WHEN 'RETN'.
  PERFORM RETURN(RSAQEXCE).
WHEN 'CANC'.
  PERFORM RETURN(RSAQEXCE).
WHEN 'WEIT'.
  PERFORM RETURN(RSAQEXCE).
WHEN 'INHA'.
  PERFORM CATALOGUE(RSAQEXCE).
WHEN 'AUSL'.
  PERFORM PICKUP(RSAQEXCE).
WHEN 'AUSW'.
  PERFORM PICKUP(RSAQEXCE).
WHEN 'RCAA'.
  PERFORM RCHAIN(RSAQBRST).
WHEN 'RCAL'.
  PERFORM RCALL(RSAQBRST).
WHEN 'VGLI'.
  PERFORM CHANGE(RSAQEXCE).
WHEN 'VGLE'.
  PERFORM CHANGE(RSAQEXCE).
WHEN 'TOTO'.
  PERFORM CHANGE(RSAQEXCE).
WHEN 'VSTA'.
  PERFORM CHANGE(RSAQEXCE).
WHEN 'VSTE'.
  PERFORM RETURN(RSAQEXCE).
WHEN 'SAVL'.
  PERFORM %SAVE_LIST.
WHEN 'ODRU'.
  PERFORM PRINT_LIST(RSAQEXCE).
WHEN 'COPA'.
  PERFORM PRINT_COVER_PAGE(RSAQEXCE).
WHEN 'TEXT'.
  PERFORM %DOWNLOAD USING 'TEXT'.
WHEN 'ALV'.
  PERFORM %DOWNLOAD USING 'ALV'.
WHEN 'VIEW'.
  PERFORM %VIEW.
WHEN 'XXL'.
  PERFORM %DOWNLOAD USING 'XXL'.
WHEN 'GRAF'.
  PERFORM %DOWNLOAD USING 'GRAF'.
WHEN 'ABCA'.
  PERFORM %DOWNLOAD USING 'ABCA'.
WHEN 'EIS'.
  PERFORM %DOWNLOAD USING 'EIS'.
WHEN 'DOWN'.
  PERFORM %DOWNLOAD USING 'DOWN'.
WHEN 'XINT'.
  PERFORM %DOWNLOAD USING 'XINT'.
ENDCASE.
CLEAR: %CLINE, %ZGR.
CLEAR: %TAB, %LINE, %CONT.
IF %DIACT <> SPACE.
  LEAVE LIST-PROCESSING.
ENDIF.


FORM %COMP_LDESC.

  REFRESH %LDESC.
  REFRESH %GDESC.
  PERFORM LDESC(RSAQEXCE) USING 'G00010002 018M    X 00  98'
    TEXT-A00 TEXT-B00 TEXT-H00 'PPC_CONF_MAT-CONFQUANT'
    PPC_CONF_MAT-CONFQUANT 'PPC_CONF_MAT-CONFQUANT'.
  PERFORM LDESC(RSAQEXCE) USING 'G00020000 003E      00  98'
    TEXT-A01 TEXT-B01 TEXT-H00 'PPC_CONF_MAT-CONFUNIT'
    PPC_CONF_MAT-CONFUNIT 'PPC_CONF_MAT-CONFUNIT-0101'.
  PERFORM LDESC(RSAQEXCE) USING 'G00030000X010       00  98'
    TEXT-A02 TEXT-B02 TEXT-H00 'PPC_HEAD-POSTDATE' PPC_HEAD-POSTDATE
    'PPC_HEAD-POSTDATE'.
  PERFORM LDESC(RSAQEXCE) USING 'G00040036 019     X 00  98'
    TEXT-A03 TEXT-B03 TEXT-H00 'PPC_HEAD-CRTIME' PPC_HEAD-CRTIME
    'PPC_HEAD-CRTIME'.
  PERFORM LDESC(RSAQEXCE) USING 'G00051002 017M    X 00  98'
    TEXT-A04 TEXT-B04 TEXT-H00 'PPC_HEAD-CONFQUANT' PPC_HEAD-CONFQUANT
    'PPC_HEAD-CONFQUANT'.
  PERFORM LDESC(RSAQEXCE) USING 'G00061000 003E      00  98'
    TEXT-A05 TEXT-B05 TEXT-H00 'PPC_HEAD-CONFUNIT' PPC_HEAD-CONFUNIT
    'PPC_HEAD-CONFUNIT-0201'.
  PERFORM LDESC(RSAQEXCE) USING 'G00071000X001       00  98'
    TEXT-A06 TEXT-B06 TEXT-H00 'PPC_HEAD-FLG_REVERSAL'
    PPC_HEAD-FLG_REVERSAL 'PPC_HEAD-FLG_REVERSAL'.
  PERFORM LDESC(RSAQEXCE) USING 'G00081000X001       00  98'
    TEXT-A07 TEXT-B07 TEXT-H00 'PPC_HEAD-FLG_DEL' PPC_HEAD-FLG_DEL
    'PPC_HEAD-FLG_DEL'.
  PERFORM LDESC(RSAQEXCE) USING 'G00091000X040       00  98'
    TEXT-A08 TEXT-B08 TEXT-H00 'CKMLHD-MATNR' CKMLHD-MATNR
    'CKMLHD-MATNR'.
  PERFORM LDESC(RSAQEXCE) USING 'G00101000X012       00  10'
    TEXT-A09 TEXT-B09 TEXT-H01 'CKMLMV013-AUFNR' CKMLMV013-AUFNR
    'CKMLMV013-AUFNR'.
  PERFORM LDESC(RSAQEXCE) USING 'G00112000X040       00  98'
    TEXT-A10 TEXT-B10 TEXT-H00 'PPC_ORD_INF-MATERIALNR'
    PPC_ORD_INF-MATERIALNR 'PPC_ORD_INF-MATERIALNR'.
  PERFORM LDESC(RSAQEXCE) USING 'G00122000X004       00  98'
    TEXT-A11 TEXT-B11 TEXT-H00 'PPC_ORD_INF-VERSION'
    PPC_ORD_INF-VERSION 'PPC_ORD_INF-VERSION'.
  PERFORM LDESC(RSAQEXCE) USING 'G00132000X022       00  98'
    TEXT-A12 TEXT-B12 TEXT-H00 'PPC_ORD_INF-ORDERID'
    PPC_ORD_INF-ORDERID 'PPC_ORD_INF-ORDERID'.
  PERFORM LDESC(RSAQEXCE) USING 'G00143000X018       00  98'
    TEXT-A13 TEXT-B13 TEXT-H00 'PPC_RP-REPPOINT_EXT'
    PPC_RP-REPPOINT_EXT 'PPC_RP-REPPOINT_EXT'.
  PERFORM LDESC(RSAQEXCE) USING 'G00153000X004       00  9'
    TEXT-A14 TEXT-B14 TEXT-H02 'PPC_MAT-LGORT' PPC_MAT-LGORT
    'PPC_MAT-LGORT'.
  PERFORM LDESC(RSAQEXCE) USING 'G00163000X001       00  9'
    TEXT-A15 TEXT-B15 TEXT-H02 'PPC_MAT-GMOVE_IND' PPC_MAT-GMOVE_IND
    'PPC_MAT-GMOVE_IND'.
  PERFORM LDESC(RSAQEXCE) USING 'G00173000X040       00  9'
    TEXT-A16 TEXT-B16 TEXT-H02 'PPC_MAT-MATNR' PPC_MAT-MATNR
    'PPC_MAT-MATNR'.
  PERFORM LDESC(RSAQEXCE) USING 'G00183000X010       00  9'
    TEXT-A17 TEXT-B17 TEXT-H02 'PPC_MAT-PRVBE' PPC_MAT-PRVBE
    'PPC_MAT-PRVBE'.
  PERFORM GDESC(RSAQEXCE) USING 'G00' 1 20 ' ' ' ' 'X'.
  PERFORM COMPLETE_LDESC(RSAQEXCE) TABLES %LDESC.

ENDFORM.

FORM %OUTPUT.

DESCRIBE TABLE %PRLIST LINES %MAX_PRLIST.
%HEAD = 'AAA'.
%KEYEMPTY = SPACE.
NEW-PAGE.
PERFORM %OUTPUT_GL.
PERFORM COMPLETE_PAGE(RSAQEXCE).
%HEAD = 'ZZZ'.
PERFORM LAST_PTAB_ENTRY(RSAQEXCE).
NEW-PAGE.
IF %KEYEMPTY <> SPACE.
  MESSAGE S894(AQ).
ENDIF.

ENDFORM.


FORM %TOP-OF-PAGE.

IF SY-UCOMM = 'INHA'. EXIT. ENDIF.
IF SY-UCOMM = 'COPA'. EXIT. ENDIF.
IF %HEAD    = SPACE.  EXIT. ENDIF.
IF %HEAD = 'DDD'.
  PERFORM TVIEWPAGE(RSAQEXCE).
  EXIT.
ENDIF.
IF %HEAD = 'GGG'.
  PERFORM PAGE(RSAQEXCE) USING 'G00' TEXT-GRL 083 %GLFRAME 001.
  SET LEFT SCROLL-BOUNDARY COLUMN 002.
  PERFORM SET_SCROLL_BOUNDARY(RSAQEXCE) USING 002.
  IF %TOTO <> SPACE. EXIT. ENDIF.
ELSE.
  CASE %HEAD.
  ENDCASE.
ENDIF.

ENDFORM.


FORM %NEWLINE.

  %UFLAG = SPACE.
  NEW-LINE.
  WRITE: '|', 083 '|'.
  POSITION 2.

ENDFORM.

FORM %SKIP USING COUNT.

  IF SY-LINNO > 1.
    %UFLAG = SPACE.
    DO COUNT TIMES.
      NEW-LINE.
      FORMAT RESET.
      WRITE: '|', 083 '|'.
    ENDDO.
  ENDIF.

ENDFORM.

FORM %ULINE.

  IF %UFLAG = SPACE.
    IF SY-LINNO > 1.
      ULINE /1(083).
    ENDIF.
    %UFLAG = 'X'.
  ENDIF.

ENDFORM.

FORM %HIDE.

  IF %BATCH <> SPACE AND %DIACT = 'S'.
    PERFORM HIDE(RSAQEXCE).
  ELSE.
    HIDE: %TAB, %LINE, %CONT.
  ENDIF.

ENDFORM.

FORM %HIDE_COLOR.

  IF %BATCH <> SPACE AND %DIACT = 'S'.
    PERFORM HIDE_COLOR(RSAQEXCE).
  ELSE.
    HIDE: %FINT, %FCOL.
  ENDIF.

ENDFORM.

FORM %RCALL USING NAME VALUE.

FIELD-SYMBOLS <FIELD>.

  ASSIGN (NAME) TO <FIELD>.
  READ CURRENT LINE FIELD VALUE <FIELD> INTO VALUE.
  IF SY-SUBRC <> 0.
    VALUE = SPACE.
    EXIT.
  ENDIF.
  IF VALUE = SPACE AND %TAB = 'G00' AND %LDESC-FCUR NA 'FM'.
    READ TABLE %G00 INDEX %LINE.
    IF SY-SUBRC = 0.
      ASSIGN COMPONENT %LDESC-FNAMEINT OF STRUCTURE %G00
                                       TO <FIELD>.
      IF SY-SUBRC = 0.
        WRITE <FIELD> TO VALUE(%LDESC-FOLEN).
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.

FORM %SAVE_PAGE.

  IF %BATCH <> SPACE AND %DIACT = 'S'.
    PERFORM SAVE_PAGE(RSAQEXCE) TABLES %ST_LISTE.
  ENDIF.

ENDFORM.

FORM %REPLACE_VAR USING TEXT.

FIELD-SYMBOLS <VAR>.

  ASSIGN TEXT+1(*) TO <VAR>.

ENDFORM.

FORM %SAVE_LIST.

DATA: %SFLAG,
      QREPORT LIKE SY-REPID.

  IF %DIACT = 'S'. %SFLAG = 'X'. ENDIF.
  QREPORT = SY-REPID.
  PERFORM SAVE_LIST(RSAQEXCE) TABLES %ST_LISTE
                              USING QREPORT %SFLAG %LISTID.
  IF %QL_ID <> SPACE.
    %DLFLAG = 'X'.
    %LISTSIZE = 0083.
    PERFORM COMP_SELECTION_SCREEN(RSAQEXCE).
    EXPORT %ST_LISTE %PTAB %LDESC %GDESC %DLFLAG %LISTSIZE
           %SELECTIONS
           %G00
           TO DATABASE AQLDB(AQ) ID %QL_ID.
  ENDIF.

ENDFORM.

FORM %REFRESH.

  CASE %TAB.
  WHEN 'G00'.
    IMPORT %G00 FROM DATABASE AQLDB(AQ) ID %QL_ID.
  ENDCASE.

ENDFORM.

FORM %DOWNLOAD USING CODE.

DATA: QREPORT LIKE SY-REPID.

  PERFORM INIT_DOWNLOAD(RSAQEXCE).
  QREPORT = SY-REPID.
  CASE %TAB.
  WHEN 'G00'.
    PERFORM DOWNLOAD(RSAQEXCE)
            TABLES %G00 USING CODE QREPORT TEXT-GRL.
  WHEN OTHERS.
    MESSAGE S860(AQ).
  ENDCASE.

ENDFORM.

FORM %SET_DATA CHANGING L_LINES TYPE I.

  IMPORT LDATA TO %G00 FROM MEMORY ID 'AQLISTDATA'.
  DESCRIBE TABLE %G00 LINES L_LINES.
  FREE MEMORY ID 'AQLISTDATA'.

ENDFORM.

FORM %GET_DATA TABLES DATATAB STRUCTURE %G00
               USING  FIRST TYPE I
                      LAST  TYPE I.

  APPEND LINES OF %G00 FROM FIRST TO LAST TO DATATAB.

ENDFORM.

FORM %GET_REF_TO_TABLE USING LID         LIKE RSAQLDESC-LID
                             REF_TO_ITAB TYPE REF TO DATA
                             SUBRC       LIKE SY-SUBRC.

  SUBRC = 0.
  CASE LID.
  WHEN 'G00'.
    CREATE DATA REF_TO_ITAB LIKE %G00[].
  WHEN OTHERS.
    SUBRC = 4.
    MESSAGE S860(AQ).
  ENDCASE.

ENDFORM.

FORM %VIEW.

DATA: RET TYPE I.

  PERFORM CHECK_WINGUI(RSAQSYST) USING RET.
  IF RET <> 0.
    MESSAGE S841(AQ).
    PERFORM %DOWNLOAD USING 'ALV'.
    EXIT.
  ENDIF.

DATA: ANZ TYPE I,
      PROG LIKE SY-REPID.

  PROG = SY-REPID.
  PERFORM INIT_DOWNLOAD(RSAQEXCE).
  CASE %TAB.
  WHEN 'G00'.
    PERFORM GENERATE_VIEW_DYNPRO(RSAQEXCE)
            USING PROG TEXT-GRL.
    DESCRIBE TABLE %G00 LINES ANZ.
    TVIEW100-LINES = ANZ.
    PERFORM INIT_VIEW(RSAQEXCE) TABLES %G00 USING TVIEW100.
    CALL SCREEN 100.
    PERFORM RESET_VIEW_DYNPRO(RSAQEXCE).
  WHEN OTHERS.
    MESSAGE S860(AQ).
  ENDCASE.

ENDFORM.


FORM %CLEAR02.

  CLEAR %G00-PPC_HEAD-CONFQUANT.
  CLEAR %G00-PPC_HEAD-CONFUNIT-0201.
  CLEAR %G00-PPC_HEAD-FLG_REVERSAL.
  CLEAR %G00-PPC_HEAD-FLG_DEL.
  CLEAR %G00-CKMLHD-MATNR.
  CLEAR %G00-CKMLMV013-AUFNR.
  PERFORM %CLEAR03.

ENDFORM.


FORM %CLEAR03.

  CLEAR %G00-PPC_ORD_INF-MATERIALNR.
  CLEAR %G00-PPC_ORD_INF-VERSION.
  CLEAR %G00-PPC_ORD_INF-ORDERID.
  PERFORM %CLEAR04.

ENDFORM.


FORM %CLEAR04.

  CLEAR %G00-PPC_RP-REPPOINT_EXT.
  CLEAR %G00-PPC_MAT-LGORT.
  CLEAR %G00-PPC_MAT-GMOVE_IND.
  CLEAR %G00-PPC_MAT-MATNR.
  CLEAR %G00-PPC_MAT-PRVBE.

ENDFORM.


FORM %OUTPUT_GL.

IF %MAX_PRLIST <> 0.
  READ TABLE %PRLIST WITH KEY TAB = 'GGG'.
  IF SY-SUBRC <> 0.
    EXIT.
  ENDIF.
ENDIF.
SET MARGIN 00.
PERFORM COMPLETE_PAGE(RSAQEXCE).
%NOCHANGE = SPACE.
NEW-PAGE.
REFRESH %WA010.
REFRESH %WA020.
REFRESH %W0100.
REFRESH %W0200.
%GLLINE   = 0.
%TAB      = 'G00'.
%LINE     = 0.
%CONT     = '0'.
%FINT     = SPACE.
%FCOL     = '0'.
%HEAD     = 'GGG'.
%CLINE    = 0.
%OUTFLAG  = SPACE.
%OUTCOMP  = SPACE.
%OUTTOTAL = SPACE.
%RFLAG    = 'AA'.
IF %DIACT <> SPACE AND %DIACT NA 'SWE'. WRITE SPACE. ENDIF.
FORMAT RESET.
LOOP.
  %DATA_SELECTED = 'X'.
  AT %FG01.
    %ZNR = '01'.
    %ZGR = '01'.
    %CLINE = %CLINE + 1.
    PERFORM %CLEAR02.
    %G00-PPC_CONF_MAT-CONFQUANT = PPC_CONF_MAT-CONFQUANT.
    %G00-PPC_CONF_MAT-CONFUNIT-0101 = PPC_CONF_MAT-CONFUNIT.
    %G00-PPC_HEAD-POSTDATE = PPC_HEAD-POSTDATE.
    %G00-PPC_HEAD-CRTIME = PPC_HEAD-CRTIME.
    IF %FIRST <> SPACE. APPEND %G00. ENDIF.
    %GLLINE = %GLLINE + 1.
    %LZNR = %ZNR.
    IF %DIACT <> SPACE AND %DIACT NA 'SWE'. CONTINUE. ENDIF.
    PERFORM CHECK(RSAQEXCE) USING ' '.
    IF %RFLAG = 'E'. EXIT. ENDIF.
    IF %RFLAG = 'AA'.
      PERFORM RESERVE(RSAQEXCE) USING 004.
    ENDIF.
    IF %RFLAG(1) = 'A'.
    FORMAT RESET.
    %FINT = 'F'. %FCOL = '0'.
    FORMAT COLOR 2. %FCOL = '2'.
    PERFORM %NEWLINE.
    WRITE 002(018) PPC_CONF_MAT-CONFQUANT
      UNIT PPC_CONF_MAT-CONFUNIT.
    %LINE = %GLLINE.
    PERFORM %HIDE.
    %LINE = 0.
    IF %RFLAG = 'AA'. HIDE %CLINE. ENDIF. HIDE %ZGR.
    PERFORM %HIDE_COLOR.
    WRITE 021(003) PPC_CONF_MAT-CONFUNIT.
    WRITE 025(010) PPC_HEAD-POSTDATE.
    WRITE 036(019) PPC_HEAD-CRTIME.
    ENDIF.
  ENDAT.
  AT %FG02.
    %ZNR = '02'.
    %ZGR = '01'.
    IF %ZNR > %LZNR.
      READ TABLE %G00 INDEX %GLLINE.
    ENDIF.
    PERFORM %CLEAR03.
    %G00-PPC_HEAD-CONFQUANT = PPC_HEAD-CONFQUANT.
    %G00-PPC_HEAD-CONFUNIT-0201 = PPC_HEAD-CONFUNIT.
    %G00-PPC_HEAD-FLG_REVERSAL = PPC_HEAD-FLG_REVERSAL.
    %G00-PPC_HEAD-FLG_DEL = PPC_HEAD-FLG_DEL.
    %G00-CKMLHD-MATNR = CKMLHD-MATNR.
    %G00-CKMLMV013-AUFNR = CKMLMV013-AUFNR.
    IF %ZNR > %LZNR.
      IF %FIRST <> SPACE. MODIFY %G00 INDEX %GLLINE. ENDIF.
    ELSE.
      IF %FIRST <> SPACE. APPEND %G00. ENDIF.
      %GLLINE = %GLLINE + 1.
    ENDIF.
    %LZNR = %ZNR.
    IF %DIACT <> SPACE AND %DIACT NA 'SWE'. CONTINUE. ENDIF.
    PERFORM CHECK(RSAQEXCE) USING ' '.
    IF %RFLAG = 'E'. EXIT. ENDIF.
    IF %RFLAG(1) = 'A'.
    FORMAT RESET.
    %FINT = 'F'. %FCOL = '0'.
    FORMAT COLOR 2. %FCOL = '2'.
    PERFORM %NEWLINE.
    WRITE 002(017) PPC_HEAD-CONFQUANT
      UNIT PPC_HEAD-CONFUNIT.
    %LINE = %GLLINE.  %CONT = '1'.
    PERFORM %HIDE.
    %LINE = 0.  %CONT = '0'.
    IF %RFLAG = 'AA'. HIDE %CLINE. ENDIF. HIDE %ZGR.
    PERFORM %HIDE_COLOR.
    WRITE 020(003) PPC_HEAD-CONFUNIT.
    WRITE 024(001) PPC_HEAD-FLG_REVERSAL.
    WRITE 026(001) PPC_HEAD-FLG_DEL.
    WRITE 028(040) CKMLHD-MATNR.
    WRITE 069(012) CKMLMV013-AUFNR.
    ENDIF.
  ENDAT.
  AT %FG03.
    %ZNR = '03'.
    %ZGR = '01'.
    IF %ZNR > %LZNR.
      READ TABLE %G00 INDEX %GLLINE.
    ENDIF.
    PERFORM %CLEAR04.
    %G00-PPC_ORD_INF-MATERIALNR = PPC_ORD_INF-MATERIALNR.
    %G00-PPC_ORD_INF-VERSION = PPC_ORD_INF-VERSION.
    %G00-PPC_ORD_INF-ORDERID = PPC_ORD_INF-ORDERID.
    IF %ZNR > %LZNR.
      IF %FIRST <> SPACE. MODIFY %G00 INDEX %GLLINE. ENDIF.
    ELSE.
      IF %FIRST <> SPACE. APPEND %G00. ENDIF.
      %GLLINE = %GLLINE + 1.
    ENDIF.
    %LZNR = %ZNR.
    IF %DIACT <> SPACE AND %DIACT NA 'SWE'. CONTINUE. ENDIF.
    PERFORM CHECK(RSAQEXCE) USING ' '.
    IF %RFLAG = 'E'. EXIT. ENDIF.
    IF %RFLAG(1) = 'A'.
    FORMAT RESET.
    %FINT = 'F'. %FCOL = '0'.
    FORMAT COLOR 2. %FCOL = '2'.
    PERFORM %NEWLINE.
    WRITE 002(040) PPC_ORD_INF-MATERIALNR.
    %LINE = %GLLINE.  %CONT = '2'.
    PERFORM %HIDE.
    %LINE = 0.  %CONT = '0'.
    IF %RFLAG = 'AA'. HIDE %CLINE. ENDIF. HIDE %ZGR.
    PERFORM %HIDE_COLOR.
    WRITE 043(004) PPC_ORD_INF-VERSION.
    WRITE 048(022) PPC_ORD_INF-ORDERID.
    ENDIF.
  ENDAT.
  AT %FG04.
    %ZNR = '04'.
    %ZGR = '01'.
    IF %ZNR > %LZNR.
      READ TABLE %G00 INDEX %GLLINE.
    ENDIF.
    %G00-PPC_RP-REPPOINT_EXT = PPC_RP-REPPOINT_EXT.
    %G00-PPC_MAT-LGORT = PPC_MAT-LGORT.
    %G00-PPC_MAT-GMOVE_IND = PPC_MAT-GMOVE_IND.
    %G00-PPC_MAT-MATNR = PPC_MAT-MATNR.
    %G00-PPC_MAT-PRVBE = PPC_MAT-PRVBE.
    IF %ZNR > %LZNR.
      IF %FIRST <> SPACE. MODIFY %G00 INDEX %GLLINE. ENDIF.
    ELSE.
      IF %FIRST <> SPACE. APPEND %G00. ENDIF.
      %GLLINE = %GLLINE + 1.
    ENDIF.
    %LZNR = %ZNR.
    IF %DIACT <> SPACE AND %DIACT NA 'SWE'. CONTINUE. ENDIF.
    PERFORM CHECK(RSAQEXCE) USING ' '.
    IF %RFLAG = 'E'. EXIT. ENDIF.
    IF %RFLAG(1) = 'A'.
    FORMAT RESET.
    %FINT = 'F'. %FCOL = '0'.
    FORMAT COLOR 2. %FCOL = '2'.
    PERFORM %NEWLINE.
    WRITE 002(018) PPC_RP-REPPOINT_EXT.
    %LINE = %GLLINE.  %CONT = '3'.
    PERFORM %HIDE.
    %LINE = 0.  %CONT = '0'.
    IF %RFLAG = 'AA'. HIDE %CLINE. ENDIF. HIDE %ZGR.
    PERFORM %HIDE_COLOR.
    WRITE 021(004) PPC_MAT-LGORT.
    WRITE 026(001) PPC_MAT-GMOVE_IND.
    WRITE 028(040) PPC_MAT-MATNR.
    WRITE 069(010) PPC_MAT-PRVBE.
    ENDIF.
  ENDAT.
  AT %FGWRPPC_CONF_MAT01.
    CLEAR %W0100.
    %W0100-PPC_CONF_MAT-CONFUNIT = PPC_CONF_MAT-CONFUNIT.
    %W0100-PPC_CONF_MAT-CONFQUANT = PPC_CONF_MAT-CONFQUANT.
    COLLECT %W0100.
  ENDAT.
  AT %FGWRPPC_HEAD02.
    CLEAR %W0200.
    %W0200-PPC_HEAD-CONFUNIT = PPC_HEAD-CONFUNIT.
    %W0200-PPC_HEAD-CONFQUANT = PPC_HEAD-CONFQUANT.
    COLLECT %W0200.
  ENDAT.
  AT LAST.
    %ZNR = 0.
    %RFLAG = 'AA'.
    %OUTTOTAL = 'X'.
    PERFORM RESERVE(RSAQEXCE) USING 2.
    PERFORM %ULINE.
    FORMAT RESET.
    FORMAT INTENSIFIED ON COLOR 3.
    %FINT = 'N'. %FCOL = '3'.
    %NOCHANGE = 'X'.
    PERFORM %NEWLINE.
    %NOCHANGE = SPACE.
    WRITE (13) TEXT-F02.
    PERFORM %HIDE.
    PERFORM %HIDE_COLOR.
    SORT %W0100 BY PPC_CONF_MAT-CONFUNIT.
    SORT %W0200 BY PPC_HEAD-CONFUNIT.
      PERFORM %NEWLINE.
      WRITE 056 '*'.
      WRITE 036(019) SUM(%SUM-PPC_HEAD-CRTIME).
      PERFORM %HIDE.
      PERFORM %HIDE_COLOR.
      REFRESH %WA010.
      DO.
        %SUBRC = 4.
        CLEAR %WA010.
        READ TABLE %W0100 INDEX SY-INDEX.
        IF SY-SUBRC = 0.
          %SUBRC = 0.
          %WA010-PPC_CONF_MAT-PPC_CONF_MAT-CONFUNIT =
          %W0100-PPC_CONF_MAT-CONFUNIT.
          %WA010-PPC_CONF_MAT-CONFQUANT = %W0100-PPC_CONF_MAT-CONFQUANT.
        ENDIF.
        IF %SUBRC = 4.
          EXIT.
        ENDIF.
        APPEND %WA010.
      ENDDO.
      LOOP AT %WA010.
        IF SY-TABIX <> 1.
          PERFORM %NEWLINE.
        ENDIF.
        IF %WA010-PPC_CONF_MAT-PPC_CONF_MAT-CONFUNIT = SPACE.
          WRITE 002(018) %WA010-PPC_CONF_MAT-CONFQUANT
                UNIT %WA010-PPC_CONF_MAT-PPC_CONF_MAT-CONFUNIT NO-ZERO.
          IF NOT %WA010-PPC_CONF_MAT-CONFQUANT IS INITIAL.
            %KEYEMPTY = 'X'.
          ENDIF.
        ELSE.
          WRITE 002(018) %WA010-PPC_CONF_MAT-CONFQUANT
                UNIT %WA010-PPC_CONF_MAT-PPC_CONF_MAT-CONFUNIT.
        ENDIF.
        WRITE 021(003) %WA010-PPC_CONF_MAT-PPC_CONF_MAT-CONFUNIT.
        PERFORM %HIDE.
        PERFORM %HIDE_COLOR.
      ENDLOOP.
      PERFORM %NEWLINE.
      WRITE 056 '*'.
      REFRESH %WA020.
      DO.
        %SUBRC = 4.
        CLEAR %WA020.
        READ TABLE %W0200 INDEX SY-INDEX.
        IF SY-SUBRC = 0.
          %SUBRC = 0.
          %WA020-PPC_HEAD-PPC_HEAD-CONFUNIT = %W0200-PPC_HEAD-CONFUNIT.
          %WA020-PPC_HEAD-CONFQUANT = %W0200-PPC_HEAD-CONFQUANT.
        ENDIF.
        IF %SUBRC = 4.
          EXIT.
        ENDIF.
        APPEND %WA020.
      ENDDO.
      LOOP AT %WA020.
        IF SY-TABIX <> 1.
          PERFORM %NEWLINE.
        ENDIF.
        IF %WA020-PPC_HEAD-PPC_HEAD-CONFUNIT = SPACE.
          WRITE 002(017) %WA020-PPC_HEAD-CONFQUANT
                UNIT %WA020-PPC_HEAD-PPC_HEAD-CONFUNIT NO-ZERO.
          IF NOT %WA020-PPC_HEAD-CONFQUANT IS INITIAL.
            %KEYEMPTY = 'X'.
          ENDIF.
        ELSE.
          WRITE 002(017) %WA020-PPC_HEAD-CONFQUANT
                UNIT %WA020-PPC_HEAD-PPC_HEAD-CONFUNIT.
        ENDIF.
        WRITE 020(003) %WA020-PPC_HEAD-PPC_HEAD-CONFUNIT.
        PERFORM %HIDE.
        PERFORM %HIDE_COLOR.
      ENDLOOP.
  ENDAT.
ENDLOOP.
%RFLAG = 'AA'.
PERFORM %ULINE.
CLEAR: %CLINE, %ZGR.

ENDFORM.



MODULE %INIT_VIEW OUTPUT.

  CASE %TAB.
  WHEN 'G00'.
    PERFORM INIT_PBO(RSAQEXCE) TABLES %G00 USING TVIEW100 'X'.
  WHEN OTHERS.
    MESSAGE S860(AQ).
  ENDCASE.

ENDMODULE.

MODULE %PBO_VIEW OUTPUT.

  CASE %TAB.
  WHEN 'G00'.
    PERFORM LOOP_PBO(RSAQEXCE) TABLES %G00 USING %%G00 TVIEW100.
  ENDCASE.

ENDMODULE.

MODULE %PAI_VIEW INPUT.

  CASE %TAB.
  WHEN 'G00'.
    PERFORM LOOP_PAI(RSAQEXCE) TABLES %G00 USING %%G00 TVIEW100.
  ENDCASE.

ENDMODULE.

MODULE %OKCODE_VIEW INPUT.

  CASE %TAB.
  WHEN 'G00'.
    PERFORM OKCODE(RSAQEXCE) TABLES %G00 USING TVIEW100.
  ENDCASE.

ENDMODULE.
