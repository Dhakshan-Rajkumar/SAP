************************************************************************
* Program Name      : ZACO04R_SVAR
* Author            : Hyung Jin Youn
* Creation Date     : 16/06/2004
* Specifications By : Bong-Doo Moon
* Pattern           : Report 1-1
* Development Request No: UD1K910931
* Add documentation :
* Description       : Display data in Table "ZTCO_SHOPVAR"
*                     Generated by report tools
* the BDC structures for BATCH INPUT processing
*
* Modifications Log
* Date   Developer   Request ID    Description
*
************************************************************************
* Comments
* This report was generated by SAP and changed by programmer
* The naming convension can be different from that
* in HMMA Development Standard Document (v2)

REPORT ZACO04R_SVAR
   LINE-SIZE 253 NO STANDARD PAGE HEADING LINE-COUNT 000(001).
*
*INCLUDE <SYMBOL>.
*INCLUDE <ICON>.
*SELECTION-SCREEN: BEGIN OF BLOCK PROG
*                           WITH FRAME TITLE TEXT-F58.
*
*TABLES ZTCO_SHOPVAR.
*DATA %COUNT-ZTCO_SHOPVAR(4) TYPE X.
*DATA %LINR-ZTCO_SHOPVAR(2).
*
*TABLES AQLDB.
*
*INCLUDE RSAQEXCD.
*
*DATA: BEGIN OF %ST_LISTE OCCURS 100,
*          HEAD(1),
*          TAB(3),
*          LINE(6) TYPE N,
*          CONT(1) TYPE N,
*          FINT(1),
*          FINV(1),
*          FCOL(1) TYPE N,
*          TEXT(0253),
*      END OF %ST_LISTE.
*
*DATA %DATA_SELECTED(1).
*DATA %GLFRAME(1)  VALUE 'X' .
*DATA %UFLAG(1).
*DATA %USTFLAG(1).
*DATA %GRST_TEXT(255).
*DATA %GLLINE TYPE I.
*DATA %TABIX LIKE SY-TABIX.
*DATA %PRFLAG(1) TYPE X VALUE '02'.
*
*
*DATA %PERC(4) TYPE P DECIMALS 3.
*DATA %P100(4) TYPE P DECIMALS 3 VALUE '100.000'.
*DATA %RANGCT TYPE I.
*DATA %RANGCC(8).
*DATA %SUBRC LIKE SY-SUBRC.
*
*DATA: BEGIN OF %WA010 OCCURS 10,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            BEGIN OF ZTCO_SHOPVAR,
*                  ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*                  ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            END OF ZTCO_SHOPVAR,
*      END OF %WA010.
*
*DATA: BEGIN OF %WA020 OCCURS 10,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            BEGIN OF ZTCO_SHOPVAR,
*                  ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*                  ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            END OF ZTCO_SHOPVAR,
*      END OF %WA020.
*
*DATA: BEGIN OF %WA030 OCCURS 10,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*            BEGIN OF ZTCO_SHOPVAR,
*                  ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*                  ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            END OF ZTCO_SHOPVAR,
*      END OF %WA030.
*
*DATA: BEGIN OF %W0100 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0100.
*
*DATA: BEGIN OF %W0101 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0101.
*
*DATA: BEGIN OF %W0102 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0102.
*
*DATA: BEGIN OF %W0103 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0103.
*
*DATA: BEGIN OF %W0104 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0104.
*
*DATA: BEGIN OF %W0105 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0105.
*
*DATA: BEGIN OF %W0106 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0106.
*
*DATA: BEGIN OF %W0107 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0107.
*
*DATA: BEGIN OF %W0108 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0108.
*
*DATA: BEGIN OF %W0109 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0109.
*
*DATA: BEGIN OF %W0110 OCCURS 20,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-FROZEN_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-ACTUAL_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-CURR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-QTYVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SPCVAR_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-PRDIF(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-WIP_AMT(16) TYPE P DECIMALS 02,
*            ZTCO_SHOPVAR-SCRAP_AMT(16) TYPE P DECIMALS 02,
*      END OF %W0110.
*
*DATA: BEGIN OF %W0200 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0200.
*
*DATA: BEGIN OF %W0201 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0201.
*
*DATA: BEGIN OF %W0202 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0202.
*
*DATA: BEGIN OF %W0203 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0203.
*
*DATA: BEGIN OF %W0204 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0204.
*
*DATA: BEGIN OF %W0205 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0205.
*
*DATA: BEGIN OF %W0206 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0206.
*
*DATA: BEGIN OF %W0207 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0207.
*
*DATA: BEGIN OF %W0208 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0208.
*
*DATA: BEGIN OF %W0209 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0209.
*
*DATA: BEGIN OF %W0210 OCCURS 20,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-FROZEN_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-QTYVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-CURR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-SPCVAR_QTY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-WIP_QUANTITY(16) TYPE P DECIMALS 03,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(16) TYPE P DECIMALS 03,
*      END OF %W0210.
*SELECT-OPTIONS SP$00001 FOR ZTCO_SHOPVAR-KOKRS MEMORY ID CAC.
*SELECT-OPTIONS SP$00002 FOR ZTCO_SHOPVAR-BDATJ MEMORY ID BDTJ.
*SELECT-OPTIONS SP$00003 FOR ZTCO_SHOPVAR-POPER MEMORY ID POPR.
*SELECT-OPTIONS SP$00004 FOR ZTCO_SHOPVAR-WERKS MEMORY ID WRK.
*SELECT-OPTIONS SP$00005 FOR ZTCO_SHOPVAR-SHOP.
*SELECT-OPTIONS SP$00006 FOR ZTCO_SHOPVAR-FSC_MATNR MEMORY ID MAT.
*SELECT-OPTIONS SP$00007 FOR ZTCO_SHOPVAR-LLV_MATNR MEMORY ID MAT.
*SELECT-OPTIONS SP$00008 FOR ZTCO_SHOPVAR-TYPPS.
*SELECT-OPTIONS SP$00009 FOR ZTCO_SHOPVAR-KSTAR MEMORY ID KAT.
*SELECT-OPTIONS SP$00010 FOR ZTCO_SHOPVAR-ELEMT.
*SELECT-OPTIONS SP$00011 FOR ZTCO_SHOPVAR-KOSTL MEMORY ID KOS.
*SELECT-OPTIONS SP$00012 FOR ZTCO_SHOPVAR-LSTAR MEMORY ID LAR.
*SELECT-OPTIONS SP$00013 FOR ZTCO_SHOPVAR-MEEHT.
*SELECT-OPTIONS SP$00014 FOR ZTCO_SHOPVAR-MTART MEMORY ID MTA.
*SELECTION-SCREEN SKIP 1.
*SELECTION-SCREEN: BEGIN OF BLOCK DIRECT
*                  WITH FRAME TITLE TEXT-F59.
*SELECTION-SCREEN: BEGIN OF LINE.
*PARAMETERS:       %ALV RADIOBUTTON GROUP FUNC USER-COMMAND OUTBUT
*                         DEFAULT 'X' .
*SELECTION-SCREEN: COMMENT 4(26) TEXT-F72 FOR FIELD %ALV.
*PARAMETERS:       %ALVL TYPE SLIS_VARI.
*SELECTION-SCREEN: PUSHBUTTON 72(4) PB%EXCO USER-COMMAND EXPCOL.
*SELECTION-SCREEN: END OF LINE.
*SELECTION-SCREEN: BEGIN OF LINE.
*PARAMETERS:       %NOFUNC RADIOBUTTON GROUP FUNC MODIF ID OLD.
*SELECTION-SCREEN: COMMENT 4(26) TEXT-F66 FOR FIELD %NOFUNC
*                                         MODIF ID OLD.
*PARAMETERS:       %TVIEW RADIOBUTTON GROUP FUNC MODIF ID OLD.
*SELECTION-SCREEN: COMMENT 34(26) TEXT-F68 FOR FIELD %TVIEW
*                                          MODIF ID OLD,
*                  END OF LINE.
*SELECTION-SCREEN: BEGIN OF LINE.
*PARAMETERS:       %GRAPH RADIOBUTTON GROUP FUNC MODIF ID OLD.
*SELECTION-SCREEN: COMMENT 4(26) TEXT-F61 FOR FIELD %GRAPH
*                                         MODIF ID OLD.
*PARAMETERS:       %TEXT RADIOBUTTON GROUP FUNC MODIF ID OLD.
*SELECTION-SCREEN: COMMENT 34(26) TEXT-F69 FOR FIELD %TEXT
*                                          MODIF ID OLD,
*                  END OF LINE.
*SELECTION-SCREEN: BEGIN OF LINE.
*PARAMETERS:       %ABC RADIOBUTTON GROUP FUNC MODIF ID OLD.
*SELECTION-SCREEN: COMMENT 4(26) TEXT-F70 FOR FIELD %ABC
*                                         MODIF ID OLD.
*PARAMETERS:       %EXCEL RADIOBUTTON GROUP FUNC MODIF ID OLD.
*SELECTION-SCREEN: COMMENT 34(26) TEXT-F60 FOR FIELD %EXCEL
*                                         MODIF ID OLD,
*                  END OF LINE.
*SELECTION-SCREEN: BEGIN OF LINE.
*PARAMETERS:       %EIS RADIOBUTTON GROUP FUNC MODIF ID OLD.
*SELECTION-SCREEN: COMMENT 4(26) TEXT-F63 FOR FIELD %EIS
*                                         MODIF ID OLD.
*SELECTION-SCREEN: END OF LINE.
*SELECTION-SCREEN: BEGIN OF LINE.
*PARAMETERS:       %XINT RADIOBUTTON GROUP FUNC MODIF ID XIN.
*SELECTION-SCREEN: COMMENT 4(26) TEXT-F73 FOR FIELD %XINT
*                                         MODIF ID XIN.
*PARAMETERS:       %XINTK(30) LOWER CASE MODIF ID XIN.
*SELECTION-SCREEN: END OF LINE.
*SELECTION-SCREEN: BEGIN OF LINE.
*PARAMETERS:       %DOWN RADIOBUTTON GROUP FUNC MODIF ID OLD.
*SELECTION-SCREEN: COMMENT 4(26) TEXT-F64 FOR FIELD %DOWN
*                                         MODIF ID OLD.
*PARAMETERS:       %PATH(132) LOWER CASE MODIF ID OLD.
*SELECTION-SCREEN: END OF LINE.
*SELECTION-SCREEN: BEGIN OF LINE.
*PARAMETERS:       %SAVE RADIOBUTTON GROUP FUNC MODIF ID OLD.
*SELECTION-SCREEN: COMMENT 4(26) TEXT-F62 FOR FIELD %SAVE
*                                         MODIF ID OLD.
*PARAMETERS:       %LISTID(40) LOWER CASE MODIF ID OLD.
*SELECTION-SCREEN: END OF LINE.
*SELECTION-SCREEN: END OF BLOCK DIRECT.
*SELECTION-SCREEN: END OF BLOCK PROG.
*
*DATA: BEGIN OF %G00 OCCURS 100,
*            ZTCO_SHOPVAR-KOKRS LIKE ZTCO_SHOPVAR-KOKRS,
*            ZTCO_SHOPVAR-BDATJ LIKE ZTCO_SHOPVAR-BDATJ,
*            ZTCO_SHOPVAR-POPER LIKE ZTCO_SHOPVAR-POPER,
*            ZTCO_SHOPVAR-WERKS LIKE ZTCO_SHOPVAR-WERKS,
*            ZTCO_SHOPVAR-SHOP LIKE ZTCO_SHOPVAR-SHOP,
*            ZTCO_SHOPVAR-FSC_MATNR LIKE ZTCO_SHOPVAR-FSC_MATNR,
*            ZTCO_SHOPVAR-LLV_MATNR LIKE ZTCO_SHOPVAR-LLV_MATNR,
*            ZTCO_SHOPVAR-TYPPS LIKE ZTCO_SHOPVAR-TYPPS,
*            ZTCO_SHOPVAR-KSTAR LIKE ZTCO_SHOPVAR-KSTAR,
*            ZTCO_SHOPVAR-ELEMT LIKE ZTCO_SHOPVAR-ELEMT,
*            ZTCO_SHOPVAR-KOSTL LIKE ZTCO_SHOPVAR-KOSTL,
*            ZTCO_SHOPVAR-LSTAR LIKE ZTCO_SHOPVAR-LSTAR,
*            ZTCO_SHOPVAR-MEEHT LIKE ZTCO_SHOPVAR-MEEHT,
*            ZTCO_SHOPVAR-MTART LIKE ZTCO_SHOPVAR-MTART,
*            ZTCO_SHOPVAR-HWAER LIKE ZTCO_SHOPVAR-HWAER,
*            ZTCO_SHOPVAR-BWKEY LIKE ZTCO_SHOPVAR-BWKEY,
*            ZTCO_SHOPVAR-BWTAR LIKE ZTCO_SHOPVAR-BWTAR,
*            ZTCO_SHOPVAR-FROZEN_QTY LIKE ZTCO_SHOPVAR-FROZEN_QTY,
*            ZTCO_SHOPVAR-FROZEN_AMT LIKE ZTCO_SHOPVAR-FROZEN_AMT,
*            ZTCO_SHOPVAR-CURR_QTY LIKE ZTCO_SHOPVAR-CURR_QTY,
*            ZTCO_SHOPVAR-CURR_AMT LIKE ZTCO_SHOPVAR-CURR_AMT,
*            ZTCO_SHOPVAR-ACTUAL_QTY LIKE ZTCO_SHOPVAR-ACTUAL_QTY,
*            ZTCO_SHOPVAR-ACTUAL_AMT LIKE ZTCO_SHOPVAR-ACTUAL_AMT,
*            ZTCO_SHOPVAR-SPCVAR_QTY LIKE ZTCO_SHOPVAR-SPCVAR_QTY,
*            ZTCO_SHOPVAR-SPCVAR_AMT LIKE ZTCO_SHOPVAR-SPCVAR_AMT,
*            ZTCO_SHOPVAR-QTYVAR_QTY LIKE ZTCO_SHOPVAR-QTYVAR_QTY,
*            ZTCO_SHOPVAR-QTYVAR_AMT LIKE ZTCO_SHOPVAR-QTYVAR_AMT,
*            ZTCO_SHOPVAR-WIP_QUANTITY LIKE ZTCO_SHOPVAR-WIP_QUANTITY,
*            ZTCO_SHOPVAR-WIP_AMT LIKE ZTCO_SHOPVAR-WIP_AMT,
*            ZTCO_SHOPVAR-ACTUAL_SCRAP LIKE ZTCO_SHOPVAR-ACTUAL_SCRAP,
*            ZTCO_SHOPVAR-SCRAP_AMT LIKE ZTCO_SHOPVAR-SCRAP_AMT,
*            ZTCO_SHOPVAR-PRDIF LIKE ZTCO_SHOPVAR-PRDIF,
*            ZTCO_SHOPVAR-MEINS LIKE ZTCO_SHOPVAR-MEINS,
*            ZTCO_SHOPVAR-ERDAT LIKE ZTCO_SHOPVAR-ERDAT,
*            ZTCO_SHOPVAR-ERZET LIKE ZTCO_SHOPVAR-ERZET,
*            ZTCO_SHOPVAR-ERNAM LIKE ZTCO_SHOPVAR-ERNAM,
*            ZTCO_SHOPVAR-AEDAT LIKE ZTCO_SHOPVAR-AEDAT,
*            ZTCO_SHOPVAR-AEZET LIKE ZTCO_SHOPVAR-AEZET,
*            ZTCO_SHOPVAR-AENAM LIKE ZTCO_SHOPVAR-AENAM,
*      END OF %G00.
*DATA: BEGIN OF %%G00,
*            ZTCO_SHOPVAR-KOKRS(004),
*            ZTCO_SHOPVAR-BDATJ(004),
*            ZTCO_SHOPVAR-POPER(003),
*            ZTCO_SHOPVAR-WERKS(004),
*            ZTCO_SHOPVAR-SHOP(010),
*            ZTCO_SHOPVAR-FSC_MATNR(040),
*            ZTCO_SHOPVAR-LLV_MATNR(040),
*            ZTCO_SHOPVAR-TYPPS(001),
*            ZTCO_SHOPVAR-KSTAR(010),
*            ZTCO_SHOPVAR-ELEMT(003),
*            ZTCO_SHOPVAR-KOSTL(010),
*            ZTCO_SHOPVAR-LSTAR(006),
*            ZTCO_SHOPVAR-MEEHT(003),
*            ZTCO_SHOPVAR-MTART(004),
*            ZTCO_SHOPVAR-HWAER(005),
*            ZTCO_SHOPVAR-BWKEY(004),
*            ZTCO_SHOPVAR-BWTAR(010),
*            ZTCO_SHOPVAR-FROZEN_QTY(016),
*            ZTCO_SHOPVAR-FROZEN_AMT(015),
*            ZTCO_SHOPVAR-CURR_QTY(016),
*            ZTCO_SHOPVAR-CURR_AMT(015),
*            ZTCO_SHOPVAR-ACTUAL_QTY(016),
*            ZTCO_SHOPVAR-ACTUAL_AMT(015),
*            ZTCO_SHOPVAR-SPCVAR_QTY(016),
*            ZTCO_SHOPVAR-SPCVAR_AMT(015),
*            ZTCO_SHOPVAR-QTYVAR_QTY(016),
*            ZTCO_SHOPVAR-QTYVAR_AMT(015),
*            ZTCO_SHOPVAR-WIP_QUANTITY(014),
*            ZTCO_SHOPVAR-WIP_AMT(015),
*            ZTCO_SHOPVAR-ACTUAL_SCRAP(014),
*            ZTCO_SHOPVAR-SCRAP_AMT(015),
*            ZTCO_SHOPVAR-PRDIF(015),
*            ZTCO_SHOPVAR-MEINS(003),
*            ZTCO_SHOPVAR-ERDAT(010),
*            ZTCO_SHOPVAR-ERZET(008),
*            ZTCO_SHOPVAR-ERNAM(012),
*            ZTCO_SHOPVAR-AEDAT(010),
*            ZTCO_SHOPVAR-AEZET(008),
*            ZTCO_SHOPVAR-AENAM(012),
*      END OF %%G00.
*DATA %ZNR TYPE I.
*DATA %LZNR TYPE I VALUE 99999.
*FIELD-GROUPS HEADER.
*DATA %GROUP01.
*DATA %%ZTCO_SHOPVAR-KOKRS LIKE ZTCO_SHOPVAR-KOKRS.
*DATA %%%ZTCO_SHOPVAR-KOKRS(1).
*DATA %GROUP0101.
*DATA %GROUP0201.
*DATA %GROUP0301.
*DATA %GROUP02.
*DATA %%ZTCO_SHOPVAR-BDATJ LIKE ZTCO_SHOPVAR-BDATJ.
*DATA %%%ZTCO_SHOPVAR-BDATJ(1).
*DATA %GROUP0102.
*DATA %GROUP0202.
*DATA %GROUP0302.
*DATA %GROUP03.
*DATA %%ZTCO_SHOPVAR-POPER LIKE ZTCO_SHOPVAR-POPER.
*DATA %%%ZTCO_SHOPVAR-POPER(1).
*DATA %GROUP0103.
*DATA %GROUP0203.
*DATA %GROUP0303.
*DATA %GROUP04.
*DATA %%ZTCO_SHOPVAR-WERKS LIKE ZTCO_SHOPVAR-WERKS.
*DATA %%%ZTCO_SHOPVAR-WERKS(1).
*DATA %GROUP0104.
*DATA %GROUP0204.
*DATA %GROUP0304.
*DATA %GROUP05.
*DATA %%ZTCO_SHOPVAR-SHOP LIKE ZTCO_SHOPVAR-SHOP.
*DATA %%%ZTCO_SHOPVAR-SHOP(1).
*DATA %GROUP0105.
*DATA %GROUP0205.
*DATA %GROUP0305.
*DATA %GROUP06.
*DATA %%ZTCO_SHOPVAR-FSC_MATNR LIKE ZTCO_SHOPVAR-FSC_MATNR.
*DATA %%%ZTCO_SHOPVAR-FSC_MATNR(1).
*DATA %GROUP0106.
*DATA %GROUP0206.
*DATA %GROUP0306.
*DATA %GROUP07.
*DATA %%ZTCO_SHOPVAR-LLV_MATNR LIKE ZTCO_SHOPVAR-LLV_MATNR.
*DATA %%%ZTCO_SHOPVAR-LLV_MATNR(1).
*DATA %GROUP0107.
*DATA %GROUP0207.
*DATA %GROUP0307.
*DATA %GROUP08.
*DATA %%ZTCO_SHOPVAR-TYPPS LIKE ZTCO_SHOPVAR-TYPPS.
*DATA %%%ZTCO_SHOPVAR-TYPPS(1).
*DATA %GROUP0108.
*DATA %GROUP0208.
*DATA %GROUP0308.
*DATA %GROUP09.
*DATA %%ZTCO_SHOPVAR-KSTAR LIKE ZTCO_SHOPVAR-KSTAR.
*DATA %%%ZTCO_SHOPVAR-KSTAR(1).
*DATA %GROUP0109.
*DATA %GROUP0209.
*DATA %GROUP0309.
*DATA %GROUP10.
*DATA %%ZTCO_SHOPVAR-ELEMT LIKE ZTCO_SHOPVAR-ELEMT.
*DATA %%%ZTCO_SHOPVAR-ELEMT(1).
*DATA %GROUP0110.
*DATA %GROUP0210.
*DATA %GROUP0310.
*FIELD-GROUPS %FG01.
*DATA %ANY-01.
*DATA %EXT-ZTCO_SHOPVAR01.
*FIELD-GROUPS %FG02.
*DATA %ANY-02.
*DATA %EXT-ZTCO_SHOPVAR02.
*FIELD-GROUPS %FG03.
*DATA %ANY-03.
*DATA %EXT-ZTCO_SHOPVAR03.
*FIELD-GROUPS %FGWRZTCO_SHOPVAR02.
*FIELD-GROUPS %FGWRZTCO_SHOPVAR03.
*FIELD-GROUPS %FGWRZTCO_SHOPVAR01.
*
*CONTROLS TVIEW100 TYPE TABLEVIEW USING SCREEN 100.
*
*AT SELECTION-SCREEN .
*PERFORM ALVL_CHECK(RSAQEXCE) USING %ALVL 'G00'.
*PERFORM TESTMODE(RSAQEXCE).
*PERFORM CHECK_EXPCOL(RSAQEXCE) USING %ALV.
*
*
*AT SELECTION-SCREEN ON VALUE-REQUEST FOR %ALVL .
*PERFORM ALVL_VALUE_REQUEST(RSAQEXCE) USING %ALVL 'G00'.
*
*AT SELECTION-SCREEN ON VALUE-REQUEST FOR %XINTK .
*PERFORM XINT_VALUE_REQUEST(RSAQEXCE).
*
*AT SELECTION-SCREEN OUTPUT .
*
*PERFORM RINIT(RSAQBRST).
*PERFORM SET_EXPCOL(RSAQEXCE) USING %ALV PB%EXCO.
*PERFORM ALVL_SET_INVISIBLE(RSAQEXCE).
*PERFORM SET_XINT_PARAMS(RSAQEXCE).
*
*INITIALIZATION.
*PERFORM INIT_XINT(RSAQEXCE).
*PERFORM SET_WWW_FLAGS(RSAQEXCE).
*PERFORM INIT_PRINT_PARAMS(RSAQEXCE).
*
*START-OF-SELECTION.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-WIP_QUANTITY INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-SPCVAR_QTY INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-ACTUAL_QTY INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FGWRZTCO_SHOPVAR03.
*INSERT ZTCO_SHOPVAR-ACTUAL_SCRAP INTO %FGWRZTCO_SHOPVAR03.
*INSERT ZTCO_SHOPVAR-QTYVAR_QTY INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-CURR_QTY INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FGWRZTCO_SHOPVAR01.
*INSERT ZTCO_SHOPVAR-FROZEN_QTY INTO %FGWRZTCO_SHOPVAR01.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-ACTUAL_AMT INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FGWRZTCO_SHOPVAR03.
*INSERT ZTCO_SHOPVAR-PRDIF INTO %FGWRZTCO_SHOPVAR03.
*INSERT ZTCO_SHOPVAR-QTYVAR_AMT INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-SCRAP_AMT INTO %FGWRZTCO_SHOPVAR03.
*INSERT ZTCO_SHOPVAR-SPCVAR_AMT INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-WIP_AMT INTO %FGWRZTCO_SHOPVAR03.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FGWRZTCO_SHOPVAR01.
*INSERT ZTCO_SHOPVAR-FROZEN_AMT INTO %FGWRZTCO_SHOPVAR01.
*INSERT ZTCO_SHOPVAR-CURR_AMT INTO %FGWRZTCO_SHOPVAR02.
*INSERT ZTCO_SHOPVAR-KOKRS INTO HEADER.
*INSERT ZTCO_SHOPVAR-BDATJ INTO HEADER.
*INSERT ZTCO_SHOPVAR-POPER INTO HEADER.
*INSERT ZTCO_SHOPVAR-WERKS INTO HEADER.
*INSERT ZTCO_SHOPVAR-SHOP INTO HEADER.
*INSERT ZTCO_SHOPVAR-FSC_MATNR INTO HEADER.
*INSERT ZTCO_SHOPVAR-LLV_MATNR INTO HEADER.
*INSERT ZTCO_SHOPVAR-TYPPS INTO HEADER.
*INSERT ZTCO_SHOPVAR-KSTAR INTO HEADER.
*INSERT ZTCO_SHOPVAR-ELEMT INTO HEADER.
*INSERT %COUNT-ZTCO_SHOPVAR INTO HEADER.
*INSERT %LINR-ZTCO_SHOPVAR INTO HEADER.
*INSERT ZTCO_SHOPVAR-KOSTL INTO %FG01.
*INSERT ZTCO_SHOPVAR-LSTAR INTO %FG01.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FG01.
*INSERT ZTCO_SHOPVAR-MTART INTO %FG01.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FG01.
*INSERT ZTCO_SHOPVAR-BWKEY INTO %FG01.
*INSERT ZTCO_SHOPVAR-BWTAR INTO %FG01.
*INSERT ZTCO_SHOPVAR-FROZEN_QTY INTO %FG01.
*INSERT ZTCO_SHOPVAR-FROZEN_AMT INTO %FG01.
*INSERT ZTCO_SHOPVAR-CURR_QTY INTO %FG02.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FG02.
*INSERT ZTCO_SHOPVAR-CURR_AMT INTO %FG02.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FG02.
*INSERT ZTCO_SHOPVAR-ACTUAL_QTY INTO %FG02.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FG02.
*INSERT ZTCO_SHOPVAR-ACTUAL_AMT INTO %FG02.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FG02.
*INSERT ZTCO_SHOPVAR-SPCVAR_QTY INTO %FG02.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FG02.
*INSERT ZTCO_SHOPVAR-SPCVAR_AMT INTO %FG02.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FG02.
*INSERT ZTCO_SHOPVAR-QTYVAR_QTY INTO %FG02.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FG02.
*INSERT ZTCO_SHOPVAR-QTYVAR_AMT INTO %FG02.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FG02.
*INSERT ZTCO_SHOPVAR-WIP_QUANTITY INTO %FG02.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FG02.
*INSERT ZTCO_SHOPVAR-WIP_AMT INTO %FG03.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FG03.
*INSERT ZTCO_SHOPVAR-ACTUAL_SCRAP INTO %FG03.
*INSERT ZTCO_SHOPVAR-MEEHT INTO %FG03.
*INSERT ZTCO_SHOPVAR-SCRAP_AMT INTO %FG03.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FG03.
*INSERT ZTCO_SHOPVAR-PRDIF INTO %FG03.
*INSERT ZTCO_SHOPVAR-HWAER INTO %FG03.
*INSERT ZTCO_SHOPVAR-MEINS INTO %FG03.
*INSERT ZTCO_SHOPVAR-ERDAT INTO %FG03.
*INSERT ZTCO_SHOPVAR-ERZET INTO %FG03.
*INSERT ZTCO_SHOPVAR-ERNAM INTO %FG03.
*INSERT ZTCO_SHOPVAR-AEDAT INTO %FG03.
*INSERT ZTCO_SHOPVAR-AEZET INTO %FG03.
*INSERT ZTCO_SHOPVAR-AENAM INTO %FG03.
*PERFORM INIT_TEXTHANDLING(RSAQEXCE) USING 'CL_TEXT_IDENTIFIER' ' '
*        'SYSTQV000000000000000029'.
*PERFORM AUTHORITY_BEGIN(RSAQEXCE).
*PERFORM AUTHORITY(RSAQEXCE) USING 'ZTCO_SHOPVAR'.
*PERFORM AUTHORITY_END(RSAQEXCE).
*PERFORM %COMP_LDESC.
*SELECT ACTUAL_AMT ACTUAL_QTY ACTUAL_SCRAP AEDAT AENAM AEZET BDATJ BWKEY
*       BWTAR CURR_AMT CURR_QTY ELEMT ERDAT ERNAM ERZET FROZEN_AMT
*       FROZEN_QTY FSC_MATNR HWAER KOKRS KOSTL KSTAR LLV_MATNR LSTAR
*       MEEHT MEINS MTART POPER PRDIF QTYVAR_AMT QTYVAR_QTY SCRAP_AMT
*       SHOP SPCVAR_AMT SPCVAR_QTY TYPPS WERKS WIP_AMT WIP_QUANTITY
*       INTO CORRESPONDING FIELDS OF ZTCO_SHOPVAR
*       FROM ZTCO_SHOPVAR
*       WHERE BDATJ IN SP$00002
*         AND ELEMT IN SP$00010
*         AND FSC_MATNR IN SP$00006
*         AND KOKRS IN SP$00001
*         AND KOSTL IN SP$00011
*         AND KSTAR IN SP$00009
*         AND LLV_MATNR IN SP$00007
*         AND LSTAR IN SP$00012
*         AND MEEHT IN SP$00013
*         AND MTART IN SP$00014
*         AND POPER IN SP$00003
*         AND SHOP IN SP$00005
*         AND TYPPS IN SP$00008
*         AND WERKS IN SP$00004.
*  %DBACC = %DBACC - 1.
*  IF %DBACC = 0.
*    STOP.
*  ENDIF.
*  ADD 1 TO %COUNT-ZTCO_SHOPVAR.
*  %LINR-ZTCO_SHOPVAR = '01'.
*  EXTRACT %FG01.
*  %EXT-ZTCO_SHOPVAR01 = 'X'.
*    EXTRACT %FGWRZTCO_SHOPVAR01.
*  %LINR-ZTCO_SHOPVAR = '02'.
*  EXTRACT %FG02.
*  %EXT-ZTCO_SHOPVAR02 = 'X'.
*    EXTRACT %FGWRZTCO_SHOPVAR02.
*  %LINR-ZTCO_SHOPVAR = '03'.
*  EXTRACT %FG03.
*  %EXT-ZTCO_SHOPVAR03 = 'X'.
*    EXTRACT %FGWRZTCO_SHOPVAR03.
*ENDSELECT.
*
*END-OF-SELECTION.
*SORT AS TEXT BY
*        ZTCO_SHOPVAR-KOKRS
*        ZTCO_SHOPVAR-BDATJ
*        ZTCO_SHOPVAR-POPER
*        ZTCO_SHOPVAR-WERKS
*        ZTCO_SHOPVAR-SHOP
*        ZTCO_SHOPVAR-FSC_MATNR
*        ZTCO_SHOPVAR-LLV_MATNR
*        ZTCO_SHOPVAR-TYPPS
*        ZTCO_SHOPVAR-KSTAR
*        ZTCO_SHOPVAR-ELEMT
*        %COUNT-ZTCO_SHOPVAR
*        %LINR-ZTCO_SHOPVAR.
*%DIACT = SPACE.
*%BATCH = SY-BATCH.
*IF %BATCH <> SPACE.
*  IF %EIS <> SPACE.
*    %DIACT = 'E'.
*    IF %EISPROTOCOL = SPACE.
*      NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
*               LINE-SIZE 0253 LINE-COUNT 0065.
*    ELSE.
*      NEW-PAGE PRINT ON NO DIALOG
*               PARAMETERS %INIT_PRI_PARAMS.
*    ENDIF.
*  ENDIF.
*  IF %ALV <> SPACE.
*    %DIACT = 'V'.
*    %ALV_LAYOUT = %ALVL.
*    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
*             LINE-SIZE 0253 LINE-COUNT 0065.
*  ENDIF.
*  IF %SAVE <> SPACE.
*    %DIACT = 'S'.
*    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
*             LINE-SIZE 0253 LINE-COUNT 0065.
*  ENDIF.
*ELSEIF %CALLED_BY_WWW <> SPACE.
*  %DIACT = SPACE.
*ELSEIF %CALLED_BY_WWW_ALV <> SPACE.
*  %DIACT = 'V'.
*ELSE.
*  PERFORM INIT_PRINT_PARAMS(RSAQEXCE).
*  IF %SAVE  <> SPACE. %DIACT = 'S'. ENDIF.
*  IF %XINT  <> SPACE. %DIACT = 'I'. ENDIF.
*  IF %TVIEW <> SPACE. %DIACT = 'T'. ENDIF.
*  IF %ALV   <> SPACE. %DIACT = 'V'. ENDIF.
*  IF %DOWN  <> SPACE. %DIACT = 'D'. ENDIF.
*  IF %EIS   <> SPACE. %DIACT = 'E'. ENDIF.
*  IF %GRAPH <> SPACE. %DIACT = 'G'. ENDIF.
*  IF %EXCEL <> SPACE. %DIACT = 'X'. ENDIF.
*  IF %TEXT  <> SPACE. %DIACT = 'W'. ENDIF.
*  IF %ABC   <> SPACE. %DIACT = 'A'. ENDIF.
*  IF %DIACT <> SPACE AND %DIACT <> 'S' AND %DIACT <> 'W'.
*    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
*             LINE-SIZE 0253 LINE-COUNT 0065.
*  ENDIF.
*  %PATHNAME = %PATH.
*  IF %DIACT = 'I'.
*    %FUNCTIONKEY = %XINTK.
*  ENDIF.
*  IF %DIACT = 'V'.
*    %ALV_LAYOUT = %ALVL.
*  ENDIF.
*ENDIF.
*FREE MEMORY ID 'AQLISTDATA'.
*IF %MEMMODE <> SPACE.
*  IF %BATCH <> SPACE.
*    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
*             LINE-SIZE 0253 LINE-COUNT 0065.
*  ENDIF.
*  %DIACT = '1'.
*ENDIF.
*%TITEL = ' '.
*IF SY-SUBTY O %PRFLAG AND %TITEL = SPACE.
*  NEW-PAGE WITH-TITLE.
*ENDIF.
*%TVSIZE = 0200.
*%PLINE = 1.
*%PZGR  = 1.
*%FIRST = 'X'.
*PERFORM %OUTPUT.
*%FIRST = SPACE.
*IF %DIACT <> SPACE AND %DIACT <> 'S'.
*  IF %BATCH = SPACE.
*    NEW-PAGE PRINT OFF.
*    IF NOT ( %DIACT = 'V' AND %UCOMM = 'PRIN' ).
*      NEW-PAGE NO-HEADING NO-TITLE.
*      WRITE SPACE.
*    ENDIF.
*  ENDIF.
*ELSE.
*  PERFORM PF-STATUS(RSAQEXCE) USING 'XXX X '.
*ENDIF.
*CLEAR: %TAB, %LINE, %CONT.
*IF %DATA_SELECTED = SPACE.
*  IF %DIACT = '1'.
*    EXPORT EMPTY FROM %EMPTY TO MEMORY ID 'AQLISTDATA'.
*    LEAVE.
*  ELSE.
*    IF %BATCH = SPACE AND
*       %CALLED_BY_WWW = SPACE AND
*       %CALLED_BY_WWW_ALV = SPACE.
*      MESSAGE S260(AQ).
*      LEAVE LIST-PROCESSING.
*    ELSE.
*      IF %CALLED_BY_WWW_ALV = SPACE.
*        %DIACT = SPACE.
*      ENDIF.
*    ENDIF.
*  ENDIF.
*ENDIF.
*IF %DIACT = 'S'.
*  PERFORM %SAVE_LIST.
*  LEAVE LIST-PROCESSING.
*ENDIF.
*IF %DIACT = 'V' AND %BATCH <> SPACE.
*  NEW-PAGE PRINT OFF.
*  PERFORM SET_PRINT_PARAMS(RSAQEXCE).
*  PERFORM %DOWNLOAD USING 'ALV'.
*  LEAVE.
*ENDIF.
*IF %DIACT = 'V' AND %CALLED_BY_WWW_ALV <> SPACE.
*  PERFORM %DOWNLOAD USING 'ALV'.
*  LEAVE.
*ENDIF.
*IF %DIACT = 'V' AND %UCOMM = 'PRIN'.
*  NEW-PAGE PRINT OFF.
*  PERFORM SET_PRINT_PARAMS(RSAQEXCE).
*  PERFORM %DOWNLOAD USING 'ALV'.
*  LEAVE LIST-PROCESSING.
*ENDIF.
*IF %DIACT = 'P' AND %BATCH <> SPACE.
*  PERFORM %DOWNLOAD USING '+DAT'.
*  LEAVE LIST-PROCESSING.
*ENDIF.
*IF %DIACT = 'E' AND %BATCH <> SPACE.
*  PERFORM %DOWNLOAD USING 'EIS'.
*  LEAVE LIST-PROCESSING.
*ENDIF.
*IF %DIACT = '1'.
*  PERFORM %DOWNLOAD USING '+MEM'.
*  LEAVE.
*ENDIF.
*IF %DIACT = 'X'.
*  SET USER-COMMAND 'XXL'.
*ELSEIF %DIACT = 'W'.
*  SET USER-COMMAND 'TEXT'.
*ELSEIF %DIACT = 'V'.
*  SET USER-COMMAND 'ALV'.
*ELSEIF %DIACT = 'T'.
*  SET USER-COMMAND 'VIEW'.
*ELSEIF %DIACT = 'G'.
*  SET USER-COMMAND 'GRAF'.
*ELSEIF %DIACT = 'A'.
*  SET USER-COMMAND 'ABCA'.
*ELSEIF %DIACT = 'E'.
*  SET USER-COMMAND 'EIS'.
*ELSEIF %DIACT = 'D'.
*  SET USER-COMMAND 'DOWN'.
*ELSEIF %DIACT = 'I'.
*  SET USER-COMMAND 'XINT'.
*ELSEIF %DIACT = 'P'.
*  SET USER-COMMAND '+DAT'.
*ENDIF.
*
*TOP-OF-PAGE.
*PERFORM %TOP-OF-PAGE.
*
*END-OF-PAGE.
*PERFORM PAGE_FOOT(RSAQEXCE).
*PERFORM %SAVE_PAGE.
*
*TOP-OF-PAGE DURING LINE-SELECTION.
*PERFORM %TOP-OF-PAGE.
*
*AT USER-COMMAND.
*CASE SY-UCOMM.
*WHEN 'EXIT'.
*  LEAVE PROGRAM.
*WHEN 'RETN'.
*  PERFORM RETURN(RSAQEXCE).
*WHEN 'CANC'.
*  PERFORM RETURN(RSAQEXCE).
*WHEN 'WEIT'.
*  PERFORM RETURN(RSAQEXCE).
*WHEN 'INHA'.
*  PERFORM CATALOGUE(RSAQEXCE).
*WHEN 'AUSL'.
*  PERFORM PICKUP(RSAQEXCE).
*WHEN 'AUSW'.
*  PERFORM PICKUP(RSAQEXCE).
*WHEN 'RCAA'.
*  PERFORM RCHAIN(RSAQBRST).
*WHEN 'RCAL'.
*  PERFORM RCALL(RSAQBRST).
*WHEN 'VGLI'.
*  PERFORM CHANGE(RSAQEXCE).
*WHEN 'VGLE'.
*  PERFORM CHANGE(RSAQEXCE).
*WHEN 'TOTO'.
*  PERFORM CHANGE(RSAQEXCE).
*WHEN 'VSTA'.
*  PERFORM CHANGE(RSAQEXCE).
*WHEN 'VSTE'.
*  PERFORM RETURN(RSAQEXCE).
*WHEN 'SAVL'.
*  PERFORM %SAVE_LIST.
*WHEN 'ODRU'.
*  PERFORM PRINT_LIST(RSAQEXCE).
*WHEN 'COPA'.
*  PERFORM PRINT_COVER_PAGE(RSAQEXCE).
*WHEN 'TEXT'.
*  PERFORM %DOWNLOAD USING 'TEXT'.
*WHEN 'ALV'.
*  PERFORM %DOWNLOAD USING 'ALV'.
*WHEN 'VIEW'.
*  PERFORM %VIEW.
*WHEN 'XXL'.
*  PERFORM %DOWNLOAD USING 'XXL'.
*WHEN 'GRAF'.
*  PERFORM %DOWNLOAD USING 'GRAF'.
*WHEN 'ABCA'.
*  PERFORM %DOWNLOAD USING 'ABCA'.
*WHEN 'EIS'.
*  PERFORM %DOWNLOAD USING 'EIS'.
*WHEN 'DOWN'.
*  PERFORM %DOWNLOAD USING 'DOWN'.
*WHEN 'XINT'.
*  PERFORM %DOWNLOAD USING 'XINT'.
*ENDCASE.
*CLEAR: %CLINE, %ZGR.
*CLEAR: %TAB, %LINE, %CONT.
*IF %DIACT <> SPACE.
*  LEAVE LIST-PROCESSING.
*ENDIF.
*
*
*FORM %COMP_LDESC.
*
*  REFRESH %LDESC.
*  REFRESH %GDESC.
*  PERFORM LDESC(RSAQEXCE) USING 'G00010000X004       01  98'
*    TEXT-A00 TEXT-B00 TEXT-H00 'ZTCO_SHOPVAR-KOKRS' ZTCO_SHOPVAR-KOKRS
*    'ZTCO_SHOPVAR-KOKRS'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00020000X004       02  98'
*    TEXT-A01 TEXT-B01 TEXT-H00 'ZTCO_SHOPVAR-BDATJ' ZTCO_SHOPVAR-BDATJ
*    'ZTCO_SHOPVAR-BDATJ'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00030000X003       03  98'
*    TEXT-A02 TEXT-B02 TEXT-H00 'ZTCO_SHOPVAR-POPER' ZTCO_SHOPVAR-POPER
*    'ZTCO_SHOPVAR-POPER'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00040000X004       04  98'
*    TEXT-A03 TEXT-B03 TEXT-H00 'ZTCO_SHOPVAR-WERKS' ZTCO_SHOPVAR-WERKS
*    'ZTCO_SHOPVAR-WERKS'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00050000X010       05  98'
*    TEXT-A04 TEXT-B04 TEXT-H00 'ZTCO_SHOPVAR-SHOP' ZTCO_SHOPVAR-SHOP
*    'ZTCO_SHOPVAR-SHOP'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00060000X040       06  98'
*    TEXT-A05 TEXT-B05 TEXT-H00 'ZTCO_SHOPVAR-FSC_MATNR'
*    ZTCO_SHOPVAR-FSC_MATNR 'ZTCO_SHOPVAR-FSC_MATNR'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00070000X040       07  98'
*    TEXT-A06 TEXT-B06 TEXT-H00 'ZTCO_SHOPVAR-LLV_MATNR'
*    ZTCO_SHOPVAR-LLV_MATNR 'ZTCO_SHOPVAR-LLV_MATNR'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00080000X001       08  98'
*    TEXT-A07 TEXT-B07 TEXT-H00 'ZTCO_SHOPVAR-TYPPS' ZTCO_SHOPVAR-TYPPS
*    'ZTCO_SHOPVAR-TYPPS'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00090000X010       09  98'
*    TEXT-A08 TEXT-B08 TEXT-H00 'ZTCO_SHOPVAR-KSTAR' ZTCO_SHOPVAR-KSTAR
*    'ZTCO_SHOPVAR-KSTAR'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00100000X003       10  98'
*    TEXT-A09 TEXT-B09 TEXT-H00 'ZTCO_SHOPVAR-ELEMT' ZTCO_SHOPVAR-ELEMT
*    'ZTCO_SHOPVAR-ELEMT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00110000X010       00  98'
*    TEXT-A10 TEXT-B10 TEXT-H00 'ZTCO_SHOPVAR-KOSTL' ZTCO_SHOPVAR-KOSTL
*    'ZTCO_SHOPVAR-KOSTL'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00120000X006       00  98'
*    TEXT-A11 TEXT-B11 TEXT-H00 'ZTCO_SHOPVAR-LSTAR' ZTCO_SHOPVAR-LSTAR
*    'ZTCO_SHOPVAR-LSTAR'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00130000X003       00  98'
*    TEXT-A12 TEXT-B12 TEXT-H00 'ZTCO_SHOPVAR-MEEHT' ZTCO_SHOPVAR-MEEHT
*    'ZTCO_SHOPVAR-MEEHT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00140000X004       00  98'
*    TEXT-A13 TEXT-B13 TEXT-H00 'ZTCO_SHOPVAR-MTART' ZTCO_SHOPVAR-MTART
*    'ZTCO_SHOPVAR-MTART'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00150000X005       00  98'
*    TEXT-A14 TEXT-B14 TEXT-H00 'ZTCO_SHOPVAR-HWAER' ZTCO_SHOPVAR-HWAER
*    'ZTCO_SHOPVAR-HWAER'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00160000X004       00  98'
*    TEXT-A15 TEXT-B15 TEXT-H00 'ZTCO_SHOPVAR-BWKEY' ZTCO_SHOPVAR-BWKEY
*    'ZTCO_SHOPVAR-BWKEY'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00170000X010       00  98'
*    TEXT-A16 TEXT-B16 TEXT-H00 'ZTCO_SHOPVAR-BWTAR' ZTCO_SHOPVAR-BWTAR
*    'ZTCO_SHOPVAR-BWTAR'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00180180 016     X 00  98'
*    TEXT-A17 TEXT-B17 TEXT-H00 'ZTCO_SHOPVAR-FROZEN_QTY'
*    ZTCO_SHOPVAR-FROZEN_QTY 'ZTCO_SHOPVAR-FROZEN_QTY'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00190201 015     X 00  98'
*    TEXT-A18 TEXT-B18 TEXT-H00 'ZTCO_SHOPVAR-FROZEN_AMT'
*    ZTCO_SHOPVAR-FROZEN_AMT 'ZTCO_SHOPVAR-FROZEN_AMT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00201002 016     X 00  98'
*    TEXT-A19 TEXT-B19 TEXT-H00 'ZTCO_SHOPVAR-CURR_QTY'
*    ZTCO_SHOPVAR-CURR_QTY 'ZTCO_SHOPVAR-CURR_QTY'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00211023 015     X 00  98'
*    TEXT-A20 TEXT-B20 TEXT-H00 'ZTCO_SHOPVAR-CURR_AMT'
*    ZTCO_SHOPVAR-CURR_AMT 'ZTCO_SHOPVAR-CURR_AMT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00221045 016     X 00  98'
*    TEXT-A21 TEXT-B21 TEXT-H00 'ZTCO_SHOPVAR-ACTUAL_QTY'
*    ZTCO_SHOPVAR-ACTUAL_QTY 'ZTCO_SHOPVAR-ACTUAL_QTY'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00231066 015     X 00  98'
*    TEXT-A22 TEXT-B22 TEXT-H00 'ZTCO_SHOPVAR-ACTUAL_AMT'
*    ZTCO_SHOPVAR-ACTUAL_AMT 'ZTCO_SHOPVAR-ACTUAL_AMT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00241088 016     X 00  98'
*    TEXT-A23 TEXT-B23 TEXT-H00 'ZTCO_SHOPVAR-SPCVAR_QTY'
*    ZTCO_SHOPVAR-SPCVAR_QTY 'ZTCO_SHOPVAR-SPCVAR_QTY'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00251109 015     X 00  98'
*    TEXT-A24 TEXT-B24 TEXT-H00 'ZTCO_SHOPVAR-SPCVAR_AMT'
*    ZTCO_SHOPVAR-SPCVAR_AMT 'ZTCO_SHOPVAR-SPCVAR_AMT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00261131 016     X 00  98'
*    TEXT-A25 TEXT-B25 TEXT-H00 'ZTCO_SHOPVAR-QTYVAR_QTY'
*    ZTCO_SHOPVAR-QTYVAR_QTY 'ZTCO_SHOPVAR-QTYVAR_QTY'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00271152 015     X 00  98'
*    TEXT-A26 TEXT-B26 TEXT-H00 'ZTCO_SHOPVAR-QTYVAR_AMT'
*    ZTCO_SHOPVAR-QTYVAR_AMT 'ZTCO_SHOPVAR-QTYVAR_AMT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00281174 014     X 00  98'
*    TEXT-A27 TEXT-B27 TEXT-H00 'ZTCO_SHOPVAR-WIP_QUANTITY'
*    ZTCO_SHOPVAR-WIP_QUANTITY 'ZTCO_SHOPVAR-WIP_QUANTITY'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00292002 015     X 00  98'
*    TEXT-A28 TEXT-B28 TEXT-H00 'ZTCO_SHOPVAR-WIP_AMT'
*    ZTCO_SHOPVAR-WIP_AMT 'ZTCO_SHOPVAR-WIP_AMT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00302024 014     X 00  98'
*    TEXT-A29 TEXT-B29 TEXT-H00 'ZTCO_SHOPVAR-ACTUAL_SCRAP'
*    ZTCO_SHOPVAR-ACTUAL_SCRAP 'ZTCO_SHOPVAR-ACTUAL_SCRAP'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00312043 015     X 00  98'
*    TEXT-A30 TEXT-B30 TEXT-H00 'ZTCO_SHOPVAR-SCRAP_AMT'
*    ZTCO_SHOPVAR-SCRAP_AMT 'ZTCO_SHOPVAR-SCRAP_AMT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00322065 015     X 00  98'
*    TEXT-A31 TEXT-B31 TEXT-H00 'ZTCO_SHOPVAR-PRDIF' ZTCO_SHOPVAR-PRDIF
*    'ZTCO_SHOPVAR-PRDIF'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00332000X003       00  98'
*    TEXT-A32 TEXT-B32 TEXT-H00 'ZTCO_SHOPVAR-MEINS' ZTCO_SHOPVAR-MEINS
*    'ZTCO_SHOPVAR-MEINS'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00342000X010       00  98'
*    TEXT-A33 TEXT-B33 TEXT-H00 'ZTCO_SHOPVAR-ERDAT' ZTCO_SHOPVAR-ERDAT
*    'ZTCO_SHOPVAR-ERDAT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00352000X008       00  98'
*    TEXT-A34 TEXT-B34 TEXT-H00 'ZTCO_SHOPVAR-ERZET' ZTCO_SHOPVAR-ERZET
*    'ZTCO_SHOPVAR-ERZET'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00362000X012       00  98'
*    TEXT-A35 TEXT-B35 TEXT-H00 'ZTCO_SHOPVAR-ERNAM' ZTCO_SHOPVAR-ERNAM
*    'ZTCO_SHOPVAR-ERNAM'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00372000X010       00  98'
*    TEXT-A36 TEXT-B36 TEXT-H00 'ZTCO_SHOPVAR-AEDAT' ZTCO_SHOPVAR-AEDAT
*    'ZTCO_SHOPVAR-AEDAT'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00382000X008       00  98'
*    TEXT-A37 TEXT-B37 TEXT-H00 'ZTCO_SHOPVAR-AEZET' ZTCO_SHOPVAR-AEZET
*    'ZTCO_SHOPVAR-AEZET'.
*  PERFORM LDESC(RSAQEXCE) USING 'G00392000X012       00  98'
*    TEXT-A38 TEXT-B38 TEXT-H00 'ZTCO_SHOPVAR-AENAM' ZTCO_SHOPVAR-AENAM
*    'ZTCO_SHOPVAR-AENAM'.
*  PERFORM GDESC(RSAQEXCE) USING 'G00' 5 20 ' ' ' ' 'X'.
*  PERFORM COMPLETE_LDESC(RSAQEXCE) TABLES %LDESC.
*
*ENDFORM.
*
*FORM %OUTPUT.
*
*DESCRIBE TABLE %PRLIST LINES %MAX_PRLIST.
*%HEAD = 'AAA'.
*%KEYEMPTY = SPACE.
*NEW-PAGE.
*PERFORM %OUTPUT_GL.
*PERFORM COMPLETE_PAGE(RSAQEXCE).
*%HEAD = 'ZZZ'.
*PERFORM LAST_PTAB_ENTRY(RSAQEXCE).
*NEW-PAGE.
*IF %KEYEMPTY <> SPACE.
*  MESSAGE S894(AQ).
*ENDIF.
*
*ENDFORM.
*
*
*FORM %TOP-OF-PAGE.
*
*IF SY-UCOMM = 'INHA'. EXIT. ENDIF.
*IF SY-UCOMM = 'COPA'. EXIT. ENDIF.
*IF %HEAD    = SPACE.  EXIT. ENDIF.
*IF %HEAD = 'DDD'.
*  PERFORM TVIEWPAGE(RSAQEXCE).
*  EXIT.
*ENDIF.
*IF %HEAD = 'GGG'.
*  PERFORM PAGE(RSAQEXCE) USING 'G00' TEXT-GRL 252 %GLFRAME 001.
*  SET LEFT SCROLL-BOUNDARY COLUMN 002.
*  PERFORM SET_SCROLL_BOUNDARY(RSAQEXCE) USING 002.
*  IF %TOTO <> SPACE. EXIT. ENDIF.
*ELSE.
*  CASE %HEAD.
*  ENDCASE.
*ENDIF.
*
*ENDFORM.
*
*
*FORM %NEWLINE.
*
*  %UFLAG = SPACE.
*  NEW-LINE.
*  WRITE: '|', 252 '|'.
*  POSITION 2.
*
*ENDFORM.
*
*FORM %SKIP USING COUNT.
*
*  IF SY-LINNO > 1.
*    %UFLAG = SPACE.
*    DO COUNT TIMES.
*      NEW-LINE.
*      FORMAT RESET.
*      WRITE: '|', 252 '|'.
*    ENDDO.
*  ENDIF.
*
*ENDFORM.
*
*FORM %ULINE.
*
*  IF %UFLAG = SPACE.
*    IF SY-LINNO > 1.
*      ULINE /1(252).
*    ENDIF.
*    %UFLAG = 'X'.
*  ENDIF.
*
*ENDFORM.
*
*FORM %HIDE.
*
*  IF %BATCH <> SPACE AND %DIACT = 'S'.
*    PERFORM HIDE(RSAQEXCE).
*  ELSE.
*    HIDE: %TAB, %LINE, %CONT.
*  ENDIF.
*
*ENDFORM.
*
*FORM %HIDE_COLOR.
*
*  IF %BATCH <> SPACE AND %DIACT = 'S'.
*    PERFORM HIDE_COLOR(RSAQEXCE).
*  ELSE.
*    HIDE: %FINT, %FCOL.
*  ENDIF.
*
*ENDFORM.
*
*FORM %RCALL USING NAME VALUE.
*
*FIELD-SYMBOLS <FIELD>.
*
*  ASSIGN (NAME) TO <FIELD>.
*  READ CURRENT LINE FIELD VALUE <FIELD> INTO VALUE.
*  IF SY-SUBRC <> 0.
*    VALUE = SPACE.
*    EXIT.
*  ENDIF.
*  IF VALUE = SPACE AND %TAB = 'G00' AND %LDESC-FCUR NA 'FM'.
*    READ TABLE %G00 INDEX %LINE.
*    IF SY-SUBRC = 0.
*      ASSIGN COMPONENT %LDESC-FNAMEINT OF STRUCTURE %G00
*                                       TO <FIELD>.
*      IF SY-SUBRC = 0.
*        WRITE <FIELD> TO VALUE(%LDESC-FOLEN).
*      ENDIF.
*    ENDIF.
*  ENDIF.
*
*ENDFORM.
*
*FORM %SAVE_PAGE.
*
*  IF %BATCH <> SPACE AND %DIACT = 'S'.
*    PERFORM SAVE_PAGE(RSAQEXCE) TABLES %ST_LISTE.
*  ENDIF.
*
*ENDFORM.
*
*FORM %REPLACE_VAR USING TEXT.
*
*FIELD-SYMBOLS <VAR>.
*
*  ASSIGN TEXT+1(*) TO <VAR>.
*
*ENDFORM.
*
*FORM %SAVE_LIST.
*
*DATA: %SFLAG,
*      QREPORT LIKE SY-REPID.
*
*  IF %DIACT = 'S'. %SFLAG = 'X'. ENDIF.
*  QREPORT = SY-REPID.
*  PERFORM SAVE_LIST(RSAQEXCE) TABLES %ST_LISTE
*                              USING QREPORT %SFLAG %LISTID.
*  IF %QL_ID <> SPACE.
*    %DLFLAG = 'X'.
*    %LISTSIZE = 0253.
*    PERFORM COMP_SELECTION_SCREEN(RSAQEXCE).
*    EXPORT %ST_LISTE %PTAB %LDESC %GDESC %DLFLAG %LISTSIZE
*           %SELECTIONS
*           %G00
*           TO DATABASE AQLDB(AQ) ID %QL_ID.
*  ENDIF.
*
*ENDFORM.
*
*FORM %REFRESH.
*
*  CASE %TAB.
*  WHEN 'G00'.
*    IMPORT %G00 FROM DATABASE AQLDB(AQ) ID %QL_ID.
*  ENDCASE.
*
*ENDFORM.
*
*FORM %DOWNLOAD USING CODE.
*
*DATA: QREPORT LIKE SY-REPID.
*
*  PERFORM INIT_DOWNLOAD(RSAQEXCE).
*  QREPORT = SY-REPID.
*  CASE %TAB.
*  WHEN 'G00'.
*    PERFORM DOWNLOAD(RSAQEXCE)
*            TABLES %G00 USING CODE QREPORT TEXT-GRL.
*  WHEN OTHERS.
*    MESSAGE S860(AQ).
*  ENDCASE.
*
*ENDFORM.
*
*FORM %SET_DATA CHANGING L_LINES TYPE I.
*
*  IMPORT LDATA TO %G00 FROM MEMORY ID 'AQLISTDATA'.
*  DESCRIBE TABLE %G00 LINES L_LINES.
*  FREE MEMORY ID 'AQLISTDATA'.
*
*ENDFORM.
*
*FORM %GET_DATA TABLES DATATAB STRUCTURE %G00
*               USING  FIRST TYPE I
*                      LAST  TYPE I.
*
*  APPEND LINES OF %G00 FROM FIRST TO LAST TO DATATAB.
*
*ENDFORM.
*
*FORM %GET_REF_TO_TABLE USING LID         LIKE RSAQLDESC-LID
*                             REF_TO_ITAB TYPE REF TO DATA
*                             SUBRC       LIKE SY-SUBRC.
*
*  SUBRC = 0.
*  CASE LID.
*  WHEN 'G00'.
*    CREATE DATA REF_TO_ITAB LIKE %G00[].
*  WHEN OTHERS.
*    SUBRC = 4.
*    MESSAGE S860(AQ).
*  ENDCASE.
*
*ENDFORM.
*
*FORM %VIEW.
*
*DATA: RET TYPE I.
*
*  PERFORM CHECK_WINGUI(RSAQSYST) USING RET.
*  IF RET <> 0.
*    MESSAGE S841(AQ).
*    PERFORM %DOWNLOAD USING 'ALV'.
*    EXIT.
*  ENDIF.
*
*DATA: ANZ TYPE I,
*      PROG LIKE SY-REPID.
*
*  PROG = SY-REPID.
*  PERFORM INIT_DOWNLOAD(RSAQEXCE).
*  CASE %TAB.
*  WHEN 'G00'.
*    PERFORM GENERATE_VIEW_DYNPRO(RSAQEXCE)
*            USING PROG TEXT-GRL.
*    DESCRIBE TABLE %G00 LINES ANZ.
*    TVIEW100-LINES = ANZ.
*    PERFORM INIT_VIEW(RSAQEXCE) TABLES %G00 USING TVIEW100.
*    CALL SCREEN 100.
*    PERFORM RESET_VIEW_DYNPRO(RSAQEXCE).
*  WHEN OTHERS.
*    MESSAGE S860(AQ).
*  ENDCASE.
*
*ENDFORM.
*
*
*FORM %CLEAR02.
*
*  CLEAR %G00-ZTCO_SHOPVAR-CURR_QTY.
*  CLEAR %G00-ZTCO_SHOPVAR-CURR_AMT.
*  CLEAR %G00-ZTCO_SHOPVAR-ACTUAL_QTY.
*  CLEAR %G00-ZTCO_SHOPVAR-ACTUAL_AMT.
*  CLEAR %G00-ZTCO_SHOPVAR-SPCVAR_QTY.
*  CLEAR %G00-ZTCO_SHOPVAR-SPCVAR_AMT.
*  CLEAR %G00-ZTCO_SHOPVAR-QTYVAR_QTY.
*  CLEAR %G00-ZTCO_SHOPVAR-QTYVAR_AMT.
*  CLEAR %G00-ZTCO_SHOPVAR-WIP_QUANTITY.
*  PERFORM %CLEAR03.
*
*ENDFORM.
*
*
*FORM %CLEAR03.
*
*  CLEAR %G00-ZTCO_SHOPVAR-WIP_AMT.
*  CLEAR %G00-ZTCO_SHOPVAR-ACTUAL_SCRAP.
*  CLEAR %G00-ZTCO_SHOPVAR-SCRAP_AMT.
*  CLEAR %G00-ZTCO_SHOPVAR-PRDIF.
*  CLEAR %G00-ZTCO_SHOPVAR-MEINS.
*  CLEAR %G00-ZTCO_SHOPVAR-ERDAT.
*  CLEAR %G00-ZTCO_SHOPVAR-ERZET.
*  CLEAR %G00-ZTCO_SHOPVAR-ERNAM.
*  CLEAR %G00-ZTCO_SHOPVAR-AEDAT.
*  CLEAR %G00-ZTCO_SHOPVAR-AEZET.
*  CLEAR %G00-ZTCO_SHOPVAR-AENAM.
*
*ENDFORM.
*
*
*FORM %OUTPUT_GL.
*
*IF %MAX_PRLIST <> 0.
*  READ TABLE %PRLIST WITH KEY TAB = 'GGG'.
*  IF SY-SUBRC <> 0.
*    EXIT.
*  ENDIF.
*ENDIF.
*SET MARGIN 00.
*PERFORM COMPLETE_PAGE(RSAQEXCE).
*%NOCHANGE = SPACE.
*NEW-PAGE.
*REFRESH %WA010.
*REFRESH %WA020.
*REFRESH %WA030.
*REFRESH %W0100.
*REFRESH %W0100.
*REFRESH %W0100.
*REFRESH %W0100.
*REFRESH %W0100.
*REFRESH %W0100.
*REFRESH %W0100.
*REFRESH %W0100.
*REFRESH %W0102.
*REFRESH %W0102.
*REFRESH %W0102.
*REFRESH %W0102.
*REFRESH %W0102.
*REFRESH %W0102.
*REFRESH %W0102.
*REFRESH %W0102.
*REFRESH %W0110.
*REFRESH %W0110.
*REFRESH %W0110.
*REFRESH %W0110.
*REFRESH %W0110.
*REFRESH %W0110.
*REFRESH %W0110.
*REFRESH %W0110.
*REFRESH %W0106.
*REFRESH %W0106.
*REFRESH %W0106.
*REFRESH %W0106.
*REFRESH %W0106.
*REFRESH %W0106.
*REFRESH %W0106.
*REFRESH %W0106.
*REFRESH %W0101.
*REFRESH %W0101.
*REFRESH %W0101.
*REFRESH %W0101.
*REFRESH %W0101.
*REFRESH %W0101.
*REFRESH %W0101.
*REFRESH %W0101.
*REFRESH %W0109.
*REFRESH %W0109.
*REFRESH %W0109.
*REFRESH %W0109.
*REFRESH %W0109.
*REFRESH %W0109.
*REFRESH %W0109.
*REFRESH %W0109.
*REFRESH %W0107.
*REFRESH %W0107.
*REFRESH %W0107.
*REFRESH %W0107.
*REFRESH %W0107.
*REFRESH %W0107.
*REFRESH %W0107.
*REFRESH %W0107.
*REFRESH %W0103.
*REFRESH %W0103.
*REFRESH %W0103.
*REFRESH %W0103.
*REFRESH %W0103.
*REFRESH %W0103.
*REFRESH %W0103.
*REFRESH %W0103.
*REFRESH %W0105.
*REFRESH %W0105.
*REFRESH %W0105.
*REFRESH %W0105.
*REFRESH %W0105.
*REFRESH %W0105.
*REFRESH %W0105.
*REFRESH %W0105.
*REFRESH %W0108.
*REFRESH %W0108.
*REFRESH %W0108.
*REFRESH %W0108.
*REFRESH %W0108.
*REFRESH %W0108.
*REFRESH %W0108.
*REFRESH %W0108.
*REFRESH %W0104.
*REFRESH %W0104.
*REFRESH %W0104.
*REFRESH %W0104.
*REFRESH %W0104.
*REFRESH %W0104.
*REFRESH %W0104.
*REFRESH %W0104.
*REFRESH %W0200.
*REFRESH %W0200.
*REFRESH %W0200.
*REFRESH %W0200.
*REFRESH %W0200.
*REFRESH %W0200.
*REFRESH %W0200.
*REFRESH %W0202.
*REFRESH %W0202.
*REFRESH %W0202.
*REFRESH %W0202.
*REFRESH %W0202.
*REFRESH %W0202.
*REFRESH %W0202.
*REFRESH %W0210.
*REFRESH %W0210.
*REFRESH %W0210.
*REFRESH %W0210.
*REFRESH %W0210.
*REFRESH %W0210.
*REFRESH %W0210.
*REFRESH %W0206.
*REFRESH %W0206.
*REFRESH %W0206.
*REFRESH %W0206.
*REFRESH %W0206.
*REFRESH %W0206.
*REFRESH %W0206.
*REFRESH %W0201.
*REFRESH %W0201.
*REFRESH %W0201.
*REFRESH %W0201.
*REFRESH %W0201.
*REFRESH %W0201.
*REFRESH %W0201.
*REFRESH %W0209.
*REFRESH %W0209.
*REFRESH %W0209.
*REFRESH %W0209.
*REFRESH %W0209.
*REFRESH %W0209.
*REFRESH %W0209.
*REFRESH %W0207.
*REFRESH %W0207.
*REFRESH %W0207.
*REFRESH %W0207.
*REFRESH %W0207.
*REFRESH %W0207.
*REFRESH %W0207.
*REFRESH %W0203.
*REFRESH %W0203.
*REFRESH %W0203.
*REFRESH %W0203.
*REFRESH %W0203.
*REFRESH %W0203.
*REFRESH %W0203.
*REFRESH %W0205.
*REFRESH %W0205.
*REFRESH %W0205.
*REFRESH %W0205.
*REFRESH %W0205.
*REFRESH %W0205.
*REFRESH %W0205.
*REFRESH %W0208.
*REFRESH %W0208.
*REFRESH %W0208.
*REFRESH %W0208.
*REFRESH %W0208.
*REFRESH %W0208.
*REFRESH %W0208.
*REFRESH %W0204.
*REFRESH %W0204.
*REFRESH %W0204.
*REFRESH %W0204.
*REFRESH %W0204.
*REFRESH %W0204.
*REFRESH %W0204.
*%GLLINE   = 0.
*%TAB      = 'G00'.
*%LINE     = 0.
*%CONT     = '0'.
*%FINT     = SPACE.
*%FCOL     = '0'.
*%HEAD     = 'GGG'.
*%CLINE    = 0.
*%OUTFLAG  = SPACE.
*%OUTCOMP  = SPACE.
*%OUTTOTAL = SPACE.
*%RFLAG    = 'AA'.
*IF %DIACT <> SPACE AND %DIACT NA 'SWE'. WRITE SPACE. ENDIF.
*FORMAT RESET.
*LOOP.
*  %DATA_SELECTED = 'X'.
*  AT %FG01.
*    %ZNR = '01'.
*    %ZGR = '01'.
*    %CLINE = %CLINE + 1.
*    PERFORM %CLEAR02.
*    %G00-ZTCO_SHOPVAR-KOKRS = ZTCO_SHOPVAR-KOKRS.
*    %G00-ZTCO_SHOPVAR-BDATJ = ZTCO_SHOPVAR-BDATJ.
*    %G00-ZTCO_SHOPVAR-POPER = ZTCO_SHOPVAR-POPER.
*    %G00-ZTCO_SHOPVAR-WERKS = ZTCO_SHOPVAR-WERKS.
*    %G00-ZTCO_SHOPVAR-SHOP = ZTCO_SHOPVAR-SHOP.
*    %G00-ZTCO_SHOPVAR-FSC_MATNR = ZTCO_SHOPVAR-FSC_MATNR.
*    %G00-ZTCO_SHOPVAR-LLV_MATNR = ZTCO_SHOPVAR-LLV_MATNR.
*    %G00-ZTCO_SHOPVAR-TYPPS = ZTCO_SHOPVAR-TYPPS.
*    %G00-ZTCO_SHOPVAR-KSTAR = ZTCO_SHOPVAR-KSTAR.
*    %G00-ZTCO_SHOPVAR-ELEMT = ZTCO_SHOPVAR-ELEMT.
*    %G00-ZTCO_SHOPVAR-KOSTL = ZTCO_SHOPVAR-KOSTL.
*    %G00-ZTCO_SHOPVAR-LSTAR = ZTCO_SHOPVAR-LSTAR.
*    %G00-ZTCO_SHOPVAR-MEEHT = ZTCO_SHOPVAR-MEEHT.
*    %G00-ZTCO_SHOPVAR-MTART = ZTCO_SHOPVAR-MTART.
*    %G00-ZTCO_SHOPVAR-HWAER = ZTCO_SHOPVAR-HWAER.
*    %G00-ZTCO_SHOPVAR-BWKEY = ZTCO_SHOPVAR-BWKEY.
*    %G00-ZTCO_SHOPVAR-BWTAR = ZTCO_SHOPVAR-BWTAR.
*    %G00-ZTCO_SHOPVAR-FROZEN_QTY = ZTCO_SHOPVAR-FROZEN_QTY.
*    %G00-ZTCO_SHOPVAR-FROZEN_AMT = ZTCO_SHOPVAR-FROZEN_AMT.
*    IF %FIRST <> SPACE. APPEND %G00. ENDIF.
*    %GLLINE = %GLLINE + 1.
*    %LZNR = %ZNR.
*    IF %DIACT <> SPACE AND %DIACT NA 'SWE'. CONTINUE. ENDIF.
*    PERFORM CHECK(RSAQEXCE) USING ' '.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    IF %RFLAG = 'AA'.
*      PERFORM RESERVE(RSAQEXCE) USING 003.
*    ENDIF.
*IF ZTCO_SHOPVAR-KOKRS <> %%ZTCO_SHOPVAR-KOKRS OR %%%ZTCO_SHOPVAR-KOKRS
*=
*SPACE.
*      %%ZTCO_SHOPVAR-KOKRS = ZTCO_SHOPVAR-KOKRS.
*      %%%ZTCO_SHOPVAR-KOKRS ='X'.
*      CLEAR %%ZTCO_SHOPVAR-BDATJ.
*      CLEAR %%%ZTCO_SHOPVAR-BDATJ.
*      CLEAR %%ZTCO_SHOPVAR-POPER.
*      CLEAR %%%ZTCO_SHOPVAR-POPER.
*      CLEAR %%ZTCO_SHOPVAR-WERKS.
*      CLEAR %%%ZTCO_SHOPVAR-WERKS.
*      CLEAR %%ZTCO_SHOPVAR-SHOP.
*      CLEAR %%%ZTCO_SHOPVAR-SHOP.
*      CLEAR %%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%ZTCO_SHOPVAR-ELEMT.
*      CLEAR %%%ZTCO_SHOPVAR-ELEMT.
*    ENDIF.
*IF ZTCO_SHOPVAR-BDATJ <> %%ZTCO_SHOPVAR-BDATJ OR %%%ZTCO_SHOPVAR-BDATJ
*=
*SPACE.
*      %%ZTCO_SHOPVAR-BDATJ = ZTCO_SHOPVAR-BDATJ.
*      %%%ZTCO_SHOPVAR-BDATJ ='X'.
*      CLEAR %%ZTCO_SHOPVAR-POPER.
*      CLEAR %%%ZTCO_SHOPVAR-POPER.
*      CLEAR %%ZTCO_SHOPVAR-WERKS.
*      CLEAR %%%ZTCO_SHOPVAR-WERKS.
*      CLEAR %%ZTCO_SHOPVAR-SHOP.
*      CLEAR %%%ZTCO_SHOPVAR-SHOP.
*      CLEAR %%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%ZTCO_SHOPVAR-ELEMT.
*      CLEAR %%%ZTCO_SHOPVAR-ELEMT.
*    ENDIF.
*IF ZTCO_SHOPVAR-POPER <> %%ZTCO_SHOPVAR-POPER OR %%%ZTCO_SHOPVAR-POPER
*=
*SPACE.
*      %%ZTCO_SHOPVAR-POPER = ZTCO_SHOPVAR-POPER.
*      %%%ZTCO_SHOPVAR-POPER ='X'.
*      CLEAR %%ZTCO_SHOPVAR-WERKS.
*      CLEAR %%%ZTCO_SHOPVAR-WERKS.
*      CLEAR %%ZTCO_SHOPVAR-SHOP.
*      CLEAR %%%ZTCO_SHOPVAR-SHOP.
*      CLEAR %%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%ZTCO_SHOPVAR-ELEMT.
*      CLEAR %%%ZTCO_SHOPVAR-ELEMT.
*    ENDIF.
*IF ZTCO_SHOPVAR-WERKS <> %%ZTCO_SHOPVAR-WERKS OR %%%ZTCO_SHOPVAR-WERKS
*=
*SPACE.
*      %%ZTCO_SHOPVAR-WERKS = ZTCO_SHOPVAR-WERKS.
*      %%%ZTCO_SHOPVAR-WERKS ='X'.
*      CLEAR %%ZTCO_SHOPVAR-SHOP.
*      CLEAR %%%ZTCO_SHOPVAR-SHOP.
*      CLEAR %%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%ZTCO_SHOPVAR-ELEMT.
*      CLEAR %%%ZTCO_SHOPVAR-ELEMT.
*    ENDIF.
*IF ZTCO_SHOPVAR-SHOP <> %%ZTCO_SHOPVAR-SHOP OR %%%ZTCO_SHOPVAR-SHOP =
*SPACE.
*      %%ZTCO_SHOPVAR-SHOP = ZTCO_SHOPVAR-SHOP.
*      %%%ZTCO_SHOPVAR-SHOP ='X'.
*      CLEAR %%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-FSC_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%ZTCO_SHOPVAR-ELEMT.
*      CLEAR %%%ZTCO_SHOPVAR-ELEMT.
*    ENDIF.
*IF ZTCO_SHOPVAR-FSC_MATNR <> %%ZTCO_SHOPVAR-FSC_MATNR OR
*%%%ZTCO_SHOPVAR-FSC_MATNR = SPACE.
*      %%ZTCO_SHOPVAR-FSC_MATNR = ZTCO_SHOPVAR-FSC_MATNR.
*      %%%ZTCO_SHOPVAR-FSC_MATNR ='X'.
*      CLEAR %%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%%ZTCO_SHOPVAR-LLV_MATNR.
*      CLEAR %%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%ZTCO_SHOPVAR-ELEMT.
*      CLEAR %%%ZTCO_SHOPVAR-ELEMT.
*    ENDIF.
*IF ZTCO_SHOPVAR-LLV_MATNR <> %%ZTCO_SHOPVAR-LLV_MATNR OR
*%%%ZTCO_SHOPVAR-LLV_MATNR = SPACE.
*      %%ZTCO_SHOPVAR-LLV_MATNR = ZTCO_SHOPVAR-LLV_MATNR.
*      %%%ZTCO_SHOPVAR-LLV_MATNR ='X'.
*      CLEAR %%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%%ZTCO_SHOPVAR-TYPPS.
*      CLEAR %%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%ZTCO_SHOPVAR-ELEMT.
*      CLEAR %%%ZTCO_SHOPVAR-ELEMT.
*    ENDIF.
*IF ZTCO_SHOPVAR-TYPPS <> %%ZTCO_SHOPVAR-TYPPS OR %%%ZTCO_SHOPVAR-TYPPS
*=
*SPACE.
*      %%ZTCO_SHOPVAR-TYPPS = ZTCO_SHOPVAR-TYPPS.
*      %%%ZTCO_SHOPVAR-TYPPS ='X'.
*      CLEAR %%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%%ZTCO_SHOPVAR-KSTAR.
*      CLEAR %%ZTCO_SHOPVAR-ELEMT.
*      CLEAR %%%ZTCO_SHOPVAR-ELEMT.
*    ENDIF.
*IF ZTCO_SHOPVAR-KSTAR <> %%ZTCO_SHOPVAR-KSTAR OR %%%ZTCO_SHOPVAR-KSTAR
*=
*SPACE.
*      %%ZTCO_SHOPVAR-KSTAR = ZTCO_SHOPVAR-KSTAR.
*      %%%ZTCO_SHOPVAR-KSTAR ='X'.
*      CLEAR %%ZTCO_SHOPVAR-ELEMT.
*      CLEAR %%%ZTCO_SHOPVAR-ELEMT.
*    ENDIF.
*IF ZTCO_SHOPVAR-ELEMT <> %%ZTCO_SHOPVAR-ELEMT OR %%%ZTCO_SHOPVAR-ELEMT
*=
*SPACE.
*      %%ZTCO_SHOPVAR-ELEMT = ZTCO_SHOPVAR-ELEMT.
*      %%%ZTCO_SHOPVAR-ELEMT ='X'.
*    ENDIF.
*    IF %RFLAG(1) = 'A'.
*    FORMAT RESET.
*    %FINT = 'F'. %FCOL = '0'.
*    FORMAT COLOR 2. %FCOL = '2'.
*    PERFORM %NEWLINE.
*    WRITE 002(004) ZTCO_SHOPVAR-KOKRS.
*    %LINE = %GLLINE.
*    PERFORM %HIDE.
*    %LINE = 0.
*    IF %RFLAG = 'AA'. HIDE %CLINE. ENDIF. HIDE %ZGR.
*    PERFORM %HIDE_COLOR.
*    WRITE 007(004) ZTCO_SHOPVAR-BDATJ.
*    WRITE 012(003) ZTCO_SHOPVAR-POPER.
*    WRITE 016(004) ZTCO_SHOPVAR-WERKS.
*    WRITE 021(010) ZTCO_SHOPVAR-SHOP.
*    WRITE 032(040) ZTCO_SHOPVAR-FSC_MATNR.
*    WRITE 073(040) ZTCO_SHOPVAR-LLV_MATNR.
*    WRITE 114(001) ZTCO_SHOPVAR-TYPPS.
*    WRITE 116(010) ZTCO_SHOPVAR-KSTAR.
*    WRITE 127(003) ZTCO_SHOPVAR-ELEMT.
*    WRITE 131(010) ZTCO_SHOPVAR-KOSTL.
*    WRITE 142(006) ZTCO_SHOPVAR-LSTAR.
*    WRITE 149(003) ZTCO_SHOPVAR-MEEHT.
*    WRITE 153(004) ZTCO_SHOPVAR-MTART.
*    WRITE 158(005) ZTCO_SHOPVAR-HWAER.
*    WRITE 164(004) ZTCO_SHOPVAR-BWKEY.
*    WRITE 169(010) ZTCO_SHOPVAR-BWTAR.
*    WRITE 180(016) ZTCO_SHOPVAR-FROZEN_QTY
*      UNIT ZTCO_SHOPVAR-MEEHT.
*    WRITE 201(015) ZTCO_SHOPVAR-FROZEN_AMT
*      CURRENCY ZTCO_SHOPVAR-HWAER.
*    ENDIF.
*  ENDAT.
*  AT %FG02.
*    %ZNR = '02'.
*    %ZGR = '01'.
*    IF %ZNR > %LZNR.
*      READ TABLE %G00 INDEX %GLLINE.
*    ENDIF.
*    PERFORM %CLEAR03.
*    %G00-ZTCO_SHOPVAR-CURR_QTY = ZTCO_SHOPVAR-CURR_QTY.
*    %G00-ZTCO_SHOPVAR-CURR_AMT = ZTCO_SHOPVAR-CURR_AMT.
*    %G00-ZTCO_SHOPVAR-ACTUAL_QTY = ZTCO_SHOPVAR-ACTUAL_QTY.
*    %G00-ZTCO_SHOPVAR-ACTUAL_AMT = ZTCO_SHOPVAR-ACTUAL_AMT.
*    %G00-ZTCO_SHOPVAR-SPCVAR_QTY = ZTCO_SHOPVAR-SPCVAR_QTY.
*    %G00-ZTCO_SHOPVAR-SPCVAR_AMT = ZTCO_SHOPVAR-SPCVAR_AMT.
*    %G00-ZTCO_SHOPVAR-QTYVAR_QTY = ZTCO_SHOPVAR-QTYVAR_QTY.
*    %G00-ZTCO_SHOPVAR-QTYVAR_AMT = ZTCO_SHOPVAR-QTYVAR_AMT.
*    %G00-ZTCO_SHOPVAR-WIP_QUANTITY = ZTCO_SHOPVAR-WIP_QUANTITY.
*    IF %ZNR > %LZNR.
*      IF %FIRST <> SPACE. MODIFY %G00 INDEX %GLLINE. ENDIF.
*    ELSE.
*      IF %FIRST <> SPACE. APPEND %G00. ENDIF.
*      %GLLINE = %GLLINE + 1.
*    ENDIF.
*    %LZNR = %ZNR.
*    IF %DIACT <> SPACE AND %DIACT NA 'SWE'. CONTINUE. ENDIF.
*    PERFORM CHECK(RSAQEXCE) USING ' '.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    IF %RFLAG(1) = 'A'.
*    FORMAT RESET.
*    %FINT = 'F'. %FCOL = '0'.
*    FORMAT COLOR 2. %FCOL = '2'.
*    PERFORM %NEWLINE.
*    WRITE 002(016) ZTCO_SHOPVAR-CURR_QTY
*      UNIT ZTCO_SHOPVAR-MEEHT.
*    %LINE = %GLLINE.  %CONT = '1'.
*    PERFORM %HIDE.
*    %LINE = 0.  %CONT = '0'.
*    IF %RFLAG = 'AA'. HIDE %CLINE. ENDIF. HIDE %ZGR.
*    PERFORM %HIDE_COLOR.
*    WRITE 023(015) ZTCO_SHOPVAR-CURR_AMT
*      CURRENCY ZTCO_SHOPVAR-HWAER.
*    WRITE 045(016) ZTCO_SHOPVAR-ACTUAL_QTY
*      UNIT ZTCO_SHOPVAR-MEEHT.
*    WRITE 066(015) ZTCO_SHOPVAR-ACTUAL_AMT
*      CURRENCY ZTCO_SHOPVAR-HWAER.
*    WRITE 088(016) ZTCO_SHOPVAR-SPCVAR_QTY
*      UNIT ZTCO_SHOPVAR-MEEHT.
*    WRITE 109(015) ZTCO_SHOPVAR-SPCVAR_AMT
*      CURRENCY ZTCO_SHOPVAR-HWAER.
*    WRITE 131(016) ZTCO_SHOPVAR-QTYVAR_QTY
*      UNIT ZTCO_SHOPVAR-MEEHT.
*    WRITE 152(015) ZTCO_SHOPVAR-QTYVAR_AMT
*      CURRENCY ZTCO_SHOPVAR-HWAER.
*    WRITE 174(014) ZTCO_SHOPVAR-WIP_QUANTITY
*      UNIT ZTCO_SHOPVAR-MEEHT.
*    ENDIF.
*  ENDAT.
*  AT %FG03.
*    %ZNR = '03'.
*    %ZGR = '01'.
*    IF %ZNR > %LZNR.
*      READ TABLE %G00 INDEX %GLLINE.
*    ENDIF.
*    %G00-ZTCO_SHOPVAR-WIP_AMT = ZTCO_SHOPVAR-WIP_AMT.
*    %G00-ZTCO_SHOPVAR-ACTUAL_SCRAP = ZTCO_SHOPVAR-ACTUAL_SCRAP.
*    %G00-ZTCO_SHOPVAR-SCRAP_AMT = ZTCO_SHOPVAR-SCRAP_AMT.
*    %G00-ZTCO_SHOPVAR-PRDIF = ZTCO_SHOPVAR-PRDIF.
*    %G00-ZTCO_SHOPVAR-MEINS = ZTCO_SHOPVAR-MEINS.
*    %G00-ZTCO_SHOPVAR-ERDAT = ZTCO_SHOPVAR-ERDAT.
*    %G00-ZTCO_SHOPVAR-ERZET = ZTCO_SHOPVAR-ERZET.
*    %G00-ZTCO_SHOPVAR-ERNAM = ZTCO_SHOPVAR-ERNAM.
*    %G00-ZTCO_SHOPVAR-AEDAT = ZTCO_SHOPVAR-AEDAT.
*    %G00-ZTCO_SHOPVAR-AEZET = ZTCO_SHOPVAR-AEZET.
*    %G00-ZTCO_SHOPVAR-AENAM = ZTCO_SHOPVAR-AENAM.
*    IF %ZNR > %LZNR.
*      IF %FIRST <> SPACE. MODIFY %G00 INDEX %GLLINE. ENDIF.
*    ELSE.
*      IF %FIRST <> SPACE. APPEND %G00. ENDIF.
*      %GLLINE = %GLLINE + 1.
*    ENDIF.
*    %LZNR = %ZNR.
*    IF %DIACT <> SPACE AND %DIACT NA 'SWE'. CONTINUE. ENDIF.
*    PERFORM CHECK(RSAQEXCE) USING ' '.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    IF %RFLAG(1) = 'A'.
*    FORMAT RESET.
*    %FINT = 'F'. %FCOL = '0'.
*    FORMAT COLOR 2. %FCOL = '2'.
*    PERFORM %NEWLINE.
*    WRITE 002(015) ZTCO_SHOPVAR-WIP_AMT
*      CURRENCY ZTCO_SHOPVAR-HWAER.
*    %LINE = %GLLINE.  %CONT = '2'.
*    PERFORM %HIDE.
*    %LINE = 0.  %CONT = '0'.
*    IF %RFLAG = 'AA'. HIDE %CLINE. ENDIF. HIDE %ZGR.
*    PERFORM %HIDE_COLOR.
*    WRITE 024(014) ZTCO_SHOPVAR-ACTUAL_SCRAP
*      UNIT ZTCO_SHOPVAR-MEEHT.
*    WRITE 043(015) ZTCO_SHOPVAR-SCRAP_AMT
*      CURRENCY ZTCO_SHOPVAR-HWAER.
*    WRITE 065(015) ZTCO_SHOPVAR-PRDIF
*      CURRENCY ZTCO_SHOPVAR-HWAER.
*    WRITE 087(003) ZTCO_SHOPVAR-MEINS.
*    WRITE 091(010) ZTCO_SHOPVAR-ERDAT.
*    WRITE 102(008) ZTCO_SHOPVAR-ERZET.
*    WRITE 111(012) ZTCO_SHOPVAR-ERNAM.
*    WRITE 124(010) ZTCO_SHOPVAR-AEDAT.
*    WRITE 135(008) ZTCO_SHOPVAR-AEZET.
*    WRITE 144(012) ZTCO_SHOPVAR-AENAM.
*    ENDIF.
*  ENDAT.
*  AT %FGWRZTCO_SHOPVAR03.
*    CLEAR %W0110.
*    %W0110-ZTCO_SHOPVAR-HWAER = ZTCO_SHOPVAR-HWAER.
*    %W0110-ZTCO_SHOPVAR-PRDIF = ZTCO_SHOPVAR-PRDIF.
*    %W0110-ZTCO_SHOPVAR-SCRAP_AMT = ZTCO_SHOPVAR-SCRAP_AMT.
*    %W0110-ZTCO_SHOPVAR-WIP_AMT = ZTCO_SHOPVAR-WIP_AMT.
*    COLLECT %W0110.
*  ENDAT.
*  AT %FGWRZTCO_SHOPVAR02.
*    CLEAR %W0110.
*    %W0110-ZTCO_SHOPVAR-HWAER = ZTCO_SHOPVAR-HWAER.
*    %W0110-ZTCO_SHOPVAR-ACTUAL_AMT = ZTCO_SHOPVAR-ACTUAL_AMT.
*    %W0110-ZTCO_SHOPVAR-QTYVAR_AMT = ZTCO_SHOPVAR-QTYVAR_AMT.
*    %W0110-ZTCO_SHOPVAR-SPCVAR_AMT = ZTCO_SHOPVAR-SPCVAR_AMT.
*    %W0110-ZTCO_SHOPVAR-CURR_AMT = ZTCO_SHOPVAR-CURR_AMT.
*    COLLECT %W0110.
*  ENDAT.
*  AT %FGWRZTCO_SHOPVAR01.
*    CLEAR %W0110.
*    %W0110-ZTCO_SHOPVAR-HWAER = ZTCO_SHOPVAR-HWAER.
*    %W0110-ZTCO_SHOPVAR-FROZEN_AMT = ZTCO_SHOPVAR-FROZEN_AMT.
*    COLLECT %W0110.
*  ENDAT.
*  AT %FGWRZTCO_SHOPVAR02.
*    CLEAR %W0210.
*    %W0210-ZTCO_SHOPVAR-MEEHT = ZTCO_SHOPVAR-MEEHT.
*    %W0210-ZTCO_SHOPVAR-WIP_QUANTITY = ZTCO_SHOPVAR-WIP_QUANTITY.
*    %W0210-ZTCO_SHOPVAR-SPCVAR_QTY = ZTCO_SHOPVAR-SPCVAR_QTY.
*    %W0210-ZTCO_SHOPVAR-ACTUAL_QTY = ZTCO_SHOPVAR-ACTUAL_QTY.
*    %W0210-ZTCO_SHOPVAR-QTYVAR_QTY = ZTCO_SHOPVAR-QTYVAR_QTY.
*    %W0210-ZTCO_SHOPVAR-CURR_QTY = ZTCO_SHOPVAR-CURR_QTY.
*    COLLECT %W0210.
*  ENDAT.
*  AT %FGWRZTCO_SHOPVAR03.
*    CLEAR %W0210.
*    %W0210-ZTCO_SHOPVAR-MEEHT = ZTCO_SHOPVAR-MEEHT.
*    %W0210-ZTCO_SHOPVAR-ACTUAL_SCRAP = ZTCO_SHOPVAR-ACTUAL_SCRAP.
*    COLLECT %W0210.
*  ENDAT.
*  AT %FGWRZTCO_SHOPVAR01.
*    CLEAR %W0210.
*    %W0210-ZTCO_SHOPVAR-MEEHT = ZTCO_SHOPVAR-MEEHT.
*    %W0210-ZTCO_SHOPVAR-FROZEN_QTY = ZTCO_SHOPVAR-FROZEN_QTY.
*    COLLECT %W0210.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-ELEMT.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0110.
*      %W0109 = %W0110.
*      COLLECT %W0109.
*    ENDLOOP.
*    REFRESH %W0110.
*    LOOP AT %W0210.
*      %W0209 = %W0210.
*      COLLECT %W0209.
*    ENDLOOP.
*    REFRESH %W0210.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-KSTAR.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0109.
*      %W0108 = %W0109.
*      COLLECT %W0108.
*    ENDLOOP.
*    REFRESH %W0109.
*    LOOP AT %W0209.
*      %W0208 = %W0209.
*      COLLECT %W0208.
*    ENDLOOP.
*    REFRESH %W0209.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-TYPPS.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0108.
*      %W0107 = %W0108.
*      COLLECT %W0107.
*    ENDLOOP.
*    REFRESH %W0108.
*    LOOP AT %W0208.
*      %W0207 = %W0208.
*      COLLECT %W0207.
*    ENDLOOP.
*    REFRESH %W0208.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-LLV_MATNR.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0107.
*      %W0106 = %W0107.
*      COLLECT %W0106.
*    ENDLOOP.
*    REFRESH %W0107.
*    LOOP AT %W0207.
*      %W0206 = %W0207.
*      COLLECT %W0206.
*    ENDLOOP.
*    REFRESH %W0207.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-FSC_MATNR.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0106.
*      %W0105 = %W0106.
*      COLLECT %W0105.
*    ENDLOOP.
*    REFRESH %W0106.
*    LOOP AT %W0206.
*      %W0205 = %W0206.
*      COLLECT %W0205.
*    ENDLOOP.
*    REFRESH %W0206.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-SHOP.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0105.
*      %W0104 = %W0105.
*      COLLECT %W0104.
*    ENDLOOP.
*    REFRESH %W0105.
*    LOOP AT %W0205.
*      %W0204 = %W0205.
*      COLLECT %W0204.
*    ENDLOOP.
*    REFRESH %W0205.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-WERKS.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0104.
*      %W0103 = %W0104.
*      COLLECT %W0103.
*    ENDLOOP.
*    REFRESH %W0104.
*    LOOP AT %W0204.
*      %W0203 = %W0204.
*      COLLECT %W0203.
*    ENDLOOP.
*    REFRESH %W0204.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-POPER.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0103.
*      %W0102 = %W0103.
*      COLLECT %W0102.
*    ENDLOOP.
*    REFRESH %W0103.
*    LOOP AT %W0203.
*      %W0202 = %W0203.
*      COLLECT %W0202.
*    ENDLOOP.
*    REFRESH %W0203.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-BDATJ.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0102.
*      %W0101 = %W0102.
*      COLLECT %W0101.
*    ENDLOOP.
*    REFRESH %W0102.
*    LOOP AT %W0202.
*      %W0201 = %W0202.
*      COLLECT %W0201.
*    ENDLOOP.
*    REFRESH %W0202.
*  ENDAT.
*  AT END OF ZTCO_SHOPVAR-KOKRS.
*    %ZGR = '01'.
*    PERFORM CHECK(RSAQEXCE) USING 'X'.
*    IF %RFLAG = 'E'. EXIT. ENDIF.
*    LOOP AT %W0101.
*      %W0100 = %W0101.
*      COLLECT %W0100.
*    ENDLOOP.
*    REFRESH %W0101.
*    LOOP AT %W0201.
*      %W0200 = %W0201.
*      COLLECT %W0200.
*    ENDLOOP.
*    REFRESH %W0201.
*  ENDAT.
*  AT LAST.
*    %ZNR = 0.
*    %RFLAG = 'AA'.
*    %OUTTOTAL = 'X'.
*    PERFORM RESERVE(RSAQEXCE) USING 2.
*    PERFORM %ULINE.
*    FORMAT RESET.
*    FORMAT INTENSIFIED ON COLOR 3.
*    %FINT = 'N'. %FCOL = '3'.
*    %NOCHANGE = 'X'.
*    PERFORM %NEWLINE.
*    %NOCHANGE = SPACE.
*    WRITE (13) TEXT-F02.
*    PERFORM %HIDE.
*    PERFORM %HIDE_COLOR.
*    SORT %W0100 BY ZTCO_SHOPVAR-HWAER.
*    SORT %W0200 BY ZTCO_SHOPVAR-MEEHT.
*      PERFORM %NEWLINE.
*      WRITE 217 '*'.
*      REFRESH %WA010.
*      DO.
*        %SUBRC = 4.
*        CLEAR %WA010.
*        READ TABLE %W0100 INDEX SY-INDEX.
*        IF SY-SUBRC = 0.
*          %SUBRC = 0.
*          %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER =
*          %W0100-ZTCO_SHOPVAR-HWAER.
*%WA010-ZTCO_SHOPVAR-FROZEN_AMT = %W0100-ZTCO_SHOPVAR-FROZEN_AMT.
*        ENDIF.
*        READ TABLE %W0200 INDEX SY-INDEX.
*        IF SY-SUBRC = 0.
*          %SUBRC = 0.
*          %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT =
*          %W0200-ZTCO_SHOPVAR-MEEHT.
*%WA010-ZTCO_SHOPVAR-FROZEN_QTY = %W0200-ZTCO_SHOPVAR-FROZEN_QTY.
*        ENDIF.
*        IF %SUBRC = 4.
*          EXIT.
*        ENDIF.
*        APPEND %WA010.
*      ENDDO.
*      LOOP AT %WA010.
*        IF SY-TABIX <> 1.
*          PERFORM %NEWLINE.
*        ENDIF.
*        WRITE 149(003) %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT.
*        WRITE 158(005) %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER.
*        IF %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT = SPACE.
*          WRITE 180(016) %WA010-ZTCO_SHOPVAR-FROZEN_QTY
*                UNIT %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT NO-ZERO.
*          IF NOT %WA010-ZTCO_SHOPVAR-FROZEN_QTY IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 180(016) %WA010-ZTCO_SHOPVAR-FROZEN_QTY
*                UNIT %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT.
*        ENDIF.
*        IF %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER = SPACE.
*          WRITE 201(015) %WA010-ZTCO_SHOPVAR-FROZEN_AMT
*                CURRENCY %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER NO-ZERO
*.
*          IF NOT %WA010-ZTCO_SHOPVAR-FROZEN_AMT IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 201(015) %WA010-ZTCO_SHOPVAR-FROZEN_AMT
*                CURRENCY %WA010-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER.
*        ENDIF.
*        PERFORM %HIDE.
*        PERFORM %HIDE_COLOR.
*      ENDLOOP.
*      PERFORM %NEWLINE.
*      WRITE 217 '*'.
*      REFRESH %WA020.
*      DO.
*        %SUBRC = 4.
*        CLEAR %WA020.
*        READ TABLE %W0100 INDEX SY-INDEX.
*        IF SY-SUBRC = 0.
*          %SUBRC = 0.
*          %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER =
*          %W0100-ZTCO_SHOPVAR-HWAER.
*%WA020-ZTCO_SHOPVAR-ACTUAL_AMT = %W0100-ZTCO_SHOPVAR-ACTUAL_AMT.
*%WA020-ZTCO_SHOPVAR-QTYVAR_AMT = %W0100-ZTCO_SHOPVAR-QTYVAR_AMT.
*%WA020-ZTCO_SHOPVAR-SPCVAR_AMT = %W0100-ZTCO_SHOPVAR-SPCVAR_AMT.
*          %WA020-ZTCO_SHOPVAR-CURR_AMT = %W0100-ZTCO_SHOPVAR-CURR_AMT.
*        ENDIF.
*        READ TABLE %W0200 INDEX SY-INDEX.
*        IF SY-SUBRC = 0.
*          %SUBRC = 0.
*          %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT =
*          %W0200-ZTCO_SHOPVAR-MEEHT.
*%WA020-ZTCO_SHOPVAR-ACTUAL_QTY = %W0200-ZTCO_SHOPVAR-ACTUAL_QTY.
*%WA020-ZTCO_SHOPVAR-SPCVAR_QTY = %W0200-ZTCO_SHOPVAR-SPCVAR_QTY.
*%WA020-ZTCO_SHOPVAR-WIP_QUANTITY = %W0200-ZTCO_SHOPVAR-WIP_QUANTITY.
*%WA020-ZTCO_SHOPVAR-QTYVAR_QTY = %W0200-ZTCO_SHOPVAR-QTYVAR_QTY.
*          %WA020-ZTCO_SHOPVAR-CURR_QTY = %W0200-ZTCO_SHOPVAR-CURR_QTY.
*        ENDIF.
*        IF %SUBRC = 4.
*          EXIT.
*        ENDIF.
*        APPEND %WA020.
*      ENDDO.
*      LOOP AT %WA020.
*        IF SY-TABIX <> 1.
*          PERFORM %NEWLINE.
*        ENDIF.
*        IF %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT = SPACE.
*          WRITE 002(016) %WA020-ZTCO_SHOPVAR-CURR_QTY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT NO-ZERO.
*          IF NOT %WA020-ZTCO_SHOPVAR-CURR_QTY IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 002(016) %WA020-ZTCO_SHOPVAR-CURR_QTY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT.
*        ENDIF.
*        IF %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER = SPACE.
*          WRITE 023(015) %WA020-ZTCO_SHOPVAR-CURR_AMT
*                CURRENCY %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER NO-ZERO
*.
*          IF NOT %WA020-ZTCO_SHOPVAR-CURR_AMT IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 023(015) %WA020-ZTCO_SHOPVAR-CURR_AMT
*                CURRENCY %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER.
*        ENDIF.
*        IF %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT = SPACE.
*          WRITE 045(016) %WA020-ZTCO_SHOPVAR-ACTUAL_QTY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT NO-ZERO.
*          IF NOT %WA020-ZTCO_SHOPVAR-ACTUAL_QTY IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 045(016) %WA020-ZTCO_SHOPVAR-ACTUAL_QTY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT.
*        ENDIF.
*        IF %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER = SPACE.
*          WRITE 066(015) %WA020-ZTCO_SHOPVAR-ACTUAL_AMT
*                CURRENCY %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER NO-ZERO
*.
*          IF NOT %WA020-ZTCO_SHOPVAR-ACTUAL_AMT IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 066(015) %WA020-ZTCO_SHOPVAR-ACTUAL_AMT
*                CURRENCY %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER.
*        ENDIF.
*        IF %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT = SPACE.
*          WRITE 088(016) %WA020-ZTCO_SHOPVAR-SPCVAR_QTY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT NO-ZERO.
*          IF NOT %WA020-ZTCO_SHOPVAR-SPCVAR_QTY IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 088(016) %WA020-ZTCO_SHOPVAR-SPCVAR_QTY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT.
*        ENDIF.
*        IF %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER = SPACE.
*          WRITE 109(015) %WA020-ZTCO_SHOPVAR-SPCVAR_AMT
*                CURRENCY %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER NO-ZERO
*.
*          IF NOT %WA020-ZTCO_SHOPVAR-SPCVAR_AMT IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 109(015) %WA020-ZTCO_SHOPVAR-SPCVAR_AMT
*                CURRENCY %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER.
*        ENDIF.
*        IF %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT = SPACE.
*          WRITE 131(016) %WA020-ZTCO_SHOPVAR-QTYVAR_QTY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT NO-ZERO.
*          IF NOT %WA020-ZTCO_SHOPVAR-QTYVAR_QTY IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 131(016) %WA020-ZTCO_SHOPVAR-QTYVAR_QTY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT.
*        ENDIF.
*        IF %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER = SPACE.
*          WRITE 152(015) %WA020-ZTCO_SHOPVAR-QTYVAR_AMT
*                CURRENCY %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER NO-ZERO
*.
*          IF NOT %WA020-ZTCO_SHOPVAR-QTYVAR_AMT IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 152(015) %WA020-ZTCO_SHOPVAR-QTYVAR_AMT
*                CURRENCY %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER.
*        ENDIF.
*        IF %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT = SPACE.
*          WRITE 174(014) %WA020-ZTCO_SHOPVAR-WIP_QUANTITY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT NO-ZERO.
*          IF NOT %WA020-ZTCO_SHOPVAR-WIP_QUANTITY IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 174(014) %WA020-ZTCO_SHOPVAR-WIP_QUANTITY
*                UNIT %WA020-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT.
*        ENDIF.
*        PERFORM %HIDE.
*        PERFORM %HIDE_COLOR.
*      ENDLOOP.
*      PERFORM %NEWLINE.
*      WRITE 217 '*'.
*      REFRESH %WA030.
*      DO.
*        %SUBRC = 4.
*        CLEAR %WA030.
*        READ TABLE %W0100 INDEX SY-INDEX.
*        IF SY-SUBRC = 0.
*          %SUBRC = 0.
*          %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER =
*          %W0100-ZTCO_SHOPVAR-HWAER.
*          %WA030-ZTCO_SHOPVAR-WIP_AMT = %W0100-ZTCO_SHOPVAR-WIP_AMT.
*          %WA030-ZTCO_SHOPVAR-SCRAP_AMT = %W0100-ZTCO_SHOPVAR-SCRAP_AMT
*.
*          %WA030-ZTCO_SHOPVAR-PRDIF = %W0100-ZTCO_SHOPVAR-PRDIF.
*        ENDIF.
*        READ TABLE %W0200 INDEX SY-INDEX.
*        IF SY-SUBRC = 0.
*          %SUBRC = 0.
*          %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT =
*          %W0200-ZTCO_SHOPVAR-MEEHT.
*%WA030-ZTCO_SHOPVAR-ACTUAL_SCRAP = %W0200-ZTCO_SHOPVAR-ACTUAL_SCRAP.
*        ENDIF.
*        IF %SUBRC = 4.
*          EXIT.
*        ENDIF.
*        APPEND %WA030.
*      ENDDO.
*      LOOP AT %WA030.
*        IF SY-TABIX <> 1.
*          PERFORM %NEWLINE.
*        ENDIF.
*        IF %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER = SPACE.
*          WRITE 002(015) %WA030-ZTCO_SHOPVAR-WIP_AMT
*                CURRENCY %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER NO-ZERO
*.
*          IF NOT %WA030-ZTCO_SHOPVAR-WIP_AMT IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 002(015) %WA030-ZTCO_SHOPVAR-WIP_AMT
*                CURRENCY %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER.
*        ENDIF.
*        IF %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT = SPACE.
*          WRITE 024(014) %WA030-ZTCO_SHOPVAR-ACTUAL_SCRAP
*                UNIT %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT NO-ZERO.
*          IF NOT %WA030-ZTCO_SHOPVAR-ACTUAL_SCRAP IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 024(014) %WA030-ZTCO_SHOPVAR-ACTUAL_SCRAP
*                UNIT %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-MEEHT.
*        ENDIF.
*        IF %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER = SPACE.
*          WRITE 043(015) %WA030-ZTCO_SHOPVAR-SCRAP_AMT
*                CURRENCY %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER NO-ZERO
*.
*          IF NOT %WA030-ZTCO_SHOPVAR-SCRAP_AMT IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 043(015) %WA030-ZTCO_SHOPVAR-SCRAP_AMT
*                CURRENCY %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER.
*        ENDIF.
*        IF %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER = SPACE.
*          WRITE 065(015) %WA030-ZTCO_SHOPVAR-PRDIF
*                CURRENCY %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER NO-ZERO
*.
*          IF NOT %WA030-ZTCO_SHOPVAR-PRDIF IS INITIAL.
*            %KEYEMPTY = 'X'.
*          ENDIF.
*        ELSE.
*          WRITE 065(015) %WA030-ZTCO_SHOPVAR-PRDIF
*                CURRENCY %WA030-ZTCO_SHOPVAR-ZTCO_SHOPVAR-HWAER.
*        ENDIF.
*        PERFORM %HIDE.
*        PERFORM %HIDE_COLOR.
*      ENDLOOP.
*    IF %RFLAG = 'AA'. PERFORM %ULINE. ENDIF.
*  ENDAT.
*ENDLOOP.
*%RFLAG = 'AA'.
*PERFORM %ULINE.
*CLEAR: %CLINE, %ZGR.
*
*ENDFORM.
*
*
*
*MODULE %INIT_VIEW OUTPUT.
*
*  CASE %TAB.
*  WHEN 'G00'.
*    PERFORM INIT_PBO(RSAQEXCE) TABLES %G00 USING TVIEW100 'X'.
*  WHEN OTHERS.
*    MESSAGE S860(AQ).
*  ENDCASE.
*
*ENDMODULE.
*
*MODULE %PBO_VIEW OUTPUT.
*
*  CASE %TAB.
*  WHEN 'G00'.
*    PERFORM LOOP_PBO(RSAQEXCE) TABLES %G00 USING %%G00 TVIEW100.
*  ENDCASE.
*
*ENDMODULE.
*
*MODULE %PAI_VIEW INPUT.
*
*  CASE %TAB.
*  WHEN 'G00'.
*    PERFORM LOOP_PAI(RSAQEXCE) TABLES %G00 USING %%G00 TVIEW100.
*  ENDCASE.
*
*ENDMODULE.
*
*MODULE %OKCODE_VIEW INPUT.
*
*  CASE %TAB.
*  WHEN 'G00'.
*    PERFORM OKCODE(RSAQEXCE) TABLES %G00 USING TVIEW100.
*  ENDCASE.
*
*ENDMODULE.
