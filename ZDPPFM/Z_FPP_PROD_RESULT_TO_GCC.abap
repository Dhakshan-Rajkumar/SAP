FUNCTION Z_FPP_PROD_RESULT_TO_GCC.
*"----------------------------------------------------------------------
*"*"Local interface:
*"  IMPORTING
*"     VALUE(I_CONFLG) TYPE  CHAR1
*"     VALUE(I_FDATE) LIKE  SY-DATUM OPTIONAL
*"     VALUE(I_TDATE) LIKE  SY-DATUM OPTIONAL
*"  TABLES
*"      IT_ACT STRUCTURE  ZTPP_ACT_HMC
*"----------------------------------------------------------------------

  DATA: V_SEQ LIKE ZTPP_GCC_ELOG-ELOG_SEQ,
        V_DAYTIME LIKE ZTPP_GCC_ELOG-ELOG_DAYTIME,
        V_DATE LIKE SY-DATUM.
*
*  DATA: BEGIN OF IT_ACT OCCURS 0,
*        PRDT_DATE LIKE SY-DATUM,
*        DEST LIKE ZTPP_ACT_HMC-DEST,
*        QTY LIKE ZTPP_ACT_HMC-QTY_SIGNOFF,
*        SUM TYPE I,
*        END OF IT_ACT.
*
*  DATA: BEGIN OF IT_TEMP OCCURS 0,
*        PRDT_DATE LIKE SY-DATUM,
*        DEST(3),
*        QTY LIKE ZTPP_ACT_HMC-QTY_SIGNOFF,
*        SUM TYPE I,
*        END OF IT_TEMP.
*
*  DATA: IT_ZTPP_GCCELOG LIKE TABLE OF ZTPP_GCC_ELOG WITH HEADER LINE.
*

  CONCATENATE SY-DATUM SY-UZEIT INTO V_DAYTIME.

  IF I_CONFLG = 'N'.
    V_DATE = SY-DATUM - 1.

*     SELECT PRDT_DATE DEST COUNT( * ) AS QTY
*                        SUM( QTY_SIGNOFF ) AS SUM
*             INTO CORRESPONDING FIELDS OF TABLE IT_ACT
    SELECT * INTO TABLE IT_ACT
    FROM ZTPP_ACT_HMC
    WHERE PRDT_DATE = V_DATE.
*     GROUP BY PRDT_DATE DEST.

  ELSE.

    IF NOT I_FDATE IS INITIAL AND NOT I_TDATE IS INITIAL.
      SELECT * INTO TABLE IT_ACT
      FROM ZTPP_ACT_HMC
      WHERE PRDT_DATE BETWEEN I_FDATE AND I_TDATE.
*       GROUP BY PRDT_DATE DEST.
    ELSE.
      IF I_FDATE IS INITIAL AND I_TDATE IS INITIAL.
        V_DATE = SY-DATUM - 1.
      ENDIF.
      IF NOT I_FDATE IS INITIAL AND I_TDATE IS INITIAL.
        V_DATE = I_FDATE.
      ENDIF.
      IF I_FDATE IS INITIAL AND NOT I_TDATE IS INITIAL.
        V_DATE = I_TDATE.
      ENDIF.

      SELECT * INTO TABLE IT_ACT
        FROM ZTPP_ACT_HMC
        WHERE PRDT_DATE = V_DATE.
*       GROUP BY PRDT_DATE DEST.

    ENDIF.
  ENDIF.

*  LOOP AT IT_ACT.
*    MOVE-CORRESPONDING IT_ACT TO IT_TEMP.
*    COLLECT IT_TEMP.
*    CLEAR: IT_TEMP, IT_ACT.
*  ENDLOOP.
*
*  V_SEQ = '1'.
*
*  LOOP AT IT_TEMP.
*    T_GCCELOG-ELOG_DATE = IT_TEMP-PRDT_DATE.
*    T_GCCELOG-ELOG_KIND = 'PRST'.
*    T_GCCELOG-ELOG_SEQ = V_SEQ.
*    T_GCCELOG-ELOG_HKMC = 'HMC'.
*    IF IT_TEMP-DEST = 'B28'.
*      T_GCCELOG-ELOG_EXDO = 'D'.
*    ELSE.
*      T_GCCELOG-ELOG_EXDO = 'E'.
*    ENDIF.
*    T_GCCELOG-ELOG_NAT = IT_TEMP-DEST.
*    T_GCCELOG-ELOG_LOC = 'HMMA'.
*
*    T_GCCELOG-ELOG_DAYTIME = V_DAYTIME.
*    T_GCCELOG-ELOG_QTY = IT_TEMP-QTY.
*    T_GCCELOG-ELOG_SUM = IT_TEMP-SUM.
*    APPEND T_GCCELOG.
*    CLEAR:T_GCCELOG.
*  ENDLOOP.

*** UPDATE ZTPP_GCC_ELOG

*  LOOP AT T_GCCELOG.
*    MOVE-CORRESPONDING T_GCCELOG TO IT_ZTPP_GCCELOG.
**    IT_GCCELOG-IF_DATE = SY-DATUM.
**    IT_GCCELOG-IF_TIME = SY-UZEIT.
*    IT_ZTPP_GCCELOG-IF_USER = SY-UNAME.
*    APPEND IT_ZTPP_GCCELOG.
*  ENDLOOP.
*  MODIFY ZTPP_GCC_ELOG FROM TABLE IT_ZTPP_GCCELOG.

ENDFUNCTION.
