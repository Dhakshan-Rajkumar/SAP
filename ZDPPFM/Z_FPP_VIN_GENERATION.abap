FUNCTION Z_FPP_VIN_GENERATION.
*"----------------------------------------------------------------------
*"*"Local interface:
*"  IMPORTING
*"     REFERENCE(W_ORDER) LIKE  ZTPP_COMMON_VALS-KEY3
*"     REFERENCE(MODE) TYPE  ZTPP_COMMON_VALS-KEY2 DEFAULT 'EMF'
*"  EXPORTING
*"     REFERENCE(P_LASTID) LIKE  ZTPP_COMMON_VALS-KEY3
*"  EXCEPTIONS
*"      NOT_FOUND
*"----------------------------------------------------------------------
  DATA: L_STRING(1),
        L_VALUE(3) TYPE I,
        L_VALUE1(2) TYPE I,
        L_VALUE2(2) TYPE I,
        L_VALUE3(2) TYPE I,
        L_VALUE4(2) TYPE I,
        L_VALUE5(2) TYPE I,
        L_VALUE6(2) TYPE I,
        L_VALUE7(2) TYPE I,
        L_VALUE8(2) TYPE I,
        L_VALUE10(2) TYPE I,
        L_VALUE11(2) TYPE I,
        L_VALUE12(2) TYPE I,
        L_VALUE13(2) TYPE I,
        L_VALUE14(2) TYPE I,
        L_VALUE15(2) TYPE I,
        L_VALUE16(2) TYPE I,
        L_VALUE17(2) TYPE I,
        L_LASTID(6) TYPE N,
        L_MOD(1) TYPE I,
        W_ORDER1  LIKE ZTPP_COMMON_VALS-KEY3,
        P_LASTID1 LIKE ZTPP_COMMON_VALS-KEY3.

  DATA: WA_ZTPP_COMMON_VALS LIKE ZTPP_COMMON_VALS.

*  CASE MODE.
*    WHEN 'EMF'.
  SELECT SINGLE * FROM ZTPP_COMMON_VALS
         WHERE JOBS EQ 'Z_FPP_VIN_GENERATION'
           AND KEY2 EQ MODE
           AND KEY3 EQ '******************'.
  IF SY-SUBRC EQ 0.
    L_LASTID = ZTPP_COMMON_VALS-ITEM4+14(6) + 1.
  ELSE.
    RAISE NOT_FOUND .
*        WA_ZTPP_COMMON_VALS-JOBS = 'Z_FPP_VIN_GENERATION'.
*        WA_ZTPP_COMMON_VALS-KEY2 = MODE.
*        WA_ZTPP_COMMON_VALS-KEY3 = '******************'.
*        INSERT INTO ZTPP_COMMON_VALS VALUES WA_ZTPP_COMMON_VALS.
*        IF SY-SUBRC EQ 0.
*          COMMIT WORK.
*        ELSE.
*          ROLLBACK WORK.
*        ENDIF.
*        L_LASTID = 1.
  ENDIF.

*    WHEN OTHERS.
*
*  ENDCASE.

  W_ORDER1 = W_ORDER.
  REPLACE W_ORDER1+11(6) WITH L_LASTID
                         INTO  W_ORDER1.
  P_LASTID = W_ORDER1.
  P_LASTID1 = P_LASTID.
  IF P_LASTID1+8(1) = '-'.
    PERFORM CHANGE_VALUE USING P_LASTID1+0(1).
    L_VALUE1 = Z_CODE * 8.
    PERFORM CHANGE_VALUE USING P_LASTID1+1(1).
    L_VALUE2 = Z_CODE * 7.
    PERFORM CHANGE_VALUE USING P_LASTID1+2(1).
    L_VALUE3 = Z_CODE * 6.
    PERFORM CHANGE_VALUE USING P_LASTID1+3(1).
    L_VALUE4 = Z_CODE * 5.
    PERFORM CHANGE_VALUE USING P_LASTID1+4(1).
    L_VALUE5 = Z_CODE * 4.
    PERFORM CHANGE_VALUE USING P_LASTID1+5(1).
    L_VALUE6 = Z_CODE * 3.
    PERFORM CHANGE_VALUE USING P_LASTID1+6(1).
    L_VALUE7 = Z_CODE * 2.
    PERFORM CHANGE_VALUE USING P_LASTID1+7(1).
    L_VALUE8 = Z_CODE * 10.
    PERFORM CHANGE_VALUE USING P_LASTID1+9(1).
    L_VALUE10 = Z_CODE * 9.
    PERFORM CHANGE_VALUE USING P_LASTID1+10(1).
    L_VALUE11 = Z_CODE * 8.
    PERFORM CHANGE_VALUE USING P_LASTID1+11(1).
    L_VALUE12 = Z_CODE * 7.
    PERFORM CHANGE_VALUE USING P_LASTID1+12(1).
    L_VALUE13 = Z_CODE * 6.
    PERFORM CHANGE_VALUE USING P_LASTID1+13(1).
    L_VALUE14 = Z_CODE * 5.
    PERFORM CHANGE_VALUE USING P_LASTID1+14(1).
    L_VALUE15 = Z_CODE * 4.
    PERFORM CHANGE_VALUE USING P_LASTID1+15(1).
    L_VALUE16 = Z_CODE * 3.
    PERFORM CHANGE_VALUE USING P_LASTID1+16(1).
    L_VALUE17 = Z_CODE * 2.

    L_VALUE = ( L_VALUE1 + L_VALUE2 + L_VALUE3 + L_VALUE4 +
              L_VALUE5 + L_VALUE6 + L_VALUE7 + L_VALUE8 +
              L_VALUE10 + L_VALUE11 + L_VALUE12 + L_VALUE13 +
              L_VALUE14 + L_VALUE15 + L_VALUE16 + L_VALUE17 ).

    L_MOD = L_VALUE MOD 11.

    IF L_MOD EQ '10'.
      L_STRING = 'X'.
      REPLACE P_LASTID+8(1) WITH L_STRING
                      INTO P_LASTID.
    ELSE.
      L_STRING = L_MOD.
      REPLACE P_LASTID+8(1) WITH L_STRING
                      INTO P_LASTID.
    ENDIF.
  ENDIF.
  UPDATE ZTPP_COMMON_VALS SET: ITEM4 = L_LASTID
                               UDATE = SY-DATUM
                               UTIME = SY-UZEIT
                          WHERE JOBS = 'Z_FPP_VIN_GENERATION'
                            AND KEY2 = MODE
                            AND KEY3 = '******************'.
  IF SY-SUBRC EQ 0.
    COMMIT WORK.
  ELSE.
    ROLLBACK WORK.
  ENDIF.

ENDFUNCTION.
