FUNCTION Z_FPP_HMA_EXT_WO.
*"----------------------------------------------------------------------
*"*"Local interface:
*"  IMPORTING
*"     REFERENCE(IDOCNUM) LIKE  EDIDC-DOCNUM
*"  TABLES
*"      RETURN STRUCTURE  BAPIRETURN
*"      HEADER STRUCTURE  ZPOSEG1
*"----------------------------------------------------------------------

  DATA : LT_SODATA LIKE TABLE OF ZTSD_SODATA WITH HEADER LINE,
         LT_WOSUM  LIKE TABLE OF ZTPP_WOSUM WITH HEADER LINE.

  DATA : L_RETURN LIKE LINE OF RETURN ,
         W_HEADER LIKE LINE OF HEADER.

  DATA : LV_DATUM LIKE P0001-BEGDA,
         LV_YEAR(2) TYPE N.


  SELECT * INTO CORRESPONDING FIELDS OF TABLE LT_WOSUM
  FROM ZTPP_WOSUM
  FOR ALL ENTRIES IN HEADER
  WHERE WO_SER EQ HEADER-PRDOD	
    AND NATION EQ HEADER-NATN	
    AND DEALER EQ HEADER-DIST	 .	
*    AND EXTC   EQ HEADER-WKEXC
*    AND INTC   EQ HEADER-WKINC.


  LOOP AT HEADER INTO W_HEADER .
    CLEAR : LT_SODATA.

    READ TABLE LT_WOSUM WITH KEY
      WO_SER = W_HEADER-PRDOD	
      NATION = W_HEADER-NATN	
      DEALER = W_HEADER-DIST	 	
      EXTC	 = W_HEADER-WKEXC
      INTC	 = W_HEADER-WKINC.

    IF SY-SUBRC <> 0 . CONTINUE . ENDIF.

    IF LT_WOSUM-MODQTY EQ W_HEADER-MOQTY .
     CONTINUE.
   ENDIF.

    LV_DATUM = '20000101'.

    LT_SODATA-WO_SER    = W_HEADER-PRDOD  .
    LT_SODATA-NATION    = W_HEADER-NATN   .
    LT_SODATA-DEALER    = W_HEADER-DIST   .
    LT_SODATA-EXTC      = W_HEADER-WKEXC  .
    LT_SODATA-INTC      = W_HEADER-WKINC  .
    LT_SODATA-WOUPS     = W_HEADER-WOUPS  . "Spec W/O :Victor 06.30.2011
    LT_SODATA-ZSDAT     = W_HEADER-CRDAT.
    LT_SODATA-ZSTIM     = 0.

    LV_YEAR = W_HEADER-PRDOD+1(2).

    CALL FUNCTION 'RP_CALC_DATE_IN_INTERVAL'
         EXPORTING
              DATE      = LV_DATUM  "LV_DATUM
              DAYS      = 0
              MONTHS    = 0
              SIGNUM    = '+'
              YEARS     = LV_YEAR
         IMPORTING
              CALC_DATE = LV_DATUM.


    LT_SODATA-POYEAR    = LV_DATUM+0(4).
    LT_SODATA-POMONTH   = W_HEADER-PRDOD+3(2).
*    LT_SODATA-REGIONN   =
*    LT_SODATA-PORT      =
    LT_SODATA-BMDL      = W_HEADER-MDINX.
    LT_SODATA-OCNN      = W_HEADER-OCCN.
    LT_SODATA-FLET      = W_HEADER-FLTFG.

    LT_SODATA-ORDQTY    = W_HEADER-MOQTY.
      " W_HEADER-IOQTY.
    LT_SODATA-NEWQTY    =
      W_HEADER-MOQTY - LT_WOSUM-MODQTY.

    LT_SODATA-ZUSER     = SY-UNAME.
    LT_SODATA-ZEDAT     = SY-DATUM.
    LT_SODATA-ZETIM     = SY-UZEIT.


    APPEND LT_SODATA.
  ENDLOOP.

  MODIFY ZTSD_SODATA FROM TABLE LT_SODATA.
*    INSERT ZTSD_SODATA FROM TABLE IT_SODATA ACCEPTING DUPLICATE KEYS.
*    PERFORM DATA_PROCESSING.

  IF SY-SUBRC <> 0 .
    UPDATE ZTPP_PO_IDOC SET
    STATUS = 'E'
     ERDAT = SY-DATUM
     ERTIM = SY-UZEIT
     UNAME = SY-UNAME
    WHERE DOCNUM = IDOCNUM
      AND STATUS = ''.


    L_RETURN-TYPE = 'E'.
    L_RETURN-CODE = IDOCNUM.
    L_RETURN-MESSAGE = 'Modify : ZTPP_SO_DATA Insert Error'.

  ELSE.
    UPDATE ZTPP_PO_IDOC SET
    STATUS = 'S'
     ERDAT = SY-DATUM
     ERTIM = SY-UZEIT
     UNAME = SY-UNAME
    WHERE DOCNUM = IDOCNUM
    AND STATUS = ''.
    L_RETURN-TYPE = 'S'.
    L_RETURN-CODE = IDOCNUM.
    L_RETURN-MESSAGE = 'Completed '.

  ENDIF.

  APPEND L_RETURN TO RETURN.
  PERFORM GET_SODATA USING L_RETURN.

  APPEND  L_RETURN TO RETURN.

ENDFUNCTION.
