************************************************************************
* Program Name      : ZAPP272R_HPC_CODE_ORDER_PLAN
* Author            : Bongsoo, Kim
* Creation Date     : 2003.12.09.
* Specifications By : Bongsoo, Kim
* Development Request No : UD1K904736
* Addl Documentation:
* Description       : HPC CODE ORDER PLAN
*
* Modification Logs
* Date       Developer    RequestNo    Description
*
*
*
************************************************************************
REPORT ZAPP272R_HPC_CODE_ORDER_PLAN
                NO STANDARD PAGE HEADING
                LINE-SIZE  255
                LINE-COUNT 65
                MESSAGE-ID ZMBM.
*----------------------------------------------------------------------*
* TABLES
*----------------------------------------------------------------------*
TABLES: ZTBM_ABXPCLDT,
        ZTBM_ABXPLIDT,
        ZTBM_ABXPLCDT,
        ZTBM_ABXPLBDT.
*----------------------------------------------------------------------*
* INTERNEL TABLES
*----------------------------------------------------------------------*

*----------------------------------------------------------------------*
* DATAS
*----------------------------------------------------------------------*

*----------------------------------------------------------------------*
* DECLARATION FOR SEARCH HELP
*----------------------------------------------------------------------*
DATA DYNPREAD LIKE DYNPREAD OCCURS 0 WITH HEADER LINE.
DATA: BEGIN OF VALUETAB OCCURS 0,
          VALUE(80).
DATA: END OF VALUETAB.

DATA: BEGIN OF FIELDS OCCURS 0.
        INCLUDE STRUCTURE HELP_VALUE.
DATA: END OF FIELDS.

DATA: BEGIN OF DYNPFIELDS  OCCURS 0.
        INCLUDE STRUCTURE DYNPREAD.
DATA: END OF DYNPFIELDS.

DATA  SELECT_INDEX LIKE SY-TABIX.

DATA: BEGIN OF SELECT_VALUES OCCURS 0.
        INCLUDE STRUCTURE HELP_VTAB.
DATA: END OF SELECT_VALUES.

DATA: BEGIN OF IT_IBSYMBOL OCCURS 0,
        ATWRT TYPE IBSYMBOL-ATWRT,
        ATNAM TYPE CABN-ATNAM,
      END OF IT_IBSYMBOL.
*----------------------------------------------------------------------*
* SELECTION-SCREEN
*----------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-00A.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN POSITION 1.
SELECTION-SCREEN COMMENT  (12) TEXT-001.
SELECTION-SCREEN POSITION 15.
PARAMETERS: P_MAKER(3) TYPE C.

SELECTION-SCREEN POSITION 21.
SELECTION-SCREEN COMMENT  (05) TEXT-002.
SELECTION-SCREEN POSITION 28.
PARAMETERS: P_PLNT LIKE ZTBM_ABXPLIDT-PLNT.

SELECTION-SCREEN POSITION 32.
SELECTION-SCREEN COMMENT  (09) TEXT-003.
SELECTION-SCREEN POSITION 43.
PARAMETERS: P_CARX LIKE ZTBM_ABXPLIDT-CARX.

SELECTION-SCREEN POSITION 47.
SELECTION-SCREEN COMMENT  (05) TEXT-004.
SELECTION-SCREEN POSITION 54.
PARAMETERS: P_GUBN LIKE ZTBM_ABXPLIDT-GUBN.

SELECTION-SCREEN POSITION 56.
SELECTION-SCREEN COMMENT  (06) TEXT-005.
SELECTION-SCREEN POSITION 64.
PARAMETERS: P_HPCC LIKE ZTBM_ABXPLIDT-HPCC.

SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END   OF BLOCK B1.

SELECTION-SCREEN BEGIN OF BLOCK B2 WITH FRAME TITLE TEXT-00B.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN POSITION 1.
SELECTION-SCREEN COMMENT  (17) TEXT-006.
SELECTION-SCREEN POSITION 19.
SELECTION-SCREEN COMMENT  (01) TEXT-007.
SELECTION-SCREEN POSITION 21.
SELECTION-SCREEN COMMENT  (01) TEXT-008.
SELECTION-SCREEN POSITION 23.
SELECTION-SCREEN COMMENT  (01) TEXT-009.
SELECTION-SCREEN POSITION 25.
SELECTION-SCREEN COMMENT  (01) TEXT-010.
SELECTION-SCREEN POSITION 27.
SELECTION-SCREEN COMMENT  (01) TEXT-011.
SELECTION-SCREEN POSITION 29.
SELECTION-SCREEN COMMENT  (01) TEXT-012.
SELECTION-SCREEN POSITION 31.
SELECTION-SCREEN COMMENT  (01) TEXT-013.
SELECTION-SCREEN POSITION 33.
SELECTION-SCREEN COMMENT  (01) TEXT-014.
SELECTION-SCREEN POSITION 36.
SELECTION-SCREEN COMMENT  (01) TEXT-015.
*PARAMETERS: P_SH19 LIKE ZTBM_ABXPLIDT-SHOP.

SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN POSITION 19.
PARAMETERS: P_SH19 LIKE ZTBM_ABXPLIDT-SHOP.
SELECTION-SCREEN POSITION 21.
PARAMETERS: P_SH21 LIKE ZTBM_ABXPLIDT-SHOP.
SELECTION-SCREEN POSITION 23.
PARAMETERS: P_SH23 LIKE ZTBM_ABXPLIDT-SHOP.
SELECTION-SCREEN POSITION 25.
PARAMETERS: P_SH25 LIKE ZTBM_ABXPLIDT-SHOP.
SELECTION-SCREEN POSITION 27.
PARAMETERS: P_SH27 LIKE ZTBM_ABXPLIDT-SHOP.
SELECTION-SCREEN POSITION 29.
PARAMETERS: P_SH29 LIKE ZTBM_ABXPLIDT-SHOP.
SELECTION-SCREEN POSITION 31.
PARAMETERS: P_SH31 LIKE ZTBM_ABXPLIDT-SHOP.
SELECTION-SCREEN POSITION 33.
PARAMETERS: P_SH33 LIKE ZTBM_ABXPLIDT-SHOP.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END   OF BLOCK B2.
*----------------------------------------------------------------------*
* EVENT
*----------------------------------------------------------------------*
INITIALIZATION.
  PERFORM INITIALIZATION.

AT SELECTION-SCREEN OUTPUT.
  PERFORM SCREEN_MODIFY.

**-----> AT SELECTION-SCREEN ON VALUE-REQUEST
*AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_MAKER.
*  PERFORM HELP_REQUEST_MAKER.

*-----> AT SELECTION-SCREEN ON VALUE-REQUEST
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_PLNT.
  PERFORM HELP_REQUEST_PLNT.

*-----> AT SELECTION-SCREEN ON VALUE-REQUEST
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_CARX.
  PERFORM HELP_REQUEST_CARX.

*-----> AT SELECTION-SCREEN ON VALUE-REQUEST
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_GUBN.
  PERFORM HELP_REQUEST_GUBN.

*AT SELECTION-SCREEN.
*  PERFORM AT_SELECTION_SCREEN.
*
*START-OF-SELECTION.
*  PERFORM READ_PROCESS.
*  PERFORM DATA_PROCESS.
*  PERFORM WRITE_PROCESS.
*
*END-OF-SELECTION.
*&---------------------------------------------------------------------*
*&      Form  INITIALIZATION
*&---------------------------------------------------------------------*
FORM INITIALIZATION.
  P_MAKER = 'HMC'.
ENDFORM.                    " INITIALIZATION
*&---------------------------------------------------------------------*
*&      Form  HELP_REQUEST_MAKER
*&---------------------------------------------------------------------*
FORM HELP_REQUEST_MAKER.
*  DATA: BEGIN OF LT_HMC OCCURS 0,
*          MAKER(3),
*        END   OF LT_HMC.
*  CLEAR DYNPREAD. REFRESH DYNPREAD.
*  CLEAR VALUETAB. REFRESH VALUETAB.
*  CLEAR FIELDS.   REFRESH FIELDS.
*
**  PERFORM VALUE_READ USING: 'P_MAKER'.
*  LOOP AT DYNPREAD.
*    CASE SY-TABIX.
*      WHEN 1. P_MAKER = DYNPREAD-FIELDVALUE.
*    ENDCASE.
*  ENDLOOP.
*  CLEAR DYNPREAD. REFRESH DYNPREAD.
*  CLEAR VALUETAB. REFRESH VALUETAB.
*  CLEAR FIELDS.   REFRESH FIELDS.
*  LT_HMC-MAKER = 'HMC'.
*  APPEND LT_HMC. CLEAR LT_HMC.
*  LOOP AT LT_HMC.
*    VALUETAB-VALUE = LT_HMC-MAKER.
*    APPEND VALUETAB. CLEAR VALUETAB.
*  ENDLOOP.
*  PERFORM ADD_FIELDS USING: 'CHAR3' 'CHAR3' 'X'.
*  PERFORM HELP_VALUES_GET.
*
*
*  IF SELECT_INDEX > 0.
*    READ TABLE LT_HMC   INDEX SELECT_INDEX.
*    PERFORM VALUE_UPDATE USING:
*            ' '   'P_MAKER' LT_HMC-MAKER 0.
*  ENDIF.
ENDFORM.                    " HELP_REQUEST_MAKER
*&---------------------------------------------------------------------*
*&      Form  VALUE_READ
*&---------------------------------------------------------------------*
FORM VALUE_READ USING  P_NAME.
  DYNPREAD-FIELDNAME = P_NAME. APPEND DYNPREAD.
  CALL FUNCTION 'DYNP_VALUES_READ'
       EXPORTING
            DYNAME                   = SY-CPROG
            DYNUMB                   = SY-DYNNR
       TABLES
            DYNPFIELDS               = DYNPREAD
*      EXCEPTIONS
*           INVALID_ABAPWORKAREA     = 1
*           INVALID_DYNPROFIELD      = 2
*           INVALID_DYNPRONAME       = 3
*           INVALID_DYNPRONUMMER     = 4
*           INVALID_REQUEST          = 5
*           NO_FIELDDESCRIPTION      = 6
*           INVALID_PARAMETER        = 7
*           UNDEFIND_ERROR           = 8
*           DOUBLE_CONVERSION        = 9
*           OTHERS                   = 10
            .
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
ENDFORM.                    " VALUE_READ
*&---------------------------------------------------------------------*
*&      Form  ADD_FIELDS
*&---------------------------------------------------------------------*
FORM ADD_FIELDS USING  P_TABNAME P_FIELDNAME P_FLAG.
  FIELDS-TABNAME = P_TABNAME.
  FIELDS-FIELDNAME = P_FIELDNAME.
  FIELDS-SELECTFLAG = P_FLAG.
  APPEND FIELDS.      CLEAR FIELDS.
ENDFORM.                    " ADD_FIELDS
*&---------------------------------------------------------------------*
*&      Form  HELP_VALUES_GET
*&---------------------------------------------------------------------*
FORM HELP_VALUES_GET.
  CALL FUNCTION 'HELP_VALUES_GET_WITH_TABLE_EXT'
       EXPORTING
            DISPLAY                   = ' '
       IMPORTING
            INDEX                     = SELECT_INDEX
       TABLES
            FIELDS                    = FIELDS
            SELECT_VALUES             = SELECT_VALUES
            VALUETAB                  = VALUETAB
       EXCEPTIONS
            FIELD_NOT_IN_DDIC         = 1
            MORE_THEN_ONE_SELECTFIELD = 2
            NO_SELECTFIELD            = 3
            OTHERS                    = 4.
ENDFORM.                    " HELP_VALUES_GET
*&---------------------------------------------------------------------*
*&      Form  VALUE_UPDATE
*&---------------------------------------------------------------------*
FORM VALUE_UPDATE USING  P_PROCESS
                         P_FIELDNAME
                         P_FIELDVALUE
                         P_STEPL.
  CLEAR DYNPFIELDS.
  DYNPFIELDS-FIELDNAME = P_FIELDNAME.
  DYNPFIELDS-FIELDVALUE = P_FIELDVALUE.
  IF P_STEPL > 0.
    DYNPFIELDS-STEPL = P_STEPL.
  ENDIF.
  APPEND DYNPFIELDS.      CLEAR DYNPFIELDS.

  IF P_PROCESS EQ 'X'.
    CALL FUNCTION 'DYNP_VALUES_UPDATE'
         EXPORTING
              DYNAME               = SY-CPROG
              DYNUMB               = SY-DYNNR
         TABLES
              DYNPFIELDS           = DYNPFIELDS
         EXCEPTIONS
              INVALID_ABAPWORKAREA = 1
              INVALID_DYNPROFIELD  = 2
              INVALID_DYNPRONAME   = 3
              INVALID_DYNPRONUMMER = 4
              INVALID_REQUEST      = 5
              NO_FIELDDESCRIPTION  = 6
              UNDEFIND_ERROR       = 7
              OTHERS               = 8.
    REFRESH DYNPFIELDS.
  ENDIF.

ENDFORM.                    " VALUE_UPDATE
*&---------------------------------------------------------------------*
*&      Form  SCREEN_MODIFY
*&---------------------------------------------------------------------*
FORM SCREEN_MODIFY.
  LOOP AT SCREEN.
    IF SCREEN-NAME EQ 'P_MAKER'.
      SCREEN-INPUT = 0.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.
ENDFORM.                    " SCREEN_MODIFY
*&---------------------------------------------------------------------*
*&      Form  HELP_REQUEST_PLNT
*&---------------------------------------------------------------------*
FORM HELP_REQUEST_PLNT.
  DATA: BEGIN OF LT_PLNT OCCURS 0,
          PLNT LIKE ZTBM_ABXPLIDT-PLNT,
          TEXT(10),  " LIKE ZTBM_ABXPLIDT-PLNT,
        END   OF LT_PLNT.
        DATA: L_INDEX(1) TYPE N.
  CLEAR DYNPREAD. REFRESH DYNPREAD.
  CLEAR VALUETAB. REFRESH VALUETAB.
  CLEAR FIELDS.   REFRESH FIELDS.

*  PERFORM VALUE_READ USING: 'P_MAKER'.
  LOOP AT DYNPREAD.
    CASE SY-TABIX.
      WHEN 1. P_PLNT  = DYNPREAD-FIELDVALUE.
    ENDCASE.
  ENDLOOP.
  CLEAR DYNPREAD. REFRESH DYNPREAD.
  CLEAR VALUETAB. REFRESH VALUETAB.
  CLEAR FIELDS.   REFRESH FIELDS.
  DO 7 TIMES.
  L_INDEX = SY-INDEX.
  LT_PLNT-PLNT = L_INDEX.
*  APPEND LT_PLNT. CLEAR LT_PLNT.
  CONCATENATE L_INDEX ' PLANT' INTO LT_PLNT-TEXT.
  APPEND LT_PLNT. CLEAR LT_PLNT.
  ENDDO.
  LOOP AT LT_PLNT.
    VALUETAB-VALUE = LT_PLNT-PLNT.
    APPEND VALUETAB. CLEAR VALUETAB.
    VALUETAB-VALUE = LT_PLNT-TEXT.
    APPEND VALUETAB. CLEAR VALUETAB.
  ENDLOOP.
  PERFORM ADD_FIELDS USING: 'ZTBM_ABXPLIDT' 'PLNT' 'X',
                            'ZTBM_ABXPLIDT' 'PLNT' ' '.
  PERFORM HELP_VALUES_GET.


  IF SELECT_INDEX > 0.
    READ TABLE LT_PLNT   INDEX SELECT_INDEX.
    PERFORM VALUE_UPDATE USING:
            'X'   'P_PLNT' LT_PLNT-PLNT 0.
  ENDIF.
ENDFORM.                    " HELP_REQUEST_PLNT
*&---------------------------------------------------------------------*
*&      Form  HELP_REQUEST_CARX
*&---------------------------------------------------------------------*
FORM HELP_REQUEST_CARX.
  DATA: BEGIN OF LT_CARX OCCURS 0,
          CARX LIKE ZTBM_ABXPLIDT-CARX,
          TEXT(10),  " LIKE ZTBM_ABXPLIDT-CARX,
        END   OF LT_CARX.
        DATA: L_INDEX(1) TYPE N.
  CLEAR DYNPREAD. REFRESH DYNPREAD.
  CLEAR VALUETAB. REFRESH VALUETAB.
  CLEAR FIELDS.   REFRESH FIELDS.

*  PERFORM VALUE_READ USING: 'P_MAKER'.
  LOOP AT DYNPREAD.
    CASE SY-TABIX.
      WHEN 1. P_CARX  = DYNPREAD-FIELDVALUE.
    ENDCASE.
  ENDLOOP.
  CLEAR DYNPREAD. REFRESH DYNPREAD.
  CLEAR VALUETAB. REFRESH VALUETAB.
  CLEAR FIELDS.   REFRESH FIELDS.
  LT_CARX-CARX = 'DA'.
  LT_CARX-TEXT = 'EF-SONATA'.
  APPEND LT_CARX. CLEAR LT_CARX.
  LT_CARX-CARX = 'EM'.
  LT_CARX-TEXT = 'SANTAFE'.
  APPEND LT_CARX. CLEAR LT_CARX.
  LOOP AT LT_CARX.
    VALUETAB-VALUE = LT_CARX-CARX.
    APPEND VALUETAB. CLEAR VALUETAB.
    VALUETAB-VALUE = LT_CARX-TEXT.
    APPEND VALUETAB. CLEAR VALUETAB.
  ENDLOOP.
  PERFORM ADD_FIELDS USING: 'ZTBM_ABXPLIDT' 'CARX' 'X',
                            'ZTBM_ABXPLIDT' 'CARX' ' '.
  PERFORM HELP_VALUES_GET.


  IF SELECT_INDEX > 0.
    READ TABLE LT_CARX   INDEX SELECT_INDEX.
    PERFORM VALUE_UPDATE USING:
            'X'   'P_CARX' LT_CARX-CARX 0.
  ENDIF.
ENDFORM.                    " HELP_REQUEST_CARX
*&---------------------------------------------------------------------*
*&      Form  HELP_REQUEST_GUBN
*&---------------------------------------------------------------------*
FORM HELP_REQUEST_GUBN.
  DATA: BEGIN OF LT_GUBN OCCURS 0,
          GUBN LIKE ZTBM_ABXPLIDT-GUBN,
*          TEXT(10),  " LIKE ZTBM_ABXPLIDT-GUBN,
        END   OF LT_GUBN.
        DATA: L_INDEX(1) TYPE N.
  CLEAR DYNPREAD. REFRESH DYNPREAD.
  CLEAR VALUETAB. REFRESH VALUETAB.
  CLEAR FIELDS.   REFRESH FIELDS.

*  PERFORM VALUE_READ USING: 'P_MAKER'.
  LOOP AT DYNPREAD.
    CASE SY-TABIX.
      WHEN 1. P_GUBN  = DYNPREAD-FIELDVALUE.
    ENDCASE.
  ENDLOOP.
  CLEAR DYNPREAD. REFRESH DYNPREAD.
  CLEAR VALUETAB. REFRESH VALUETAB.
  CLEAR FIELDS.   REFRESH FIELDS.
  LT_GUBN-GUBN = 'P'.
  APPEND LT_GUBN. CLEAR LT_GUBN.
  LT_GUBN-GUBN = 'B'.
  APPEND LT_GUBN. CLEAR LT_GUBN.
  LT_GUBN-GUBN = 'Q'.
  APPEND LT_GUBN. CLEAR LT_GUBN.
  LOOP AT LT_GUBN.
    VALUETAB-VALUE = LT_GUBN-GUBN.
    APPEND VALUETAB. CLEAR VALUETAB.
  ENDLOOP.
  PERFORM ADD_FIELDS USING: 'ZTBM_ABXPLIDT' 'GUBN' 'X'.
  PERFORM HELP_VALUES_GET.


  IF SELECT_INDEX > 0.
    READ TABLE LT_GUBN   INDEX SELECT_INDEX.
    PERFORM VALUE_UPDATE USING:
            'X'   'P_GUBN' LT_GUBN-GUBN 0.
  ENDIF.
ENDFORM.                    " HELP_REQUEST_GUBN
