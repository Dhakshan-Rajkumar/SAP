*----------------------------------------------------------------------*
*   INCLUDE ZRPP_HMA_ZPODER_F01                                        *
*----------------------------------------------------------------------*

FORM P2000_GET_DATA.

  DATA : BEGIN OF LT_SGNAM OCCURS 0 ,
          MESTYP  LIKE EDIDC-MESTYP,
          SEGMNT  LIKE DD02L-TABNAME,
          WOSERNM(100),
         END OF LT_SGNAM.

  DATA : LT_EDIDC LIKE TABLE OF EDIDC WITH HEADER LINE,
         LT_EDIDD LIKE TABLE OF EDIDD WITH HEADER LINE.

  DATA : CT_FCAT TYPE SLIS_T_FIELDCAT_ALV WITH HEADER LINE,
         LT_FCAT TYPE TABLE OF LVC_S_FCAT ,
         LS_FCAT LIKE LINE OF LT_FCAT.
  DATA : LT_RTAB TYPE REF TO DATA,
         LV_LINE TYPE REF TO DATA.

  DATA : LV_FIELD(100).

  FIELD-SYMBOLS : <FIELD>.
  RANGES : R_STATUS FOR EDIDC-STATUS.


  R_STATUS-SIGN = 'E'.
  R_STATUS-OPTION = 'EQ'.
  R_STATUS-LOW = '30'. APPEND R_STATUS.
  R_STATUS-LOW = '02'. APPEND R_STATUS.
  R_STATUS-LOW = '04'. APPEND R_STATUS.
  R_STATUS-LOW = '05'. APPEND R_STATUS.
  R_STATUS-LOW = '25'. APPEND R_STATUS.
  R_STATUS-LOW = '29'. APPEND R_STATUS.
  R_STATUS-LOW = '26'. APPEND R_STATUS.
  R_STATUS-LOW = '32'. APPEND R_STATUS.
*  R_STATUS-LOW = '51'. APPEND R_STATUS.
  R_STATUS-LOW = '56'. APPEND R_STATUS.
  R_STATUS-LOW = '61'. APPEND R_STATUS.
  R_STATUS-LOW = '63'. APPEND R_STATUS.
  R_STATUS-LOW = '65'. APPEND R_STATUS.
  R_STATUS-LOW = '60'. APPEND R_STATUS.
  R_STATUS-LOW = '64'. APPEND R_STATUS.
  R_STATUS-LOW = '66'. APPEND R_STATUS.
  R_STATUS-LOW = '69'. APPEND R_STATUS.
  DATA: PERCENT(3) TYPE N.

  DO 100 TIMES.
    MOVE: SY-INDEX TO PERCENT.
    CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
         EXPORTING
              PERCENTAGE = PERCENT
              TEXT       = TEXT-001
         EXCEPTIONS
              OTHERS     = 1.

  ENDDO.
  SELECT * INTO CORRESPONDING FIELDS OF TABLE LT_EDIDC
  FROM EDIDC
  WHERE CREDAT  IN S_DATUM
    AND MESTYP EQ P_MSTYP
    AND RCVPRT EQ 'LS'
    AND RCVPRN EQ P_RCVPRN
    AND SNDPRN EQ P_SNDPRN
    AND DIRECT EQ P_DIRECT
    AND DOCNUM IN S_DOCNUM.

  LT_SGNAM-MESTYP = P_MSTYP.
  CASE P_MSTYP.
    WHEN 'ZSPEC_ORD_MST'.
      LT_SGNAM-SEGMNT = 'ZSPSEG'.
      LT_SGNAM-WOSERNM = 'WO_SER'.
    WHEN 'ZPODER_MST'.
      LT_SGNAM-SEGMNT = 'ZPOSEG1'.
      LT_SGNAM-WOSERNM = 'PRDOD'.
    WHEN 'ZOSR_MST'.
      LT_SGNAM-SEGMNT = 'ZOSRSEG'.
      LT_SGNAM-WOSERNM = 'WKNO'.
  ENDCASE.

  APPEND LT_SGNAM.


  READ TABLE LT_SGNAM INDEX 1.

  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
         EXPORTING
              I_PROGRAM_NAME         = GV_REPID
*            I_INTERNAL_TABNAME     = P_TAB
*              I_BUFFER_ACTIVE = 'X'
              I_BYPASSING_BUFFER     = 'X'
              I_STRUCTURE_NAME       = LT_SGNAM-SEGMNT
*              I_INCLNAME             = GV_REPID
         CHANGING
              CT_FIELDCAT            = CT_FCAT[]
         EXCEPTIONS
              INCONSISTENT_INTERFACE = 1
              PROGRAM_ERROR          = 2
              OTHERS                 = 3.

  LOOP AT CT_FCAT.
    CLEAR LS_FCAT.
    MOVE-CORRESPONDING CT_FCAT TO LS_FCAT .
    LS_FCAT-OUTPUTLEN = CT_FCAT-DDIC_OUTPUTLEN.
*    LS_FCAT-SELTEXT = LS_FCAT-FIELDNAME.
    CASE LS_FCAT-FIELDNAME.
      WHEN 'WO_SER'     .
        LS_FCAT-SELTEXT = TEXT-F01.
        LS_FCAT-EMPHASIZE = 'C500'.
        LS_FCAT-KEY = 'X'.
      WHEN 'NATION'     .
        LS_FCAT-SELTEXT = TEXT-F02.
        LS_FCAT-EMPHASIZE = 'C500'.
        LS_FCAT-KEY = 'X'.
      WHEN 'DEALER'     .
        LS_FCAT-SELTEXT = TEXT-F03.
        LS_FCAT-EMPHASIZE = 'C500'.
        LS_FCAT-KEY = 'X'.
      WHEN 'EXTC'       .
        LS_FCAT-SELTEXT = TEXT-F04.
        LS_FCAT-EMPHASIZE = 'C500'.
        LS_FCAT-KEY = 'X'.
      WHEN 'INTC'       .
        LS_FCAT-SELTEXT = TEXT-F05.
        LS_FCAT-EMPHASIZE = 'C500'.
        LS_FCAT-KEY = 'X'.
      WHEN 'MOYE'       .
        LS_FCAT-SELTEXT = TEXT-F06.
      WHEN 'BMDL'       .
        LS_FCAT-SELTEXT = TEXT-F07.
      WHEN 'OCNN'       .
        LS_FCAT-SELTEXT = TEXT-F08.
      WHEN 'VERS'       .
        LS_FCAT-SELTEXT = TEXT-F09.
      WHEN '_IOQTY'.
        LS_FCAT-SELTEXT = TEXT-F10.
        LS_FCAT-COL_POS = 10.
        LS_FCAT-DO_SUM = 'X'.
        LS_FCAT-QUANTITY = 'EA'.
      WHEN '_MOQTY'     .
        LS_FCAT-SELTEXT = TEXT-F11.
        LS_FCAT-COL_POS = 11.
        LS_FCAT-DO_SUM = 'X'.
        LS_FCAT-QUANTITY = 'EA'.
      WHEN 'INITQTY'    .
        LS_FCAT-SELTEXT = TEXT-F10.
        LS_FCAT-DATATYPE = 'INT'.
        LS_FCAT-NO_OUT = 'X'.
      WHEN 'MODQTY'     .
        LS_FCAT-SELTEXT = TEXT-F11.
        LS_FCAT-DATATYPE = 'INT'.
        LS_FCAT-NO_OUT = 'X'.
      WHEN '_CRT_DATE'.
        LS_FCAT-SELTEXT = TEXT-F12.
        LS_FCAT-COL_POS = 12.
        LS_FCAT-DO_SUM = ''.
      WHEN 'CRT_DATE'   .
        LS_FCAT-NO_OUT = 'X'.
        LS_FCAT-DATATYPE = 'DATUM'.
      WHEN '_CHG_DATE'   .
        LS_FCAT-SELTEXT = TEXT-F13.
        LS_FCAT-COL_POS = 13.
        LS_FCAT-DO_SUM = ''.
      WHEN 'CHG_DATE'   .
        LS_FCAT-NO_OUT = 'X'.
        LS_FCAT-SELTEXT = TEXT-F13.
        LS_FCAT-DATATYPE = 'DATUM'.
      WHEN 'DEST'       .
        LS_FCAT-SELTEXT = TEXT-F14.
      WHEN 'CLSR'       .
        LS_FCAT-SELTEXT = TEXT-F15.
      WHEN 'FLET'       .
        LS_FCAT-SELTEXT = TEXT-F16.
      WHEN 'LCNT'       .
        LS_FCAT-SELTEXT = TEXT-F17.
      WHEN 'LCNO'       .
        LS_FCAT-SELTEXT = TEXT-F18.
      WHEN 'S219'       .
        LS_FCAT-SELTEXT = TEXT-F19.
      WHEN 'STATUS'.
        LS_FCAT-SELTEXT = ''.
        LS_FCAT-ICON = 'X'.
      WHEN OTHERS .
        LS_FCAT-SELTEXT = LS_FCAT-FIELDNAME.
    ENDCASE.

    APPEND LS_FCAT TO LT_FCAT.
  ENDLOOP.
  CLEAR : LS_FCAT.
  LS_FCAT-FIELDNAME = 'STATUS_0'.
  LS_FCAT-REF_TABLE = 'ICON'.
  LS_FCAT-REF_FIELD = 'ID'.
  LS_FCAT-KEY  = 'X'.
  LS_FCAT-COL_POS = '99'.
  APPEND LS_FCAT TO LT_FCAT.

  LS_FCAT-FIELDNAME = 'CREDAT'.
  LS_FCAT-REF_TABLE = 'EDIDC'.
  LS_FCAT-REF_FIELD = 'CREDAT'.
  LS_FCAT-KEY  = 'X'.
  LS_FCAT-COL_POS = '100'.
  APPEND LS_FCAT TO LT_FCAT.

  LS_FCAT-FIELDNAME = 'CRETIM'.
  LS_FCAT-REF_TABLE = 'EDIDC'.
  LS_FCAT-REF_FIELD = 'CRETIM'.
  LS_FCAT-KEY  = 'X'.
  LS_FCAT-COL_POS = '100'.
  APPEND LS_FCAT TO LT_FCAT.
  GT_FIELDCAT[] = LT_FCAT[].

  CALL METHOD CL_ALV_TABLE_CREATE=>CREATE_DYNAMIC_TABLE
  EXPORTING
  IT_FIELDCATALOG = LT_FCAT
  IMPORTING
  EP_TABLE        = LT_RTAB.
  ASSIGN LT_RTAB->* TO <INTAB>.

  CREATE DATA LV_LINE LIKE LINE OF <INTAB>.
  ASSIGN LV_LINE->* TO <INTAB_WA>.


  LOOP AT LT_EDIDC .


    CALL FUNCTION 'IDOC_READ_COMPLETELY'
         EXPORTING
              DOCUMENT_NUMBER         = LT_EDIDC-DOCNUM
         TABLES
              INT_EDIDD               = LT_EDIDD
         EXCEPTIONS
              DOCUMENT_NOT_EXIST      = 1
              DOCUMENT_NUMBER_INVALID = 2
              OTHERS                  = 3.
    IF SY-SUBRC <> 0.
*     MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*             WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ELSE.
      READ TABLE LT_SGNAM WITH KEY MESTYP = LT_EDIDC-MESTYP.

      LOOP AT LT_EDIDD WHERE SEGNAM = LT_SGNAM-SEGMNT.

        <INTAB_WA> = LT_EDIDD-SDATA.

        CONCATENATE 'CREDAT' '' INTO LV_FIELD.
        ASSIGN COMPONENT LV_FIELD OF STRUCTURE <INTAB_WA> TO <FIELD>.
        <FIELD> = LT_EDIDC-CREDAT.
        UNASSIGN <FIELD>.

        CONCATENATE 'CRETIM' '' INTO LV_FIELD.
        ASSIGN COMPONENT LV_FIELD OF STRUCTURE <INTAB_WA> TO <FIELD>.
        <FIELD> = LT_EDIDC-CRETIM.
        UNASSIGN <FIELD>.

        CONCATENATE 'STATUS_0' '' INTO LV_FIELD.
        ASSIGN COMPONENT LV_FIELD OF STRUCTURE <INTAB_WA> TO <FIELD>.
        IF LT_EDIDC-STATUS IN R_STATUS.
          <FIELD> = '@08@'.
        ELSE.
          <FIELD> = '@0A@'.
        ENDIF.
*        <FIELD> = LT_EDIDC-STATUS.

        UNASSIGN <FIELD>.

        IF NOT S_WOSER-LOW IS INITIAL.
          CONCATENATE LT_SGNAM-WOSERNM '' INTO LV_FIELD.
          ASSIGN COMPONENT LV_FIELD OF STRUCTURE <INTAB_WA> TO <FIELD>.

          READ TABLE S_WOSER WITH KEY LOW = <FIELD>.
          IF SY-SUBRC = 0 .
            APPEND <INTAB_WA> TO <INTAB>.
          ELSE.
            CONTINUE.
          ENDIF.
        ELSE.
          APPEND <INTAB_WA> TO <INTAB>.
        ENDIF.
      ENDLOOP.
    ENDIF.

    CLEAR : <INTAB_WA>, LT_EDIDD.

  ENDLOOP.

  SORT <INTAB>.
  DELETE ADJACENT DUPLICATES FROM <INTAB>.

*  IF NOT S_WOSER-LOW IS INITIAL.
*    LOOP AT S_WOSER .
*      CONCATENATE LT_SGNAM-WOSERNM '' INTO LV_FIELD.
*      ASSIGN COMPONENT LV_FIELD OF STRUCTURE <INTAB> TO <FIELD>.
**    <FIELD> = S_WOSER-LOW.
*      READ TABLE <INTAB> INTO <INTAB_WA>
*        WITH KEY (LV_FIELD) = S_WOSER-LOW.
*      IF SY-SUBRC EQ 0 .
*        DELETE TABLE <INTAB> FROM <INTAB_WA>.
*      ENDIF.
*
*    ENDLOOP.
*  ENDIF.

ENDFORM.
