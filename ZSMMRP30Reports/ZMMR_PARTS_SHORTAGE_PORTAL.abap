************************************************************************
* Program Name      : ZMMR_PARTS_SHORTAGE_DISPLAY
* Author            : Furong Wang
* Creation Date     : 05/2010
* Specifications By :
* Pattern           :
* Development Request
* Addl Documentation:
* Description       :
*
* Modification Logs
* Date       Developer    RequestNo    Description
************************************************************************
REPORT ZMMR_PARTS_SHORTAGE_DISPLAY   MESSAGE-ID ZMMM.

TYPE-POOLS: SLIS .
TABLES: MARA, MARC, PVBE, ZTPP_INPUTPLAN_H, FDKUSER.

DATA: W_REPID LIKE SY-REPID,
      W_DYNNR LIKE SY-DYNNR.

SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS :
    S_MATNR   FOR MARA-MATNR,
    S_MTART   FOR MARA-MTART,
    S_MATKL   FOR MARA-MATKL,
    S_DISPO   FOR MARC-DISPO,                  "MRP controller
    S_LGPRO   FOR MARC-LGPRO,
    S_PRVBE   FOR PVBE-PRVBE,
    S_SORTF   FOR ZTPP_INPUTPLAN_H-STATUS.

PARAMETERS: P_LIFNR LIKE LFA1-LIFNR MODIF ID NOI OBLIGATORY.

SELECTION-SCREEN END OF BLOCK B1.

SELECTION-SCREEN BEGIN OF BLOCK BLOCK2 WITH FRAME TITLE TEXT-002.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 25(5) TEXT-ALL FOR FIELD PC_ALL .
SELECTION-SCREEN POSITION 18.
PARAMETERS  PC_ALL  RADIOBUTTON GROUP ICON DEFAULT 'X'.
SELECTION-SCREEN COMMENT 32(5) TEXT-RED FOR FIELD PC_RED .
PARAMETERS  PC_RED  RADIOBUTTON GROUP ICON .
SELECTION-SCREEN COMMENT 46(5) TEXT-YEL FOR FIELD PC_YEL .
PARAMETERS  PC_YEL  RADIOBUTTON GROUP ICON .
SELECTION-SCREEN COMMENT 60(5) TEXT-GRE FOR FIELD PC_GRE .
PARAMETERS  PC_GRE  RADIOBUTTON GROUP ICON .
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(28) TEXT-011  .
SELECTION-SCREEN COMMENT 31(2) TEXT-012 FOR FIELD P_RED1 .
PARAMETERS :  P_RED1 TYPE MDKP-BERW1 DEFAULT '10'.
SELECTION-SCREEN COMMENT 45(2) TEXT-012 FOR FIELD P_YEL1 .
PARAMETERS :  P_YEL1 TYPE MDKP-BERW1 DEFAULT '20'.
SELECTION-SCREEN COMMENT 59(2) TEXT-012 FOR FIELD P_GRE1 .
PARAMETERS :  P_GRE1 TYPE MDKP-BERW1 DEFAULT '999'.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK BLOCK2.


SELECTION-SCREEN BEGIN OF BLOCK B4 WITH FRAME TITLE TEXT-004.
SELECTION-SCREEN : BEGIN OF LINE.

PARAMETERS : P_TOPB AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 8(10) TEXT-TOP FOR FIELD P_TOPB.
PARAMETERS: P_TOPV TYPE  I DEFAULT '20'.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN SKIP.

SELECTION-SCREEN : BEGIN OF LINE.
PARAMETERS : P_LESB AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT 8(10) TEXT-LES FOR FIELD P_LESB.
PARAMETERS: P_LESV TYPE  I DEFAULT '20'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN : BEGIN OF LINE.
PARAMETERS : P_GRTB AS CHECKBOX.
SELECTION-SCREEN COMMENT 8(10) TEXT-GRT FOR FIELD P_GRTB.
PARAMETERS: P_GRTV TYPE  I DEFAULT '4'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK B4.

SELECTION-SCREEN BEGIN OF BLOCK BLOCK6 WITH FRAME TITLE TEXT-006.
PARAMETERS :
    P_INTRV TYPE I DEFAULT '60'.
SELECTION-SCREEN END OF BLOCK BLOCK6.


*----------------------------------------------------------------------
INITIALIZATION.
  PERFORM INIT_DATA.
*----------------------------------------------------------------------

* Set F4 values for MRP Controller
AT SELECTION-SCREEN ON VALUE-REQUEST FOR S_DISPO-LOW.
  DATA : BEGIN OF VALUE_TAB OCCURS 0,
         DISPO  LIKE MARC-DISPO,
         DESC LIKE T024D-DSNAM,
         END OF VALUE_TAB.

  SELECT DISTINCT A~DISPO DSNAM
     INTO TABLE VALUE_TAB
     FROM MARC AS A
     INNER JOIN T024D AS B
     ON A~DISPO = B~DISPO
     WHERE A~WERKS = 'P001'
     AND A~DISPO <> ' '.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
       EXPORTING
            RETFIELD        = 'DISPO'
            DYNPPROG        = W_REPID
            DYNPNR          = W_DYNNR
            DYNPROFIELD     = 'DISPO'
            WINDOW_TITLE    = 'MRP Controller'
            VALUE_ORG       = 'S'
       TABLES
            VALUE_TAB       = VALUE_TAB
       EXCEPTIONS
            PARAMETER_ERROR = 1.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR S_DISPO-HIGH.
  DATA : BEGIN OF VALUE_TAB OCCURS 0,
         DISPO  LIKE MARC-DISPO,
         DESC LIKE T024D-DSNAM,
         END OF VALUE_TAB.

  SELECT DISTINCT A~DISPO DSNAM
     INTO TABLE VALUE_TAB
     FROM MARC AS A
     INNER JOIN T024D AS B
     ON A~DISPO = B~DISPO
     WHERE A~WERKS = 'P001'
     AND A~DISPO <> ' '.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
       EXPORTING
            RETFIELD        = 'DISPO'
            DYNPPROG        = W_REPID
            DYNPNR          = W_DYNNR
            DYNPROFIELD     = 'DISPO'
            WINDOW_TITLE    = 'MRP Controller'
            VALUE_ORG       = 'S'
       TABLES
            VALUE_TAB       = VALUE_TAB
       EXCEPTIONS
            PARAMETER_ERROR = 1.

* Set F4 values for Prod Storage Location
AT SELECTION-SCREEN ON VALUE-REQUEST FOR S_LGPRO-LOW.
  DATA : BEGIN OF VALUE_TAB OCCURS 0,
         LGPRO  LIKE MARC-LGPRO,
         DESC LIKE T001L-LGOBE,
         END OF VALUE_TAB.

  SELECT DISTINCT A~LGPRO LGOBE INTO TABLE VALUE_TAB
     FROM MARC AS A
     INNER JOIN T001L AS B
     ON A~LGPRO = B~LGORT
     WHERE A~WERKS = 'P001'
       AND LGPRO <> ' '.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
       EXPORTING
            RETFIELD        = 'LGPRO'
            DYNPPROG        = W_REPID
            DYNPNR          = W_DYNNR
            DYNPROFIELD     = 'LGPRO'
            WINDOW_TITLE    = 'Prod Storage Loca'
            VALUE_ORG       = 'S'
       TABLES
            VALUE_TAB       = VALUE_TAB
       EXCEPTIONS
            PARAMETER_ERROR = 1.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR S_LGPRO-HIGH.
  DATA : BEGIN OF VALUE_TAB OCCURS 0,
         LGPRO  LIKE MARC-LGPRO,
         DESC LIKE T001L-LGOBE,
         END OF VALUE_TAB.

  SELECT DISTINCT A~LGPRO LGOBE INTO TABLE VALUE_TAB
     FROM MARC AS A
     INNER JOIN T001L AS B
     ON A~LGPRO = B~LGORT
     WHERE A~WERKS = 'P001'
       AND LGPRO <> ' '.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
       EXPORTING
            RETFIELD        = 'LGPRO'
            DYNPPROG        = W_REPID
            DYNPNR          = W_DYNNR
            DYNPROFIELD     = 'LGPRO'
            WINDOW_TITLE    = 'Prod Storage Loca'
            VALUE_ORG       = 'S'
       TABLES
            VALUE_TAB       = VALUE_TAB
       EXCEPTIONS
            PARAMETER_ERROR = 1.

* Set F4 values for Supply Area
*AT SELECTION-SCREEN ON VALUE-REQUEST FOR S_PRVBE-LOW.
*  DATA : BEGIN OF VALUE_TAB OCCURS 0,
*         PRVBE  LIKE MARC-VSPVB,
*         DESC LIKE PVBE-PVBTX,
*         END OF VALUE_TAB.
*
*  SELECT DISTINCT A~VSPVB PVBTX
*     INTO TABLE VALUE_TAB
*     FROM MARC AS A
*     INNER JOIN PVBE AS B
*     ON A~VSPVB = B~PRVBE
*     WHERE A~WERKS = 'P001'
*     and A~PRVBE <> ' '.
*
*  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
*       EXPORTING
*            RETFIELD        = 'PRVBE'
*            DYNPPROG        = w_REPID
*            DYNPNR          = w_DYNNR
*            DYNPROFIELD     = 'PRVBE'
*            WINDOW_TITLE    = 'Supply Area'
*            VALUE_ORG       = 'S'
*       TABLES
*            VALUE_TAB       = VALUE_TAB
*       EXCEPTIONS
*            PARAMETER_ERROR = 1.

*----------------------------------------------------------------------
START-OF-SELECTION.
*----------------------------------------------------------------------

  RANGES R_LIFNR FOR EKKO-LIFNR.

  R_LIFNR = 'IEQ'.
  R_LIFNR-LOW = P_LIFNR.
  APPEND R_LIFNR.

  SUBMIT ZMMR_PARTS_SHORTAGE_DISPLAY
      WITH S_MATNR IN S_MATNR
      WITH S_MTART IN S_MTART
      WITH S_MATKL IN S_MATKL
      WITH S_DISPO IN S_DISPO
      WITH S_LGPRO IN S_LGPRO
      WITH S_PRVBE IN S_PRVBE
      WITH S_SORTF IN S_SORTF
      WITH S_LIFNR IN R_LIFNR
      WITH PC_ALL = PC_ALL
      WITH PC_RED = PC_RED
      WITH PC_YEL = PC_YEL
      WITH PC_GRE = PC_GRE
      WITH P_RED1 = P_RED1
      WITH P_YEL1 = P_YEL1
      WITH P_GRE1 = P_GRE1
      WITH P_TOPB = P_TOPB
      WITH P_TOPV = P_TOPV
      WITH P_LESB = P_LESB
      WITH P_LESV = P_LESV
      WITH P_GRTB = P_GRTB
      WITH P_GRTV = P_GRTV
      with P_INTRV = P_INTRV.

*&---------------------------------------------------------------------*
*&      Form  init_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INIT_DATA.
  W_REPID = SY-REPID.
  W_DYNNR = SY-DYNNR.
  SELECT SINGLE * FROM FDKUSER  WHERE  XUBNAME EQ  SY-UNAME.
  IF SY-SUBRC EQ 0.
    LOOP AT SCREEN.
      IF SCREEN-NAME = 'P_LIFNR'.
        SCREEN-INPUT = 0.
        MODIFY SCREEN.
        EXIT.
      ENDIF.
    ENDLOOP.
    P_LIFNR = FDKUSER-ACCOUNT_FROM.
  ELSE.
    MESSAGE I000 WITH 'Caution:HMMA internal use'.
  ENDIF.

ENDFORM.                    " init_data
