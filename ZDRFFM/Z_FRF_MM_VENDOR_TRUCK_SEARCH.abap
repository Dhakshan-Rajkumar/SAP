FUNCTION Z_FRF_MM_VENDOR_TRUCK_SEARCH .
*"----------------------------------------------------------------------
*"*"Local interface:
*"  IMPORTING
*"     VALUE(I_LIFEX) LIKE  LIKP-LIFEX
*"     VALUE(I_LIFNR) LIKE  LIKP-LIFNR
*"  EXPORTING
*"     VALUE(E_MESS) TYPE  BAPI_MSG
*"     VALUE(ZRESULT) TYPE  ZRESULT
*"  TABLES
*"      T_VENDOR_LIST STRUCTURE  ZSRF_VENDOR_SE
*"----------------------------------------------------------------------
  CHECK NOT I_LIFEX IS INITIAL.
  CHECK NOT I_LIFNR IS INITIAL.

  DATA: BEGIN OF LT_LIKP OCCURS 0,
          LIFNR TYPE LIKP-LIFNR,
          VBELN TYPE LIKP-VBELN,
        END OF LT_LIKP.
  DATA: BEGIN OF LT_LIPS OCCURS 0,
         VBELN LIKE LIPS-VBELN,  "Inbound Delivery
         KDMAT LIKE LIPS-KDMAT,  "Material belonging to the customer
        END OF LT_LIPS.
  DATA: L_LINE1 TYPE I,
        L_LINE2 TYPE I.

  DATA: BEGIN OF LT_VENDOR OCCURS 0,
          VBELN TYPE ZSRF_VENDOR_SE-VBELN,
          LFDAT TYPE ZSRF_VENDOR_SE-LFDAT,
          LFUHR TYPE LIKP-LFUHR,
          WBSTK TYPE ZSRF_VENDOR_SE-WBSTK,
          KOSTK TYPE ZSRF_VENDOR_SE-KOSTK,
        END OF LT_VENDOR.

*  SELECT A~VBELN
*         A~LFDAT
*         A~LFUHR
*         B~WBSTK
*         B~KOSTK
*    INTO TABLE LT_VENDOR
*    FROM LIKP AS A INNER JOIN VBUK AS B
*                   ON  B~VBELN = A~VBELN
*                   AND B~WBSTK = 'A'
*    WHERE A~VERUR EQ I_LIFEX
*    AND   A~LIFNR EQ I_LIFNR
*    AND   B~KOSTK IN ('A', ' ').

  SELECT A~VBELN
        A~LFDAT
        A~LFUHR
        B~WBSTK
        B~KOSTK
   INTO TABLE LT_VENDOR
   FROM LIKP AS A INNER JOIN VBUK AS B
                  ON  A~VBELN = B~VBELN
   WHERE  A~LIFNR EQ I_LIFNR
   AND    A~VERUR EQ I_LIFEX
   AND    B~WBSTK = 'A'
   AND    B~KOSTK IN ('A', ' ').

  IF SY-SUBRC EQ 0.
    SORT LT_VENDOR BY VBELN.
    DELETE ADJACENT DUPLICATES FROM LT_VENDOR
                               COMPARING VBELN.
    SELECT VBELN
       KDMAT
     FROM LIPS
     INTO TABLE LT_LIPS
     FOR ALL ENTRIES IN LT_VENDOR
     WHERE VBELN EQ LT_VENDOR-VBELN.
    IF SY-SUBRC EQ 0.
      DELETE ADJACENT DUPLICATES FROM LT_LIPS COMPARING VBELN KDMAT.
    ENDIF.
    LOOP AT LT_VENDOR.
*      LA_UNIT = T_VENDOR_LIST.
      CLEAR L_LINE1.
      LOOP AT LT_LIPS WHERE VBELN EQ LT_VENDOR-VBELN.
        L_LINE1 = L_LINE1 + 1.
      ENDLOOP.
      IF L_LINE1 NE 1.
*        P_CHECK  = 'X'.
*        L_LINE2 = L_LINE2 + 1.
        WA_MESSA = TEXT-M21.
*        WA_EPOSITION = 'UNIT LOAD ERROR'.
*        CALL FUNCTION 'Z_FRF_MM_DELIVERY_ERROR'
*             EXPORTING
*                  I_VBELN     = LT_VENDOR-VBELN
*                  I_MESSA     = WA_MESSA
*                  I_EPOSITION = WA_EPOSITION.
        LOOP AT LT_LIPS WHERE VBELN EQ LT_VENDOR-VBELN.
          MOVE-CORRESPONDING LT_VENDOR TO T_VENDOR_LIST.
          T_VENDOR_LIST-KDMAT = LT_LIPS-KDMAT.

          CONCATENATE LT_VENDOR-VBELN WA_MESSA INTO T_VENDOR_LIST-TEXT.
*          WRITE: L_LINE2 TO T_VENDOR_LIST-ERCOU LEFT-JUSTIFIED.
*          T_VENDOR_LIST-TEXT  = WA_MESSA.
          T_VENDOR_LIST-ERCOU = 'X'.


          APPEND T_VENDOR_LIST.
        ENDLOOP.
      ELSE.
        MOVE-CORRESPONDING LT_VENDOR TO T_VENDOR_LIST.
        T_VENDOR_LIST-KDMAT = LT_LIPS-KDMAT.
        APPEND T_VENDOR_LIST.
      ENDIF.
      CLEAR: T_VENDOR_LIST, LT_LIPS, LT_VENDOR.
    ENDLOOP.
    SORT T_VENDOR_LIST BY VBELN.
    IF T_VENDOR_LIST[] IS INITIAL.
      E_MESS  = TEXT-M01.
      ZRESULT = TEXT-M02.
    ELSE.
      E_MESS  = TEXT-M03.
      ZRESULT = TEXT-M04.
    ENDIF.
  ELSE.
    E_MESS  = TEXT-M01.
    ZRESULT = TEXT-M02.
  ENDIF.

ENDFUNCTION.
