************************************************************************
* Program Name      : ZISD05U_ACM_UPLOAD_BG
* Author            : jun ho choi
* Creation Date     : 2003.07.08.
* Specifications By : jun ho choi
* Pattern           : 5-1
* Development Request No : UD1K904910
* Addl Documentation:
* Description       : Uploading ACM files and storage within SAP
*                          Costum Tables.

*
* Modification Logs
* Date       Developer    RequestNo    Description
*
* 08/24/2006 Haseeb Mohammad UD1K921865 Helpdesk#68FB666239 *****
* Modified to consider "JJ" and "AA" in the approved quantity.***
************************************************************************
REPORT ZISD05U_ACM_UPLOAD NO STANDARD PAGE HEADING
                          MESSAGE-ID ZMSD.


*
TABLES : ZTSD_ACM_H,
         ZTSD_ACM_I,
         ZTSD_ACL_L,
         ZTSD_VIN_CONV,
         CABN,
         AUSP,
         KNVV.


*
DATA : BEGIN OF IT_UPFILE OCCURS 0,
       RECORD(431),
       END OF IT_UPFILE.

DATA : BEGIN OF IT_ACM_H OCCURS 0.
       INCLUDE STRUCTURE ZTSD_ACM_H.
DATA : END OF IT_ACM_H.

DATA : BEGIN OF IT_ACM_I OCCURS 0.
       INCLUDE STRUCTURE ZTSD_ACM_I.
DATA : END OF IT_ACM_I.

DATA : BEGIN OF IT_ACL_L OCCURS 0.
       INCLUDE STRUCTURE ZTSD_ACL_L.
DATA : END OF IT_ACL_L.

DATA : BEGIN OF IT_VM OCCURS 0,
       ZVIN  LIKE IT_ACM_H-ZVIN,
       ZSCOD LIKE IT_ACM_H-ZSCOD,
       END OF IT_VM.

DATA : W_ACLN LIKE ZTSD_ACM_H-ZACLN,
       W_CDST LIKE ZTSD_aCM_H-ZCDST,
       W_CDLR LIKE ZTSD_aCM_H-ZCDLR,
       W_CSER LIKE ZTSD_aCM_H-ZCSER.

DATA : W_CNT TYPE I,
       W_EXIT(1),
       W_N_8(8) TYPE N.


*
DATA : VARIANT LIKE INDX-SRTFD VALUE 'ISD05_01'.

DATA : BEGIN OF IT_LIST OCCURS 0,
       FILE LIKE RLGRAP-FILENAME,
       END OF IT_LIST.


*
START-OF-SELECTION.
  PERFORM UPLOAD_FILE.
  PERFORM STORAGE_ACM_TABLES.
  PERFORM MODIFY_ACM_TABLE.


*
END-OF-SELECTION.


*&---------------------------------------------------------------------*
*&      Form  UPLOAD_FILE
*&---------------------------------------------------------------------*
FORM UPLOAD_FILE.
  DATA : DSN(30).

  IMPORT IT_LIST FROM DATABASE INDX(ZS) ID VARIANT.

  READ TABLE IT_LIST INDEX 1.

  DSN = IT_LIST-FILE.

  OPEN DATASET DSN IN TEXT MODE FOR INPUT.

  DO.
    READ DATASET DSN INTO IT_UPFILE-RECORD.
    IF SY-SUBRC = 0.
      APPEND IT_UPFILE.
    ELSE.
*      IF SY-SUBRC = 4.
*        WRITE:/ IT_UPFILE-RECORD.
        EXIT.
*      ENDIF.
    ENDIF.
  ENDDO.

  CLOSE DATASET DSN.

  IF SY-SUBRC NE 0.
    MESSAGE I000 WITH TEXT-M02.
    STOP.
  ENDIF.
ENDFORM.                    " UPLOAD_FILE
*&---------------------------------------------------------------------*
*&      Form  STORAGE_ACM_TABLES
*&---------------------------------------------------------------------*
FORM STORAGE_ACM_TABLES.
  DESCRIBE TABLE IT_UPFILE LINES W_CNT.
  IF W_CNT = 0.
    MESSAGE I000 WITH TEXT-M03.
    STOP.
  ENDIF.

  REFRESH : IT_ACM_H, IT_ACM_I, IT_ACL_L.
  CLEAR   : IT_ACM_H, IT_ACM_I, IT_ACL_L.

  LOOP AT IT_UPFILE.
*   Warranty, Campaign For PC Format
    CASE IT_UPFILE-RECORD+38(1). "CLAIM TYPE
      WHEN 'C'.
        PERFORM PROCESS_CP.
      WHEN OTHERS.
        PERFORM PROCESS_WP.
    ENDCASE.
  ENDLOOP.

  PERFORM MODIFY_IT.
ENDFORM.                    " STORAGE_ACM_TABLES
*&---------------------------------------------------------------------*
*&      Form  PROCESS_WP
*&---------------------------------------------------------------------*
FORM PROCESS_WP. "HEADER & DETAIL
* HEADER
  IF W_ACLN <> IT_UPFILE-RECORD+14(7) OR
     W_CDST <> IT_UPFILE-RECORD+21(5) OR
     W_CDLR <> IT_UPFILE-RECORD+26(5) OR
     W_CSER <> IT_UPFILE-RECORD+31(6).

  IT_ACM_H-ZCSTS = IT_UPFILE-RECORD+12(2).   "ACM STATUS
  IT_ACM_H-ZACLN = IT_UPFILE-RECORD+14(7).   "ACL NUMBER
  IT_ACM_H-ZCDST = IT_UPFILE-RECORD+21(5).   "DISTRIBUTOR CODE

  IF IT_UPFILE-RECORD+21(3) = 'B28'.   "DISTRIBUTOR CODE
    SELECT SINGLE *
           FROM KNVV
          WHERE KUNNR EQ IT_UPFILE-RECORD+21(5)
          AND   VKORG EQ 'D100'
          AND   VTWEG EQ '40'
          AND   SPART EQ '99'.
  ELSE.
    SELECT SINGLE *
           FROM KNVV
          WHERE KUNNR EQ IT_UPFILE-RECORD+21(5)
          AND   VKORG EQ 'E100'
          AND   VTWEG EQ '40'
          AND   SPART EQ '99'.
  ENDIF.

  IT_ACM_H-ZPYCR = KNVV-WAERS.               "PAYMENT CURRENCY
  IT_ACM_H-ZCDLR = IT_UPFILE-RECORD+26(5).   "DEALER CODE
  IT_ACM_H-ZCSER = IT_UPFILE-RECORD+31(6).   "SERIAL NUMBER
  IT_ACM_H-ZRSFG = IT_UPFILE-RECORD+37(1).   "PROCESSING FLAG
  IT_ACM_H-ZCTYP = IT_UPFILE-RECORD+38(1).   "CLAIM TYPE
  IT_ACM_H-ZVIN  = IT_UPFILE-RECORD+39(17).  "VEHICLE NUMBER
**
  SELECT SINGLE *
         FROM CABN
        WHERE ATNAM = 'P_VIN'.
  SELECT SINGLE *
         FROM AUSP
        WHERE ATINN EQ CABN-ATINN
        AND   ATWRT EQ IT_ACM_H-ZVIN.

  SELECT SINGLE *
         FROM CABN
        WHERE ATNAM = 'P_RP18_SHOP_DATE'.
  SELECT SINGLE *
         FROM AUSP
        WHERE OBJEK EQ AUSP-OBJEK
        AND   ATINN EQ CABN-ATINN.

  W_N_8 = AUSP-ATFLV.
  IT_ACM_H-ZPRDT = W_N_8.
**
  IT_ACM_H-ZVSFG = IT_UPFILE-RECORD+56(1).   "VISITING OWNER
  IF IT_UPFILE-RECORD+57(8) = '99999999'.
    IT_ACM_H-ZDLVY = '19000101'.             "DELIVERY DATE
  ELSE.
    IT_ACM_H-ZDLVY = IT_UPFILE-RECORD+57(8). "DELIVERY DATE
  ENDIF.
  IT_ACM_H-ZRPDT = IT_UPFILE-RECORD+65(8).   "REPAIR DATE
  IT_ACM_H-ZODRD = IT_UPFILE-RECORD+73(6).   "ODOMETER
  IT_ACM_H-ZRONM = IT_UPFILE-RECORD+79(10).  "REPAIR ORDER NUMBER
  IT_ACM_H-ZCPTN = IT_UPFILE-RECORD+97(15).  "CAUSAL PART NUMBER
  IT_ACM_H-ZNATR = IT_UPFILE-RECORD+127(3).  "NATURE CODE
  IT_ACM_H-ZCAUS = IT_UPFILE-RECORD+130(3).  "CAUSE CODE
  IT_ACM_H-ZPWT1 = IT_UPFILE-RECORD+133(1).  "PWA TYPE CODE - 1
  IT_ACM_H-ZPWT2 = IT_UPFILE-RECORD+134(1).  "PWA TYPE CODE - 2
  IT_ACM_H-ZPWNO = IT_UPFILE-RECORD+135(12). "PWA NUMBER
  IT_ACM_H-ZSBLA = IT_UPFILE-RECORD+147(2).  "SUBLET TYPE CODE - 1
  IT_ACM_H-ZSBLB = IT_UPFILE-RECORD+149(2).  "SUBLET TYPE CODE - 2
  IT_ACM_H-ZDESC = IT_UPFILE-RECORD+168(30). "CONDITION DECSRIPTION

  IF IT_UPFILE-RECORD+198(2) = '01'.  "LINE OF CLAIM
  IT_ACM_H-ZPCAU = IT_UPFILE-RECORD+257(3).  "PAINT CAUSE CODE

  IT_ACM_H-ZSBSS = IT_UPFILE-RECORD+288(7).  "SUBLET AMOUNT - SUBMITTED
  IT_ACM_H-ZSBSS = IT_ACM_H-ZSBSS / 100. "DECIMALS 2
  IT_ACM_H-ZRMSS = IT_UPFILE-RECORD+295(7).  "SUBLET AMOUNT - APPROVED
  IT_ACM_H-ZRMSS = IT_ACM_H-ZRMSS / 100. "DECIMALS 2
  ENDIF.

  IT_ACM_H-ZPIDT = IT_UPFILE-RECORD+302(8).  "PREVIOUS R/O DATE
  IT_ACM_H-ZPODR = IT_UPFILE-RECORD+310(6).  "PREVIOUS ODOMETER
  IT_ACM_H-ZPRON = IT_UPFILE-RECORD+316(10). "PREVIOUS R/O NUMBER
  IT_ACM_H-ZADJH = IT_UPFILE-RECORD+326(45). "ERROR MESSAGE - HEADER

  APPEND IT_ACM_H. CLEAR IT_ACM_H.

  W_ACLN = IT_UPFILE-RECORD+14(7).
  W_CDST = IT_UPFILE-RECORD+21(5).
  W_CDLR = IT_UPFILE-RECORD+26(5).
  W_CSER = IT_UPFILE-RECORD+31(6).

  ENDIF.

* DETAIL
  IT_ACM_I-ZACLN = IT_UPFILE-RECORD+14(7).   "ACL NUMBER
  IT_ACM_I-ZCDST = IT_UPFILE-RECORD+21(5).   "DISTRIBUTOR CODE

  IF IT_UPFILE-RECORD+21(3) = 'B28'.   "DISTRIBUTOR CODE
    SELECT SINGLE *
           FROM KNVV
          WHERE KUNNR EQ IT_UPFILE-RECORD+21(5)
          AND   VKORG EQ 'D100'
          AND   VTWEG EQ '40'
          AND   SPART EQ '99'.
  ELSE.
    SELECT SINGLE *
           FROM KNVV
          WHERE KUNNR EQ IT_UPFILE-RECORD+21(5)
          AND   VKORG EQ 'E100'
          AND   VTWEG EQ '40'
          AND   SPART EQ '99'.
  ENDIF.

  IT_ACM_I-ZPYCR = KNVV-WAERS.               "PAYMENT CURRENCY
  IT_ACM_I-ZCDLR = IT_UPFILE-RECORD+26(5).   "DEALER CODE
  IT_ACM_I-ZCSER = IT_UPFILE-RECORD+31(6).   "SERIAL NUMBER
  IT_ACM_I-ZLINE = IT_UPFILE-RECORD+198(2).  "LINE OF CLAIM
  IT_ACM_I-ZRPPN = IT_UPFILE-RECORD+200(15). "RPLCMNT. PART NUMBER
  IT_ACM_I-ZSBPQ = IT_UPFILE-RECORD+215(2).  "RPLCMNT. PART QUANTITY-S
  IT_ACM_I-ZRMPQ = IT_UPFILE-RECORD+217(2).  "RPLCMNT. PART QUANTITY-A
  IT_ACM_I-ZSBPU = IT_UPFILE-RECORD+219(7).  "RPLCMNT. PART UNIT PRICE-S
  IT_ACM_I-ZSBPU = IT_ACM_I-ZSBPU / 100. "DECIMALS 2
  IT_ACM_I-ZRMPU = IT_UPFILE-RECORD+226(7).  "RPLCMNT. PART UNIT PRICE-A
  IT_ACM_I-ZRMPU = IT_ACM_I-ZRMPU / 100. "DECIMALS 2
  IT_ACM_I-ZRMUP = IT_UPFILE-RECORD+233(3).  "PART MARK UP
  IT_ACM_I-ZOPER = IT_UPFILE-RECORD+236(8).  "LABOR OPERATION CODE
  IT_ACM_I-ZSBLQ = IT_UPFILE-RECORD+244(1).  "LABOR OPERATION QUANTITY-S
  IT_ACM_I-ZRMLQ = IT_UPFILE-RECORD+245(1).  "LABOR OPERATION QUANTITY-A
  IT_ACM_I-ZSBLT = IT_UPFILE-RECORD+246(3).  "LABOR OPERATION HOUR-SUBM
  IT_ACM_I-ZRMLT = IT_UPFILE-RECORD+249(3).  "LABOR OPERATION HOUR-APPR
  IT_ACM_I-ZLRAT = IT_UPFILE-RECORD+252(5).  "LABOR RATE
  IT_ACM_I-ZPCAU = IT_UPFILE-RECORD+257(3).  "PAINT CAUSE CODE
  IT_ACM_I-ZSBPP = IT_UPFILE-RECORD+260(7).  "PART AMOUNT - SUBMITTED
  IT_ACM_I-ZSBPP = IT_ACM_I-ZSBPP / 100. "DECIMALS 2
  IT_ACM_I-ZRMPP = IT_UPFILE-RECORD+267(7).  "PART AMOUNT - APPROVED
  IT_ACM_I-ZRMPP = IT_ACM_I-ZRMPP / 100. "DECIMALS 2
  IT_ACM_I-ZSBLL = IT_UPFILE-RECORD+274(7).  "LABOR AMOUNT - SUBMITTED
  IT_ACM_I-ZSBLL = IT_ACM_I-ZSBLL / 100. "DECIMALS 2
  IT_ACM_I-ZRMLL = IT_UPFILE-RECORD+281(7).  "LABOR AMOUNT - APPROVED
  IT_ACM_I-ZRMLL = IT_ACM_I-ZRMLL / 100. "DECIMALS 2
  IT_ACM_I-ZADJD = IT_UPFILE-RECORD+371(30). "ERROR MESSAGE - DETAIL

  APPEND IT_ACM_I. CLEAR IT_ACM_I.
ENDFORM.                    " PROCESS_WP
*&---------------------------------------------------------------------*
*&      Form  PROCESS_CP
*&---------------------------------------------------------------------*
FORM PROCESS_CP. "HEADER
  IT_ACM_H-ZCSTS = IT_UPFILE-RECORD+12(2).   "ACM STATUS
  IT_ACM_H-ZACLN = IT_UPFILE-RECORD+14(7).   "ACL NUMBER
  IT_ACM_H-ZCDST = IT_UPFILE-RECORD+21(5).   "DISTRIBUTOR CODE

  IF IT_UPFILE-RECORD+21(3) = 'B28'.   "DISTRIBUTOR CODE
    SELECT SINGLE *
           FROM KNVV
          WHERE KUNNR EQ IT_UPFILE-RECORD+21(5)
          AND   VKORG EQ 'D100'
          AND   VTWEG EQ '40'
          AND   SPART EQ '99'.
  ELSE.
    SELECT SINGLE *
           FROM KNVV
          WHERE KUNNR EQ IT_UPFILE-RECORD+21(5)
          AND   VKORG EQ 'E100'
          AND   VTWEG EQ '40'
          AND   SPART EQ '99'.
  ENDIF.

  IT_ACM_H-ZPYCR = KNVV-WAERS.               "PAYMENT CURRENCY
  IT_ACM_H-ZCDLR = IT_UPFILE-RECORD+26(5).   "DEALER CODE
  IT_ACM_H-ZCSER = IT_UPFILE-RECORD+31(6).   "SERIAL NUMBER
  IT_ACM_H-ZRSFG = IT_UPFILE-RECORD+37(1).   "PROCESSING FLAG
  IT_ACM_H-ZCTYP = IT_UPFILE-RECORD+38(1).   "CLAIM TYPE
  IT_ACM_H-ZCSEQ = IT_UPFILE-RECORD+39(2).   "LINE NUMBER
  IT_ACM_H-ZVIN  = IT_UPFILE-RECORD+41(17).  "VEHICLE NUMBER
**
  SELECT SINGLE *
         FROM CABN
        WHERE ATNAM = 'P_VIN'.
  SELECT SINGLE *
         FROM AUSP
        WHERE ATINN EQ CABN-ATINN
        AND   ATWRT EQ IT_ACM_H-ZVIN.

  SELECT SINGLE *
         FROM CABN
        WHERE ATNAM = 'P_RP18_SHOP_DATE'.
  SELECT SINGLE *
         FROM AUSP
        WHERE OBJEK EQ AUSP-OBJEK
        AND   ATINN EQ CABN-ATINN.

  W_N_8 = AUSP-ATFLV.
  IT_ACM_H-ZPRDT = W_N_8.
**
  IT_ACM_H-ZVSFG = IT_UPFILE-RECORD+58(1).   "VISITING OWNER
  IF IT_UPFILE-RECORD+59(8) = '99999999'.
    IT_ACM_H-ZDLVY = '19000101'.             "DELIVERY DATE
  ELSE.
    IT_ACM_H-ZDLVY = IT_UPFILE-RECORD+59(8). "DELIVERY DATE
  ENDIF.
  IT_ACM_H-ZRPDT = IT_UPFILE-RECORD+67(8).   "REPAIR DATE
  IT_ACM_H-ZODRD = IT_UPFILE-RECORD+75(6).   "ODOMETER
  IT_ACM_H-ZCPIS = IT_UPFILE-RECORD+81(6).   "CAMPAIGN ISSUE NUMBER+0(6)
  IT_ACM_H-ZMNOP = IT_UPFILE-RECORD+81(8).   "CAMPAIGN ISSUE NUMBER+0(8)
  IT_ACM_H-ZSBPP = IT_UPFILE-RECORD+89(7).   "PART AMOUNT - SUBMITTED
  IT_ACM_H-ZSBPP = IT_ACM_H-ZSBPP / 100. "DECIMALS 2
  IT_ACM_H-ZRMPP = IT_UPFILE-RECORD+96(7).   "PART AMOUNT - APPROVED
  IT_ACM_H-ZRMPP = IT_ACM_H-ZRMPP / 100. "DECIMALS 2
  IT_ACM_H-ZSBLL = IT_UPFILE-RECORD+103(7).  "LABOR AMOUNT - SUBMITTED
  IT_ACM_H-ZSBLL = IT_ACM_H-ZSBLL / 100. "DECIMALS 2
  IT_ACM_H-ZRMLL = IT_UPFILE-RECORD+110(7).  "LABOR AMOUNT - APPROVED
  IT_ACM_H-ZRMLL = IT_ACM_H-ZRMLL / 100. "DECIMALS 2
  IT_ACM_H-ZSBSS = IT_UPFILE-RECORD+117(7).  "SUBLET AMOUNT - SUBMITTED
  IT_ACM_H-ZSBSS = IT_ACM_H-ZSBSS / 100. "DECIMALS 2
  IT_ACM_H-ZRMSS = IT_UPFILE-RECORD+124(7).  "SUBLET AMOUNT - APPROVED
  IT_ACM_H-ZRMSS = IT_ACM_H-ZRMSS / 100. "DECIMALS 2
  IT_ACM_H-ZADJH = IT_UPFILE-RECORD+231(45). "ERROR MESSAGE

  APPEND IT_ACM_H. CLEAR IT_ACM_H.
ENDFORM.                    " PROCESS_CP
*&---------------------------------------------------------------------*
*&      Form  MODIFY_IT
*&---------------------------------------------------------------------*
FORM MODIFY_IT.
  DATA : IT_ACM_H_IDX LIKE SY-TABIX,
         IT_ACL_L_IDX LIKE SY-TABIX.

* CALCULATE AND ADD UP THE LABOR AND PART AMOUNT
  LOOP AT IT_ACM_H.
    CHECK IT_ACM_H-ZCTYP <> 'C'.
    IT_ACM_H_IDX = SY-TABIX.

    LOOP AT IT_ACM_I WHERE ZACLN EQ IT_ACM_H-ZACLN
                     AND   ZCDST EQ IT_ACM_H-ZCDST
                     AND   ZCDLR EQ IT_ACM_H-ZCDLR
                     AND   ZCSER EQ IT_ACM_H-ZCSER.
      IT_ACM_H-ZSBPP = IT_ACM_H-ZSBPP + IT_ACM_I-ZSBPP.
      IT_ACM_H-ZRMPP = IT_ACM_H-ZRMPP + IT_ACM_I-ZRMPP.
      IT_ACM_H-ZSBLL = IT_ACM_H-ZSBLL + IT_ACM_I-ZSBLL.
      IT_ACM_H-ZRMLL = IT_ACM_H-ZRMLL + IT_ACM_I-ZRMLL.
    ENDLOOP.

    MODIFY IT_ACM_H INDEX IT_ACM_H_IDX.
  ENDLOOP.

* DETERMINE THE VEHICLE MODEL CODE USING VIN
  PERFORM MAKE_VM.

  LOOP AT IT_ACM_H.
    IT_ACM_H_IDX = SY-TABIX.

    IF IT_ACM_H-ZVIN IS INITIAL.
      SELECT SINGLE
             *
             FROM ZTSD_VIN_CONV
            WHERE ZVIN EQ 'DUMMY'.

      IF SY-SUBRC = 0.
        IT_ACM_H-ZSCOD = ZTSD_VIN_CONV-ZSCOD.
        IT_ACM_H-ZMODL = ZTSD_VIN_CONV-ZMODL.

        MODIFY IT_ACM_H INDEX IT_ACM_H_IDX.
      ENDIF.
    ELSE.
      READ TABLE IT_VM WITH KEY ZVIN = IT_ACM_H-ZVIN.

      IF SY-SUBRC = 0.
      SELECT *
             FROM ZTSD_VIN_CONV
            WHERE ZSCOD EQ IT_VM-ZSCOD.

        TRANSLATE ZTSD_VIN_CONV-ZVIN USING '*+'.

        IF IT_ACM_H-ZVIN CP ZTSD_VIN_CONV-ZVIN.
          IT_ACM_H-ZSCOD = ZTSD_VIN_CONV-ZSCOD.
          IT_ACM_H-ZMODL = ZTSD_VIN_CONV-ZMODL.

          MODIFY IT_ACM_H INDEX IT_ACM_H_IDX.
          EXIT.
        ENDIF.
      ENDSELECT.
      ENDIF.
    ENDIF.

    IF IT_ACM_H-ZMODL IS INITIAL AND
       IT_ACM_H-ZCSTS EQ 'AA'.
      MESSAGE I000 WITH TEXT-M04
                        '('
                        IT_ACM_H-ZVIN
                        ')'.
      W_EXIT = 'Y'.
    ENDIF.
  ENDLOOP.
  IF W_EXIT = 'Y'.
    EXIT.
  ENDIF.

* MAIN OPERATION CODE
  LOOP AT IT_ACM_H.
    CHECK IT_ACM_H-ZCTYP <> 'C'.
    IT_ACM_H_IDX = SY-TABIX.

    READ TABLE IT_ACM_I WITH KEY ZACLN = IT_ACM_H-ZACLN
                                 ZCDST = IT_ACM_H-ZCDST
                                 ZCDLR = IT_ACM_H-ZCDLR
                                 ZCSER = IT_ACM_H-ZCSER
                                 ZLINE = '01'.
    IF SY-SUBRC = 0.
      IT_ACM_H-ZMNOP = IT_ACM_I-ZOPER.
    ENDIF.

    MODIFY IT_ACM_H INDEX IT_ACM_H_IDX.
  ENDLOOP.

* DETERMINE SECOND CLAIM FLAG
  LOOP AT IT_ACM_H.
    CHECK IT_ACM_H-ZCTYP <> 'C' AND
          IT_ACM_H-ZCTYP <> 'S' AND
          IT_ACM_H-ZPODR <> '000000'.
    IT_ACM_H_IDX = SY-TABIX.

    IT_ACM_H-ZSCFG = '2'.

    MODIFY IT_ACM_H INDEX IT_ACM_H_IDX.
  ENDLOOP.

* STORE ACL LIST TABLE
  LOOP AT IT_ACM_H.
    IT_ACL_L-ZACLN = IT_ACM_H-ZACLN.
    IT_ACL_L-ZCDST = IT_ACM_H-ZCDST.
    IT_ACL_L-ZPYCR = IT_ACM_H-ZPYCR.
    IF IT_ACM_H-ZCTYP = 'C'.
      IT_ACL_L-ZCTYP = 'C'.
    ELSE.
      IT_ACL_L-ZCTYP = 'W'.
    ENDIF.

    IT_ACL_L-ZACAA = IT_ACL_L-ZACAA
                   + IT_ACM_H-ZRMSS
                   + IT_ACM_H-ZRMPP
                   + IT_ACM_H-ZRMLL.

    COLLECT IT_ACL_L. CLEAR IT_ACL_L.
  ENDLOOP.
  LOOP AT IT_ACL_L.
    IT_ACL_L_IDX = SY-TABIX.
* 08/24/2006 Haseeb Mohammad UD1K921865 Helpdesk#68FB666239 *****
* Modified to consider "JJ" and "AA" in the approved quantity.***

    LOOP AT IT_ACM_H WHERE ZACLN EQ IT_ACL_L-ZACLN
                     AND   ZCDST EQ IT_ACL_L-ZCDST
                     AND   ( ZCSTS EQ 'AA' OR ZCSTS EQ 'JJ').
*UD1K921865
      IT_ACL_L-ZACQT = IT_ACL_L-ZACQT + 1.
    ENDLOOP.

    MODIFY IT_ACL_L INDEX IT_ACL_L_IDX.
  ENDLOOP.
ENDFORM.                    " MODIFY_IT
*&---------------------------------------------------------------------*
*&      Form  MAKE_VM
*&---------------------------------------------------------------------*
FORM MAKE_VM.
  REFRESH IT_VM. CLEAR IT_VM.

  LOOP AT IT_ACM_H.
    IT_VM-ZVIN = IT_ACM_H-ZVIN.

    SELECT SINGLE *
           FROM CABN
          WHERE ATNAM = 'P_VIN'.
    SELECT SINGLE *
           FROM AUSP
          WHERE ATINN EQ CABN-ATINN
          AND   ATWRT EQ IT_ACM_H-ZVIN.

    CHECK SY-SUBRC = 0.
    SELECT SINGLE *
           FROM CABN
          WHERE ATNAM = 'P_MODEL'.
    SELECT SINGLE *
           FROM AUSP
          WHERE OBJEK EQ AUSP-OBJEK
          AND   ATINN EQ CABN-ATINN.

    CHECK SY-SUBRC = 0.
    IT_VM-ZSCOD = AUSP-ATWRT.
    APPEND IT_VM. CLEAR IT_VM.
  ENDLOOP.
ENDFORM.                    " MAKE_VM
*&---------------------------------------------------------------------*
*&      Form  MODIFY_ACM_TABLE
*&---------------------------------------------------------------------*
FORM MODIFY_ACM_TABLE.
  CHECK W_EXIT NE 'Y'.

* CHECK DUPLICATE
  READ TABLE IT_ACL_L INDEX 1.
  SELECT SINGLE *
         FROM ZTSD_ACL_L
        WHERE ZACLN EQ IT_ACM_H-ZACLN
        AND   ZCDST EQ IT_ACM_H-ZCDST.
  IF SY-SUBRC = 0.
    MESSAGE I000 WITH TEXT-M05.
    EXIT.
  ENDIF.

  LOOP AT IT_ACM_H.
    IT_ACM_H-ZERDA = SY-DATUM.
    IT_ACM_H-ERZET = SY-UZEIT.
    IT_ACL_L-ERNAM = SY-UNAME.
    MODIFY IT_ACM_H INDEX SY-TABIX.
  ENDLOOP.

  LOOP AT IT_ACM_I.
    IT_ACM_I-ZERDA = SY-DATUM.
    IT_ACM_I-ERZET = SY-UZEIT.
    IT_ACL_L-ERNAM = SY-UNAME.
    MODIFY IT_ACM_I INDEX SY-TABIX.
  ENDLOOP.

  LOOP AT IT_ACL_L.
    IT_ACL_L-ZERDA = SY-DATUM.
    IT_ACL_L-ERZET = SY-UZEIT.
    IT_ACL_L-ERNAM = SY-UNAME.
    MODIFY IT_ACL_L INDEX SY-TABIX.
  ENDLOOP.

  INSERT ZTSD_ACM_H FROM TABLE IT_ACM_H.
  IF SY-SUBRC = 0.
    IF IT_ACM_H-ZCTYP <> 'C'.
      INSERT ZTSD_ACM_I FROM TABLE IT_ACM_I.
    ENDIF.
    IF SY-SUBRC = 0.
      INSERT ZTSD_ACL_L FROM TABLE IT_ACL_L.
    ENDIF.
  ENDIF.

  IF SY-SUBRC = 0.
    COMMIT WORK.
    MESSAGE I000 WITH TEXT-M07.
    LEAVE SCREEN.
  ELSE.
    ROLLBACK WORK.
    MESSAGE I000 WITH TEXT-M08.
  ENDIF.
ENDFORM.                    " MODIFY_ACM_TABLE
