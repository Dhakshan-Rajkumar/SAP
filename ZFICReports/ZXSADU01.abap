*----------------------------------------------------------------------*
*   INCLUDE ZXSADU01                                                   *
*----------------------------------------------------------------------*
*"  IMPORTING
*"     VALUE(ADDRESS_TYPE) LIKE  SZAD_FIELD-ADDR_TYPE
*"     VALUE(ADRS1_NAME_FIELDS) LIKE  ADRS1_NAME STRUCTURE  ADRS1_NAME
*"     VALUE(ADRS2_NAME_FIELDS) LIKE  ADRS2_NAME STRUCTURE  ADRS2_NAME
*"     VALUE(ADRS3_NAME_FIELDS) LIKE  ADRS3_NAME STRUCTURE  ADRS3_NAME
*"     VALUE(ADRS_POST_FIELDS) LIKE  ADRS_POST STRUCTURE  ADRS_POST
*"     VALUE(ADDRESS_NUMBER) LIKE  ADRC-ADDRNUMBER
*"     VALUE(ADDRESS_HANDLE) LIKE  SZAD_FIELD-HANDLE
*"     VALUE(PERSON_NUMBER) LIKE  ADRP-PERSNUMBER
*"     VALUE(PERSON_HANDLE) LIKE  SZAD_FIELD-HANDLE
*"     VALUE(DESTINATION_COUNTRY_FIELDS) LIKE  T005 STRUCTURE  T005
*"     VALUE(DESTINATION_COUNTRY_TEXT) LIKE  T005T STRUCTURE  T005T
*"     VALUE(SENDER_COUNTRY_FIELDS) LIKE  T005 STRUCTURE  T005
*"     VALUE(RECEIVER_LANGUAGE) LIKE  T002-SPRAS
*"     VALUE(NUMBER_OF_LINES) LIKE  ADRS-ANZZL
*"     VALUE(STREET_HAS_PRIORITY) LIKE  ADRS-WAREN
*"  EXPORTING
*"     VALUE(DATA_CARRIER_LINE) LIKE  SZAD_FIELD-ADDR_DC
*"     VALUE(DATA_CARRIER_LINE_IS_COMPLETE) TYPE  T_BOOL
*"     VALUE(DATA_CARRIER_LINE_0) LIKE  SZAD_FIELD-ADDR_DC
*"     VALUE(SHORT_FORM_LINE) LIKE  SZAD_FIELD-ADDR_SHORT
*"     VALUE(SHORT_FORM_S_LINE) LIKE  SZAD_FIELD-ADDR_SHORT
*"     VALUE(SHORT_FORM_LINE_WO_NAME) LIKE  SZAD_FIELD-ADDR_SHORT
*"  TABLES
*"      ADDRESS_LINES STRUCTURE  ADRS_TAB
*"  CHANGING
*"     VALUE(LINE_PRIORITY) LIKE  SZAD_FIELD-PRIORITY


* ADRS_POST : contain address data
* SM30 : T005A -> Address Key Creation like 900 (must be > 900)
* T-code:OY01  -> Assign key to country setting.
*
*************** BEGIN OF MAIN PROGRAM  (ZXSADU01) **********************

*----------------------------------------------------------------------*
*   Main Program  ZXSADU01
*----------------------------------------------------------------------*

* --------------------------- Local data declarations
DATA: TEXT_LANGUAGE LIKE T002-SPRAS.

* --------------------------- Initializations
CLEAR ADRTAB.
REFRESH ADRTAB.
CLEAR G_SENDER_COUNTRY.
CLEAR G_RECEIVER_LANGUAGE.
CLEAR G_NUMBER_OF_LINES.
CLEAR G_STREET_HAS_PRIORITY.
CLEAR G_PRIORITY.

CLEAR G_IS_DOMESTIC_ADDRESS.

MOVE ADDRESS_TYPE                TO G_ADDRESS_TYPE.
MOVE DESTINATION_COUNTRY_FIELDS  TO T005.
MOVE SENDER_COUNTRY_FIELDS       TO *T005.
MOVE DESTINATION_COUNTRY_TEXT    TO T005T.
* Move other interface parameters to global variables if necessary

IF ADRS_POST_FIELDS-COUNTRY = *T005-LAND1.
  G_IS_DOMESTIC_ADDRESS = C_TRUE.
ELSE.
  G_IS_DOMESTIC_ADDRESS = C_FALSE.
ENDIF.

*                             Receiver language for literals (P.O.Box)
IF RECEIVER_LANGUAGE NE SPACE.
  TEXT_LANGUAGE = RECEIVER_LANGUAGE.
ELSE.
  IF T005-SPRAS NE SPACE.
    TEXT_LANGUAGE = T005-SPRAS.
  ELSE.
    TEXT_LANGUAGE = SY-LANGU.
  ENDIF.
ENDIF.
SET LANGUAGE TEXT_LANGUAGE.

* --------------------------- Branching to the country-specific routines
CASE DESTINATION_COUNTRY_FIELDS-ADDRS.
  WHEN '900'.
    DATA: VALID_POSTAL_CODE LIKE ADRS_POST-POST_CODE1.
    DATA: NAME_LINE LIKE WORK.
    DATA: STREET_LINE LIKE WORK.
    DATA: COUNTRY_LINE LIKE WORK1.
    DATA: CITY_LINE LIKE WORK.

* ---------------------------------- Use street or P.O.BOX ?
   IF STREET_HAS_PRIORITY = C_TRUE AND ADRS_POST_FIELDS-STREET NE SPACE.
      CLEAR: ADRS_POST_FIELDS-PO_BOX,
             ADRS_POST_FIELDS-POST_CODE2,
             ADRS_POST_FIELDS-PO_BOX_LOC.
    ENDIF.
    VALID_POSTAL_CODE = ADRS_POST_FIELDS-POST_CODE1.
    IF ADRS_POST_FIELDS-PO_BOX     NE SPACE AND
       ADRS_POST_FIELDS-PO_BOX_LOC NE SPACE.
      MOVE ADRS_POST_FIELDS-PO_BOX_LOC TO ADRS_POST_FIELDS-CITY1.
    ENDIF.

* -------- Name fields
    IF G_ADDRESS_TYPE = C_NORMAL_ADDRESS.
*          Title, Name1, Name2, Name3, Name4
      PERFORM ADRTAB_APPEND2 USING ADRS1_NAME_FIELDS-TITLE_TEXT 'A'.
      PERFORM ADRTAB_APPEND2 USING ADRS1_NAME_FIELDS-NAME1 '1'.
      PERFORM ADRTAB_APPEND2 USING ADRS1_NAME_FIELDS-NAME2 '2'.
*     PERFORM ADRTAB_APPEND2 USING ADRS1_NAME-NAME3 '3'.
*     PERFORM ADRTAB_APPEND2 USING ADRS1_NAME-NAME4 '4'.
    ELSEIF G_ADDRESS_TYPE = C_PERSONAL_ADDRESS.
*          Title and Name of person
      IF ADRS2_NAME_FIELDS-NAME_PERS <> SPACE.
        NAME_LINE-PART1 = ADRS2_NAME_FIELDS-TITLE_PERS.
        NAME_LINE-PART2 = ADRS2_NAME_FIELDS-NAME_PERS.
        CONDENSE NAME_LINE.
        PERFORM ADRTAB_APPEND2 USING NAME_LINE 'N'.
      ENDIF.
    ELSEIF G_ADDRESS_TYPE = C_COMPANY_PERSON_ADDRESS.
*          Company Name, Title and Name of person, Department
      IF ADRS3_NAME_FIELDS-NAME_PERS <> SPACE.
        NAME_LINE-PART1 = ADRS3_NAME_FIELDS-TITLE_PERS.
        NAME_LINE-PART2 = ADRS3_NAME_FIELDS-NAME_PERS.
        CONDENSE NAME_LINE.
        PERFORM ADRTAB_APPEND2 USING NAME_LINE 'N'.
      ENDIF.
      PERFORM ADRTAB_APPEND2 USING ADRS3_NAME_FIELDS-FUNCTION 'F'.
      PERFORM ADRTAB_APPEND2 USING ADRS3_NAME_FIELDS-DEPARTMENT 'D'.
      PERFORM ADRTAB_APPEND2 USING ADRS3_NAME_FIELDS-TITLE_COMP 'A'.
      PERFORM ADRTAB_APPEND2 USING ADRS3_NAME_FIELDS-NAME1 '1'.
      PERFORM ADRTAB_APPEND2 USING ADRS3_NAME_FIELDS-NAME2 '2'.
*    PERFORM ADRTAB_APPEND2 USING ADRS3_NAME_FIELDS-NAME3 '3'.
*    PERFORM ADRTAB_APPEND2 USING ADRS3_NAME_FIELDS-NAME4 '4'.
    ENDIF.

* -------------------------- Second Part:
*                              Street/P.O. Box, other street fields

    IF ADRS_POST_FIELDS-PO_BOX <> SPACE.
      STREET_LINE-PART1 = 'PO Box '.                        "TEXT-001.
      STREET_LINE-PART2 = ADRS_POST_FIELDS-PO_BOX.
      CONDENSE STREET_LINE.
    ELSEIF ADRS_POST_FIELDS-PO_BOX_NUM <> SPACE.
      STREET_LINE-PART1 = TEXT-001.
    ELSE.
      STREET_LINE-PART1 = ADRS_POST_FIELDS-STREET.
    endif.
    PERFORM ADRTAB_APPEND2 USING STREET_LINE 'S'.


    CITY_LINE = ADRS_POST_FIELDS-CITY1.
    LENG = STRLEN( CITY_LINE ).
    IF CITY_LINE NE SPACE.
      LENG = LENG + 1.
    ENDIF.
    WRITE ADRS_POST_FIELDS-REGION TO CITY_LINE+LENG.
    LENG = STRLEN( CITY_LINE ).
* LENG = LENG + 1.
    WRITE '&&' TO CITY_LINE+LENG.        "Two Spaces preferred
    LENG = LENG + 2.
    WRITE VALID_POSTAL_CODE TO CITY_LINE+LENG.
    CONDENSE CITY_LINE.
    REPLACE '&&' WITH '  ' INTO CITY_LINE.
    LENG = STRLEN( CITY_LINE ).
    IF LENG > 35.
      CITY_LINE = ADRS_POST_FIELDS-CITY1.
      PERFORM ADRTAB_APPEND2 USING CITY_LINE 'O'.
      IF G_IS_DOMESTIC_ADDRESS = C_FALSE.
        COUNTRY_LINE = T005T-LANDX.
        LENG = STRLEN( COUNTRY_LINE ).
*     WRITE ',' TO COUNTRY_LINE+LENG.
*     LENG = LENG + 2.
        LENG = LENG + 1.
        WRITE ADRS_POST_FIELDS-REGION TO COUNTRY_LINE+LENG.
        LENG = STRLEN( COUNTRY_LINE ).
*     LENG = LENG + 1.
        WRITE '&&' TO COUNTRY_LINE+LENG. "Two Spaces preferred
        LENG = LENG + 2.
        WRITE VALID_POSTAL_CODE TO COUNTRY_LINE+LENG.
        CONDENSE COUNTRY_LINE.
        REPLACE '&&' WITH '  ' INTO COUNTRY_LINE.
        PERFORM ADRTAB_APPEND2 USING COUNTRY_LINE 'L'.
      ELSE.
        WRITE ADRS_POST_FIELDS-REGION TO COUNTRY_LINE.
        LENG = STRLEN( COUNTRY_LINE ).
*     LENG = LENG + 1.
        WRITE '&&' TO COUNTRY_LINE+LENG. "Two Spaces preferred
        LENG = LENG + 2.
        WRITE VALID_POSTAL_CODE TO COUNTRY_LINE+LENG.
        CONDENSE COUNTRY_LINE.
        REPLACE '&&' WITH '  ' INTO COUNTRY_LINE.
        PERFORM ADRTAB_APPEND2 USING COUNTRY_LINE 'L'.
      ENDIF.
    ELSE.
      PERFORM ADRTAB_APPEND2 USING CITY_LINE 'O'.
      IF G_IS_DOMESTIC_ADDRESS = C_FALSE.
        PERFORM ADRTAB_APPEND2 USING T005T-LANDX 'L'.
      ENDIF.
    ENDIF.

  WHEN OTHERS.
ENDCASE.

* --------------------------- Copying internal table for export
ADDRESS_LINES[] = ADRTAB[].

*END
