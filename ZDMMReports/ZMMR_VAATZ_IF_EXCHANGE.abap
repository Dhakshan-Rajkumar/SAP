*&---------------------------------------------------------------------*
*& Report  ZMMR_IF_EXCHANGE                                            *
*&                                                                     *
*&---------------------------------------------------------------------*
*&copy from ZMMR_IF_EXCHANGE
*
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  ZMMR_VAATZ_IF_EXCHANGE.

DATA: BEGIN OF IT_RATE OCCURS 0.
        INCLUDE STRUCTURE ZSMM_IF019.
DATA: BEDAT2 LIKE VTBBEWE-DBERVON.
DATA : CONV_DATE(10) TYPE C,
      L_DAY LIKE VTBBEWE-ATAGE.
DATA: END OF IT_RATE.

DATA: T_ZSMM_IF019 LIKE ZSMM_IF019 OCCURS 0 WITH HEADER LINE.
DATA: T_RETURN LIKE BAPIRETURN OCCURS 0 WITH HEADER LINE.

DATA: T_ZSMM_IF023 LIKE ZTMM_IF023 OCCURS 0 WITH HEADER LINE.
DATA: V_ZSEQ LIKE ZTMM_IF023-ZSEQ.
DATA: L_SERNO LIKE ZTMM_IF023-ZSEN.

DATA: L_ZRESULT(1),
      L_MESS(255).

CLEAR : T_ZSMM_IF023, T_ZSMM_IF023[].
CLEAR : V_ZSEQ, L_SERNO.
CLEAR: IT_RATE, T_ZSMM_IF019, T_RETURN.
REFRESH: IT_RATE, T_ZSMM_IF019, T_RETURN.



SELECT * INTO
CORRESPONDING FIELDS OF TABLE IT_RATE
FROM TCURR
WHERE KURST = 'M'
AND TCURR = 'USD'.


IF SY-SUBRC EQ 0.
  LOOP AT IT_RATE.

    IT_RATE-BEDAT = SY-DATUM.
    IT_RATE-ukurs = abs( IT_RATE-ukurs ).
    MODIFY IT_RATE.
    CLEAR IT_RATE.
  ENDLOOP.

  SORT IT_RATE ASCENDING BY FCURR TCURR GDATU.
  DELETE ADJACENT DUPLICATES FROM IT_RATE COMPARING FCURR TCURR.
  DATA : L_LENGTH TYPE I.
  LOOP AT IT_RATE.
    CLEAR L_LENGTH.
    L_LENGTH = STRLEN( IT_RATE-FCURR ).
    IF L_LENGTH < 4.
      MOVE-CORRESPONDING IT_RATE TO T_ZSMM_IF019.
      T_ZSMM_IF019-USD_CURR = 1.

      APPEND T_ZSMM_IF019.

    ENDIF.
    CLEAR IT_RATE.
  ENDLOOP.

  T_ZSMM_IF019-KURST = 'M'.
  T_ZSMM_IF019-FCURR = 'USD'.
  T_ZSMM_IF019-TCURR = 'USD'.
  T_ZSMM_IF019-UKURS = 1.
  T_ZSMM_IF019-BEDAT = SY-DATUM.
  APPEND T_ZSMM_IF019.

  CALL FUNCTION 'ZMM_VAZ_EXCHANGE_RATE_OUTBOUND'
        DESTINATION 'WMHR01'
    IMPORTING
      E_IFRESULT	=  L_ZRESULT
      E_IFFAILMSG   = L_MESS
    TABLES
      T_ZSMM_IF019       = T_ZSMM_IF019
     EXCEPTIONS
     COMMUNICATION_FAILURE = 1
     SYSTEM_FAILURE        = 2.

  IF SY-SUBRC = 0.
    SELECT MAX( ZSEQ ) INTO V_ZSEQ
    FROM ZTMM_IF023.

    IF V_ZSEQ IS INITIAL.
      V_ZSEQ = 1.
    ELSE.
      V_ZSEQ = V_ZSEQ + 1.
    ENDIF.

    READ TABLE T_RETURN.
    LOOP AT T_ZSMM_IF019.
      MOVE-CORRESPONDING T_ZSMM_IF019 TO T_ZSMM_IF023.
      L_SERNO = L_SERNO + 1.
      MOVE: V_ZSEQ           TO T_ZSMM_IF023-ZSEQ,
            L_SERNO          TO T_ZSMM_IF023-ZSEN,
            SY-DATUM         TO T_ZSMM_IF023-ERDAT,
            SY-UZEIT         TO T_ZSMM_IF023-ERZET,
            SY-UNAME         TO T_ZSMM_IF023-ERNAM,
            L_ZRESULT    TO T_ZSMM_IF023-TYPE,
            L_MESS   TO T_ZSMM_IF023-MESSAGE.
      APPEND T_ZSMM_IF023.
    ENDLOOP.
    INSERT ZTMM_IF023 FROM TABLE T_ZSMM_IF023.
    COMMIT WORK AND WAIT.
  ELSE.
    SELECT MAX( ZSEQ ) INTO V_ZSEQ
    FROM ZTMM_IF023.

    IF V_ZSEQ IS INITIAL.
      V_ZSEQ = 1.
    ELSE.
      V_ZSEQ = V_ZSEQ + 1.
    ENDIF.

    LOOP AT T_ZSMM_IF019.
      MOVE-CORRESPONDING T_ZSMM_IF019 TO T_ZSMM_IF023.
      L_SERNO = L_SERNO + 1.
      MOVE: V_ZSEQ           TO T_ZSMM_IF023-ZSEQ,
            L_SERNO          TO T_ZSMM_IF023-ZSEN,
            SY-DATUM         TO T_ZSMM_IF023-ERDAT,
            SY-UZEIT         TO T_ZSMM_IF023-ERZET,
            SY-UNAME         TO T_ZSMM_IF023-ERNAM,
            'E'              TO T_ZSMM_IF023-TYPE,
            'COMMUNICATION FAILURE' TO T_ZSMM_IF023-MESSAGE.
      APPEND T_ZSMM_IF023.
    ENDLOOP.
    INSERT ZTMM_IF023 FROM TABLE T_ZSMM_IF023.
    COMMIT WORK AND WAIT.
  ENDIF.

ENDIF.
