FUNCTION ZPMF_PDA101.
*"----------------------------------------------------------------------
*"*"Local interface:
*"  EXPORTING
*"     VALUE(SUBRC) LIKE  SY-SUBRC
*"  TABLES
*"      T101 STRUCTURE  ZSPM_PDA101
*"      T101R STRUCTURE  ZSPM_PDA101R
*"----------------------------------------------------------------------
 DATA : IT_EKPO LIKE TABLE OF EKPO WITH HEADER LINE.

  DATA : BEGIN OF IT_LIST OCCURS 0,
         EBELN LIKE EKKO-EBELN,
         LIFNR LIKE EKKO-LIFNR,
         END OF IT_LIST.

  RANGES : R_MATNR FOR EKPO-MATNR,
           R_EINDT FOR EKET-EINDT.

  READ TABLE T101 INDEX 1.

  PERFORM CONVERSION_EXIT_MATN1_INPUT USING T101-MATNR T101-MATNR.

  IF NOT T101-MATNR IS INITIAL.
    R_MATNR-SIGN = 'I'.
    R_MATNR-OPTION = 'EQ'.
    R_MATNR-LOW = T101-MATNR.
    APPEND R_MATNR. CLEAR R_MATNR.
  ENDIF.

  IF NOT T101-EINDT IS INITIAL.
    R_EINDT-SIGN = 'I'.
    R_EINDT-OPTION = 'EQ'.
    R_EINDT-LOW = T101-EINDT.
    APPEND R_EINDT. CLEAR R_EINDT.
  ENDIF.


  SELECT I~EBELN
         INTO CORRESPONDING FIELDS OF TABLE IT_EKPO
         FROM EKPO AS I INNER JOIN EKET AS D
         ON   I~EBELN EQ D~EBELN
         AND  I~EBELP EQ D~EBELP
        WHERE I~MATNR IN R_MATNR
        AND   D~EINDT IN R_EINDT
        AND   I~LOEKZ EQ ''
        AND   I~KNTTP EQ ''.

  LOOP AT IT_EKPO.
    MOVE-CORRESPONDING IT_EKPO TO IT_LIST.
    COLLECT IT_LIST. CLEAR IT_LIST.
  ENDLOOP.

  LOOP AT IT_LIST.
    T101R-EBELN = IT_LIST-EBELN.

    PERFORM CONVERSION_EXIT_ALPHA_OUTPUT USING T101R-EBELN T101R-EBELN.

    SELECT SINGLE
           N~NAME1 INTO T101R-NAME1
           FROM EKKO AS H INNER JOIN LFA1 AS N
           ON   H~LIFNR EQ N~LIFNR
          WHERE H~EBELN EQ IT_LIST-EBELN.

    APPEND T101R. CLEAR T101R.
  ENDLOOP.

  DESCRIBE TABLE T101R LINES SY-INDEX.
  IF SY-INDEX = 0.
    SUBRC = 4.
  ELSE.
    SUBRC = 0.
  ENDIF.

  SORT T101R.
ENDFUNCTION.
