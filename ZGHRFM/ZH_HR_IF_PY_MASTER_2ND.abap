FUNCTION ZH_HR_IF_PY_MASTER_2ND.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(IV_BRACD) TYPE  HROBJID
*"     VALUE(IV_BUKRS) TYPE  BUKRS
*"     VALUE(IV_FLAG) TYPE  FLAG OPTIONAL
*"     VALUE(IV_BEGDA) TYPE  BEGDA
*"     VALUE(IV_ENDDA) TYPE  ENDDA
*"  TABLES
*"      ET_HRPY_RGDIR STRUCTURE  ZGHRSHRPY_RGDIR OPTIONAL
*"      ET_PC207 STRUCTURE  ZGHRSPC207 OPTIONAL
*"      ET_ZGHRLT0005 STRUCTURE  ZGHRSS0015 OPTIONAL
*"----------------------------------------------------------------------

  DATA: LV_LNCNT        TYPE ZGHRSPC207-LNCNT.
  DATA: LS_T500L        TYPE T500L.
  DATA: LS_RT             LIKE LINE OF GS_PAY_RESULT-INTER-RT.
  DATA: LS_WPBP       LIKE LINE OF GS_PAY_RESULT-INTER-WPBP.

  DATA: LT_HRPY_RGDIR  LIKE TABLE OF ET_HRPY_RGDIR WITH HEADER LINE.
  DATA: LT_PC207       LIKE TABLE OF ET_PC207 WITH HEADER LINE,
            LS_PC207_TOTAL LIKE ET_PC207.
  DATA: LT_PC207_T      LIKE TABLE OF ET_PC207 WITH HEADER LINE.
  DATA: LT_T512W         TYPE TABLE OF T512W WITH HEADER LINE.
  DATA: LT_T512T          TYPE TABLE OF T512T WITH HEADER LINE.
  DATA: LT_T52DB          TYPE TABLE OF T52DB WITH HEADER LINE.
  DATA: LV_BETRG        TYPE BETRG,
            LV_IDX                TYPE I,
            L_DATUM           TYPE DATUM.

*  DATA: LT_RESULT       TYPE ZGHRY0001,
*            LS_RESULT       TYPE ZGHRSS0017.

  DATA: LS_PC202                TYPE PC202,
            LS_PC207                LIKE ET_PC207,
            LS_PA0001         TYPE PA0001,
            LS_PA0000         TYPE PA0000.

  CLEAR: ET_HRPY_RGDIR[], ET_PC207[].

  CASE IV_FLAG.
    WHEN 'X'.

      SELECT * FROM HRPY_RGDIR AS R
        INTO CORRESPONDING FIELDS OF TABLE LT_HRPY_RGDIR
        WHERE R~FPEND = R~IPEND
          AND PAYDT => IV_BEGDA
          AND PAYDT =< IV_ENDDA.

    WHEN OTHERS.

      SELECT * FROM HRPY_RGDIR AS R
        INTO CORRESPONDING FIELDS OF TABLE LT_HRPY_RGDIR
        WHERE R~FPEND = R~IPEND
          AND FPEND => IV_BEGDA
          AND FPEND =< IV_ENDDA.

**      SELECT * FROM  HRPY_WPBP AS M
**        INNER JOIN HRPY_RGDIR AS R
**          ON  M~PERNR = R~PERNR
**          AND M~SEQNR = R~SEQNR
**        INTO CORRESPONDING FIELDS OF TABLE LT_HRPY_RGDIR
**        WHERE M~BUKRS = IV_BUKRS
**          AND M~STAT2 <> '0'
**          AND M~ENDDA = IV_ENDDA
**          AND R~FPEND = R~IPEND
**          AND R~FPEND => IV_BEGDA
**          AND R~FPEND  =< IV_ENDDA.
  ENDCASE.

  LOOP AT LT_HRPY_RGDIR.

    CASE IV_FLAG.
      WHEN 'X'.
        SELECT  SINGLE ZZCGSJBGRP ZZCGSJIKUN ZZCGSJIKUB ZZCGSAGREE
          FROM PA9883
          INTO  (LT_HRPY_RGDIR-ZZCGSJBGRP, LT_HRPY_RGDIR-ZZCGSJIKUN, LT_HRPY_RGDIR-ZZCGSJIKUB, LT_HRPY_RGDIR-ZZCGSAGREE)
          WHERE PERNR = LT_HRPY_RGDIR-PERNR
            AND  BEGDA <= LT_HRPY_RGDIR-PAYDT
            AND  ENDDA >=   LT_HRPY_RGDIR-PAYDT.

        LT_HRPY_RGDIR-ZDGYM = LT_HRPY_RGDIR-PAYDT.
        L_DATUM = LT_HRPY_RGDIR-PAYDT.

      WHEN OTHERS.
        SELECT  SINGLE ZZCGSJBGRP ZZCGSJIKUN ZZCGSJIKUB ZZCGSAGREE
          FROM PA9883
          INTO  (LT_HRPY_RGDIR-ZZCGSJBGRP, LT_HRPY_RGDIR-ZZCGSJIKUN, LT_HRPY_RGDIR-ZZCGSJIKUB, LT_HRPY_RGDIR-ZZCGSAGREE)
          WHERE PERNR = LT_HRPY_RGDIR-PERNR
            AND  BEGDA <= LT_HRPY_RGDIR-FPEND
            AND  ENDDA >=   LT_HRPY_RGDIR-FPEND.

        LT_HRPY_RGDIR-ZDGYM = LT_HRPY_RGDIR-FPEND.
        L_DATUM = LT_HRPY_RGDIR-FPEND.

    ENDCASE.

*    check ## # ####.
    CLEAR: LS_PA0001,LS_PA0000.

    CALL FUNCTION 'RP_LAST_DAY_OF_MONTHS'
      EXPORTING
        DAY_IN            = L_DATUM
      IMPORTING
        LAST_DAY_OF_MONTH = L_DATUM
      EXCEPTIONS
        DAY_IN_NO_DATE    = 1
        OTHERS            = 2.

    SELECT SINGLE * FROM PA0001
    INTO LS_PA0001
    WHERE PERNR   = LT_HRPY_RGDIR-PERNR
      AND BEGDA  <= L_DATUM
      AND ENDDA  => L_DATUM
      AND BUKRS = IV_BUKRS.

    IF SY-SUBRC NE 0.
      CONTINUE.
    ENDIF.



    SELECT SINGLE * FROM PA0000
    INTO LS_PA0000
    WHERE PERNR   = LT_HRPY_RGDIR-PERNR
      AND BEGDA  <= L_DATUM
      AND ENDDA  => L_DATUM
      AND STAT2 <> '0'.

    IF SY-SUBRC NE 0.
      CONTINUE.
    ENDIF.

    MOVE-CORRESPONDING LT_HRPY_RGDIR TO ET_HRPY_RGDIR.

    IF ET_HRPY_RGDIR-ZZCGSJBGRP IS INITIAL.

*1. [GHRIS] Group decision
*   PERSG = 9  Expatriate(E),
* others  HCN

      IF LS_PA0001-PERSG EQ '9'.
        ET_HRPY_RGDIR-ZZCGSJBGRP = 'E'.
      ELSE.
        ET_HRPY_RGDIR-ZZCGSJBGRP = '1'.
      ENDIF.

    ENDIF.

    APPEND ET_HRPY_RGDIR.

    CLEAR: ET_HRPY_RGDIR, LT_HRPY_RGDIR.
  ENDLOOP.

  IF ET_HRPY_RGDIR[] IS NOT INITIAL .
    PERFORM FILL_BRACD_CODE USING IV_BRACD 3 CHANGING ET_HRPY_RGDIR[].
  ENDIF.

  SELECT SINGLE * INTO LS_T500L FROM T500L WHERE MOLGA = G_MOLGA.

  SELECT * FROM T512W
     INTO TABLE LT_T512W
     WHERE MOLGA = G_MOLGA
       AND ENDDA = '99991231'
       AND BEGDA <= SY-DATUM
       AND AKLAS <> ''.

  SELECT * FROM T52DB
    INTO TABLE LT_T52DB
    WHERE SPRSL = SY-LANGU
      AND MOLGA = G_MOLGA
      AND EVCLS = '20'.

  SORT LT_T52DB BY EVCLV.

  SELECT * FROM T512T
    INTO TABLE LT_T512T
    WHERE SPRSL = 'EN'
      AND MOLGA = G_MOLGA.

  SORT LT_T512T BY LGART.

  LOOP AT ET_HRPY_RGDIR.
    CLEAR : GS_PAY_RESULT.
    CALL FUNCTION 'PYXX_READ_PAYROLL_RESULT'
      EXPORTING
        CLUSTERID                    = LS_T500L-RELID
        EMPLOYEENUMBER               = ET_HRPY_RGDIR-PERNR
        SEQUENCENUMBER               = ET_HRPY_RGDIR-SEQNR
        CHECK_READ_AUTHORITY         = SPACE
        READ_ONLY_INTERNATIONAL      = 'X'
      CHANGING
        PAYROLL_RESULT               = GS_PAY_RESULT
      EXCEPTIONS
        ILLEGAL_ISOCODE_OR_CLUSTERID = 1
        ERROR_GENERATING_IMPORT      = 2
        IMPORT_MISMATCH_ERROR        = 3
        SUBPOOL_DIR_FULL             = 4
        NO_READ_AUTHORITY            = 5
        NO_RECORD_FOUND              = 6
        VERSIONS_DO_NOT_MATCH        = 7
        OTHERS                       = 8.

*    CALL FUNCTION 'ZH_HR_GET_PAYROLL_RESULT'
*      EXPORTING
*        IV_PERNR  = ET_HRPY_RGDIR-PERNR
*        IV_INPER   = ET_HRPY_RGDIR-INPER
*        IV_FPBEG  = ET_HRPY_RGDIR-FPBEG
*        IV_FPEND  = ET_HRPY_RGDIR-FPEND
*      IMPORTING
*        E_RESULT4 = LT_RESULT.

*&--- RT
    MOVE-CORRESPONDING GS_PAY_RESULT-INTER-VERSC TO LS_PC202.
    LS_PC207-ZCBRACD = IV_BRACD.
    LS_PC207-PERNR   = ET_HRPY_RGDIR-PERNR.
    LS_PC207-SEQNR   = ET_HRPY_RGDIR-SEQNR.
    LS_PC207-PAYDT   = ET_HRPY_RGDIR-PAYDT.

    IF ET_HRPY_RGDIR-ZZCGSAGREE NE 'X'.
      CLEAR: LS_PC207-PERNR.
    ENDIF.

    ADD  1 TO LV_IDX.
    LS_PC207-SEQKEY = LV_IDX.
**********************************************************************
* ### ## ##.
**********************************************************************
    LOOP AT GS_PAY_RESULT-INTER-RT INTO LS_RT
       WHERE LGART EQ '/101' OR LGART EQ  '/110'
               OR LGART EQ '/560' OR LGART EQ '/561'
               OR LGART EQ '/562' OR LGART EQ '/563'
               OR LGART EQ '/551' OR LGART EQ '/552' OR LGART EQ '/553'.

      ET_PC207-LNCNT = LV_LNCNT.
      MOVE-CORRESPONDING LS_RT TO ET_PC207.

      ET_PC207-PERNR      = LS_PC207-PERNR.
      ET_PC207-ZCBRACD    = LS_PC207-ZCBRACD.
      ET_PC207-SEQNR      = LS_PC207-SEQNR.
      ET_PC207-PAYDT      = LS_PC207-PAYDT.
      ET_PC207-SEQKEY     = LS_PC207-SEQKEY.
      ET_PC207-AMT_CURR   = LS_PC202-WAERS.

      CASE ET_PC207-LGART.
        WHEN '/101'.
          ET_PC207-EVCLV = '$T'.
          ET_PC207-EVCVT = 'Gross Payment'.
        WHEN '/560'.
          ET_PC207-EVCLV = '$N'.
          ET_PC207-EVCVT = 'Net Payment'.
      ENDCASE.

      READ TABLE LT_T512T WITH KEY LGART = ET_PC207-LGART BINARY SEARCH.

      ET_PC207-LGTXT = LT_T512T-LGTXT.

      APPEND ET_PC207.
      CLEAR: ET_PC207,LS_RT,LT_T512T.
    ENDLOOP.

**********************************************************************
*&      ## ### 20## ### ### ### #### ### ##.    &*
**********************************************************************

    LOOP AT LT_T512W WHERE LGART NE '/101' AND LGART NE  '/110'
               AND LGART NE '/560' AND LGART NE '/561'
               AND LGART NE '/562' AND LGART NE '/563'
               AND LGART NE '/551' AND LGART NE '/552' AND LGART NE '/553'.

      READ TABLE LT_T52DB WITH KEY EVCLV = LT_T512W-AKLAS+38(2) BINARY SEARCH.
      IF SY-SUBRC NE 0 .
        CONTINUE.
      ENDIF.

      LOOP AT GS_PAY_RESULT-INTER-RT INTO LS_RT WHERE LGART = LT_T512W-LGART .

        ET_PC207-LNCNT = LV_LNCNT.
        MOVE-CORRESPONDING LS_RT TO ET_PC207.

        ET_PC207-PERNR      = LS_PC207-PERNR.
        ET_PC207-ZCBRACD    = LS_PC207-ZCBRACD.
        ET_PC207-SEQNR      = LS_PC207-SEQNR.
        ET_PC207-PAYDT      = LS_PC207-PAYDT.
        ET_PC207-SEQKEY     = LS_PC207-SEQKEY.
        ET_PC207-AMT_CURR   = LS_PC202-WAERS.
        ET_PC207-EVCLV      = LT_T512W-AKLAS+38(2).
        ET_PC207-EVCVT      = LT_T52DB-EVCVT.


        READ TABLE LT_T512T WITH KEY LGART = ET_PC207-LGART BINARY SEARCH.

        ET_PC207-LGTXT = LT_T512T-LGTXT.

        APPEND ET_PC207.
        CLEAR: ET_PC207,LS_RT,LT_T512T.
      ENDLOOP.
      CLEAR: LT_T512W,LT_T52DB.
    ENDLOOP.

    IF ET_HRPY_RGDIR-ZZCGSAGREE NE 'X'.
      CLEAR: ET_HRPY_RGDIR-PERNR.
    ENDIF.

    ET_HRPY_RGDIR-SEQKEY = LV_IDX.

    MODIFY ET_HRPY_RGDIR TRANSPORTING PERNR SEQKEY.

    CLEAR: ET_HRPY_RGDIR.
  ENDLOOP.

  LOOP AT ET_PC207.
    ET_PC207-LNCNT = LV_LNCNT.

    ADD 1 TO LV_LNCNT.

    MODIFY ET_PC207.
  ENDLOOP.

ENDFUNCTION.
